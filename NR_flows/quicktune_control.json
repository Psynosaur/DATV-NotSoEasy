[
    {
        "id": "de03ca0fa3cffa4e",
        "type": "tab",
        "label": "QO-100 QT CTRL (v2)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f66ea7a729e4e4ce",
        "type": "udp in",
        "z": "de03ca0fa3cffa4e",
        "name": "",
        "iface": "",
        "port": "6789",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 80,
        "y": 320,
        "wires": [
            [
                "c9be3097b18520bb",
                "32377bb2aae184b3",
                "cace734b1b494326",
                "3f25f85bbc04a2ad",
                "14c72f41ab402ef9",
                "51135be0dda79c6d",
                "5d9081e28b587a41"
            ]
        ]
    },
    {
        "id": "cace734b1b494326",
        "type": "string",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "Find Symbol Rate",
        "methods": [
            {
                "name": "between",
                "params": [
                    {
                        "type": "str",
                        "value": "Srate="
                    },
                    {
                        "type": "str",
                        "value": ","
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 370,
        "y": 320,
        "wires": [
            [
                "8d4c1f8d5f2cac6b"
            ]
        ]
    },
    {
        "id": "32377bb2aae184b3",
        "type": "string",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "Find RX Frequency",
        "methods": [
            {
                "name": "between",
                "params": [
                    {
                        "type": "str",
                        "value": "Freq="
                    },
                    {
                        "type": "str",
                        "value": ","
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 370,
        "y": 500,
        "wires": [
            [
                "dcd2d5770a6f8a51"
            ]
        ]
    },
    {
        "id": "3f25f85bbc04a2ad",
        "type": "string",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "Find Tuner port",
        "methods": [
            {
                "name": "between",
                "params": [
                    {
                        "type": "str",
                        "value": "FPlug="
                    },
                    {
                        "type": "str",
                        "value": ","
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 360,
        "y": 380,
        "wires": [
            [
                "8b78508b96103cc6"
            ]
        ]
    },
    {
        "id": "8b78508b96103cc6",
        "type": "change",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "Change A/B to 0/1",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "A",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "B",
                "fromt": "str",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "6760b9919fc53d74"
            ]
        ]
    },
    {
        "id": "51135be0dda79c6d",
        "type": "string",
        "z": "de03ca0fa3cffa4e",
        "name": "Find TX Frequency",
        "methods": [
            {
                "name": "between",
                "params": [
                    {
                        "type": "str",
                        "value": "Freq="
                    },
                    {
                        "type": "str",
                        "value": ","
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "1c6a103ef26b4fc8"
            ]
        ]
    },
    {
        "id": "1c6a103ef26b4fc8",
        "type": "calculator",
        "z": "de03ca0fa3cffa4e",
        "name": "IF Tx Frequency",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "sub",
        "constant": "8089500",
        "round": false,
        "decimals": "0",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "f15bf51685160172"
            ]
        ]
    },
    {
        "id": "f5805d016d6bae79",
        "type": "comment",
        "z": "de03ca0fa3cffa4e",
        "name": "Get tuner parameters from QO-100 Quick Tune",
        "info": "",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "c9be3097b18520bb",
        "type": "string",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "Find LNB Lo",
        "methods": [
            {
                "name": "between",
                "params": [
                    {
                        "type": "str",
                        "value": "Offset="
                    },
                    {
                        "type": "str",
                        "value": ","
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "62225902ec263c24"
            ]
        ]
    },
    {
        "id": "f15bf51685160172",
        "type": "calculator",
        "z": "de03ca0fa3cffa4e",
        "name": "x 1000",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "mult",
        "constant": "1000",
        "round": false,
        "decimals": 0,
        "x": 850,
        "y": 200,
        "wires": [
            [
                "c0e181eaa0bf7917"
            ]
        ]
    },
    {
        "id": "8e76c247a1196e2a",
        "type": "udp in",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "",
        "iface": "",
        "port": "6790",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 80,
        "y": 200,
        "wires": [
            [
                "51135be0dda79c6d",
                "14c72f41ab402ef9"
            ]
        ]
    },
    {
        "id": "14c72f41ab402ef9",
        "type": "string",
        "z": "de03ca0fa3cffa4e",
        "name": "Find TX Symbol Rate",
        "methods": [
            {
                "name": "between",
                "params": [
                    {
                        "type": "str",
                        "value": "Srate="
                    },
                    {
                        "type": "str",
                        "value": ","
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "d1f900100c16dec9"
            ]
        ]
    },
    {
        "id": "d1f900100c16dec9",
        "type": "calculator",
        "z": "de03ca0fa3cffa4e",
        "name": "x 1000",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "mult",
        "constant": "1000",
        "round": false,
        "decimals": 0,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "9c3d68c843285d04"
            ]
        ]
    },
    {
        "id": "9c3d68c843285d04",
        "type": "function",
        "z": "de03ca0fa3cffa4e",
        "name": "SymboleRate",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/sr`;\nmsg.topic = topic;\nmsg.payload = payload;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 140,
        "wires": [
            [
                "040de946a96743c9"
            ]
        ]
    },
    {
        "id": "040de946a96743c9",
        "type": "mqtt out",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "16855981254e7e93",
        "x": 1390,
        "y": 320,
        "wires": []
    },
    {
        "id": "c0e181eaa0bf7917",
        "type": "function",
        "z": "de03ca0fa3cffa4e",
        "name": "SetTxFrequency",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/frequency`;\nmsg.topic = topic;\nmsg.payload = payload;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 200,
        "wires": [
            [
                "040de946a96743c9"
            ]
        ]
    },
    {
        "id": "7279689583239f7d",
        "type": "function",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "SetRxFrequency",
        "func": "let run = msg.payload\nlet topic = \"cmd/longmynd/frequency\"\nmsg.topic = topic\nmsg.payload = run\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 440,
        "wires": [
            [
                "040de946a96743c9"
            ]
        ]
    },
    {
        "id": "8d4c1f8d5f2cac6b",
        "type": "function",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "SetRxSymbolRate",
        "func": "let run = msg.payload\nlet topic = \"cmd/longmynd/sr\"\nmsg.topic = topic\nmsg.payload = run\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 320,
        "wires": [
            [
                "040de946a96743c9"
            ]
        ]
    },
    {
        "id": "6760b9919fc53d74",
        "type": "function",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "SetRxTunerPort",
        "func": "let run = msg.payload\nlet topic = \"cmd/longmynd/swport\"\nmsg.topic = topic\nmsg.payload = run\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 380,
        "wires": [
            [
                "040de946a96743c9"
            ]
        ]
    },
    {
        "id": "62225902ec263c24",
        "type": "function",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "String-to-Number (offset)",
        "func": "msg.payload = Number(msg.payload)\nmsg.topic=\"offset\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            [
                "01510ddda96e3076"
            ]
        ]
    },
    {
        "id": "dcd2d5770a6f8a51",
        "type": "function",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "String-to-Number (rxfreq)",
        "func": "msg.payload = Number(msg.payload)\nmsg.topic=\"rxfrequency\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 500,
        "wires": [
            [
                "9d8efbd1a6c92880"
            ]
        ]
    },
    {
        "id": "01510ddda96e3076",
        "type": "calculator",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "mult",
        "constant": "-1",
        "round": false,
        "decimals": 0,
        "x": 820,
        "y": 440,
        "wires": [
            [
                "9d8efbd1a6c92880"
            ]
        ]
    },
    {
        "id": "9d8efbd1a6c92880",
        "type": "sum",
        "z": "de03ca0fa3cffa4e",
        "d": true,
        "name": "",
        "topic": "topic",
        "x": 990,
        "y": 440,
        "wires": [
            [
                "7279689583239f7d"
            ]
        ]
    },
    {
        "id": "5d9081e28b587a41",
        "type": "debug",
        "z": "de03ca0fa3cffa4e",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 80,
        "wires": []
    },
    {
        "id": "0d14baeadecf671c",
        "type": "comment",
        "z": "de03ca0fa3cffa4e",
        "name": "Thanks DL5OCD",
        "info": "",
        "x": 860,
        "y": 80,
        "wires": []
    },
    {
        "id": "16855981254e7e93",
        "type": "mqtt-broker",
        "name": "Pluto_tuin",
        "broker": "192.168.2.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]