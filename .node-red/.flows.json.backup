[
    {
        "id": "2ec6a7ddfe0cd173",
        "type": "tab",
        "label": "DATV-Red v3.94",
        "disabled": false,
        "info": " - V1.something\r\n   - It hath the spectrum\r\n   - I clickith and it tunith\r\n   - I clickith and it setith stuff\r\n   - more control\r\n   - refactor code\r\n   - we no longer need all the files...\r\n   - restarting pluto sets strange settings.\r\n   - So we have explicitly set certain mqtt command in a certain order\r\n   - Rx and Tx offsets\r\n   - CTRL click tunes longmynd\r\n   - Fix bugs for CTRL click\r\n   - rx has seperate endpoint on API\r\n   - uplink correction\r\n   - Channel busy, you shall not PASS!!\r\n   - add device config, \r\n   - fixed longmynd frequency and sr messages we send in KHz and KS\r\n   - spectrum watchdog only watches you when transmitting . . .\r\n   - flow dependency install script `.\\install_dependencies.bat` RUN IT!!!\r\n   - Remove FECMODE from config-tx.ini\r\n   - Set it for each static profile 1-7\r\n   - Now variable fec set lowest 1/4 for qpsk and doesn't recalculate\r\n   - Will add support for 8psk etc.\r\n   - Fixed state injectors\r\n     - restores state after pluto reboot  \r\n   - If Restore state is Orange, PRESS IT!\r\n   - Channel calibration.\r\n     - [How To](https://youtu.be/-ZdQOVg26_0)\r\n - V1.9.9\r\n   - TS analysis - just for checking that TS is okay... \r\n     - Once tuned to signal, press TS analyse to display TS info(currently just callsign pop up)...\r\n     - There is room for more information gathering here as ffpbrobe is very verbose.\r\n   - Spectrum tuning bar has got a memory\r\n   - Constellation rate calculation changes, as per DL5OCD_Michael\r\n   - Tunes minitioune software by CTRL+ALT clicking\r\n   - bugfixes\r\n   - Consume Open Tuner websocket status, not useful atm...\r\n   - Prep for GUI setup, we can enumerate all current audio and video devices using ffmpeg\r\n   - Spectrum and band color pickers => ALL THE COLOURS OF THE RAINBOW!\r\n   - latest ffmpeg build\r\n   - node red task scheduler xml, import with windows task scheduler to have it start on logon\r\n - V1.993-c(chat)\r\n   - Minitioune spawn routine improvements.\r\n     - killing node red does not kill it. . .\r\n     - instead of spawing each time we deploy changes...\r\n   - Rx top tune bar\r\n   - Tx tune bar\r\n   - Spectrum has better memory...\r\n   - Bitrate calculation changes as per DL5OCD\r\n     - Changed the function to use lookup tables\r\n   - ffplay switch, off by default.\r\n   - rebuild ffmpeg, with vvc...\r\n   - Chat added\r\n     - This prompted a reshuffle of GUI\r\n   - Planning\r\n - V1.994\r\n   - ffplay controls\r\n    - Image size\r\n    - Start up volume\r\n    - on top ? \r\n    - tx clicky bug. . .\r\n - V1.995\r\n   - calculations\r\n - V1.996\r\n   - NCO offset after SR change bug workaround\r\n   - bitrate calculations\r\n   - Beacon RX capability \r\n   - use Minitioune toggle\r\n - V2.0-beta\r\n   - TSRate calculations, be gone, used the pluto's expected TS bitrate `/device/tx/dvbs2/ts/bitrate`\r\n     - This makes the calculations very accurate\r\n       - This would be part of profile settings in future, how video rates are calculated or set\r\n   - Setup from GUI(bye config-tx.ini) \r\n     - almost there\r\n   - Try and remove all DATV-NotSoEasy files, if its an ini file its a setting...\r\n     - almost there\r\n   - No more presets, rework in progress.\r\n - V2.1\r\n   - VVC calculation adjustments\r\n   - TS rate divider should be 1000 its already in bytes...\r\n   - Track ffplay windows position\r\n   - Orgainizing things\r\n   - chagning frame changes FEC table entries\r\n     - short frame and 9/10 doesn't work\r\n     - FEC table updates based on `modulation` and `frame` type\r\n   - We have completely removed DATV-NotSoEasy\r\n     - removed static profile loading\r\n     - removed `config-tx.ini` and `DATV-TX.bat`\r\n   - Profile saver and loading\r\n     - click `SAVER` and the profile you'd like to update.\r\n     - Only saves settings related to ffmpeg\r\n   - Now we need to add input boxes for all the things we put in the `ffmpeg string builder` function\r\n - V2.2 \r\n   - Bundled exe\r\n   - New ffmpeg build `03-Nov-23`\r\n - V2.3\r\n  - Includes shared build as well ffmpeg_\r\n  - removed libx265 bench video\r\n  - call ffmpeg directly\r\n    - no more escaping strings\r\n  - codec switch\r\n    - for easy tweaking\r\n - V2.4\r\n   - Made chat bigger\r\n     - User bar as well...\r\n   - Fix TX spectrum clicky bug\r\n   - Dynamic MQTT subscription\r\n     - We load settings from file `pluto.json`\r\n   - New codec settings in ffmpeg string builder\r\n     - fixes old driver issues - `UPDATE YOUR DRIVERS!`\r\n     - Node red also calls the absoulute path...\r\n - V2.4.1\r\n   - Service provider displays\r\n   - Gain button arrangement\r\n   - frequency and gain saved with profiles \r\n - V2.4.2\r\n   - Pass mode bug fix, kinda... \r\n   - Set callsign button\r\n     - Reboots pluto\r\n     - Is needed for first time users  \r\n     - No more duplicate user \r\n   - Profiles\r\n     - more settings XD\r\n   - no more shortcuts\r\n     - dvbs2_gui path\r\n     - vlc path\r\n   - Shared ffmpeg build `09-Nov-2023`\r\n - V2.4.3\r\n   - set callsign from `pluto.json` in `device.json` when starting app\r\n     - we do not need to wait 5s\r\n   - VVC bitrate `800`\r\n     - Added `vvenc params`\r\n       - Framerate\r\n       - Size\r\n   - open browser restored\r\n   - Its getting harder to break things . . .\r\n - V2.4.5\r\n   - Fixes `powershell` script permissions\r\n   - This should remedy blank stats in app\r\n   - Clicking signal tunes minitiouner\r\n   - Tx parameters can now only be set by click on channel bars\r\n   - Removed unused state check `API`\r\n   - Fixed toggle button states\r\n     - Use minitiouner\r\n     - Use ffplay\r\n     - ffplay on top\r\n   - Rebooting and power kill handling\r\n     - Press restore when pluto connects\r\n     - this is mostly automatic \r\n   - INPUT mode\r\n   - Audio channels\r\n   - UDP and RTMP addressess\r\n   - Added back db below beacon on spectrum\r\n   - Audio sample rate added\r\n   - Fixed ffplay powershell checking\r\n   - calculation node update   \r\n   - even better startup restore\r\n - V2.5\r\n   - New GUI layout\r\n   - `dashboard.json` will keep gui related stuff, like extra flow parameters\r\n     - `use_chat` default `true`\r\n     - `use_switch` default `false`\r\n     - `tasmota_switch_url` network address of sonoff switch\r\n     - Added Sonoff basic tasmota switch for amp\r\n     - This flow is disabled by default \r\n   - On air timer\r\n   - ffmpeg path variable\r\n\r\n\r\nVersion 3\r\n - Renamed project to `DATV-Red`\r\n   - Removes connection between this software and the rest...\r\n - Now `cross platform`\r\n - Paths for ffmpeg execs\r\n   - this is for `linux`  \r\n - `Linux` settings that worked under testing\r\n   - run `/scripts/install.sh`\r\n     - Installs node and xclip\r\n     - not sure about the others... \r\n   - Input types tested working, `UDP` and `RTMP`\r\n - Rx control\r\n   - You need to make sure the pluto can send data to `230.0.0.2:1234` on your network\r\n   - `config.txt` on pluto\r\n     - under `[USB_ETHERNET]` add `gateway_eth = x.x.x.x` with the IP of you network gateway\r\n   - VLC for playing TS\r\n   - Or use ffplay\r\n - Signal report\r\n   - Copies it to the clipboard so you may paste it using `CTRL+V`.\r\n - Rx timer for onboard longmynd\r\n - DVB-GSE\r\n   - This is probably the most awesome thing!\r\nV3.14_pi\r\n - Custom FFT sources\r\n   - change source in stats and settings\r\n - Linux device Paths\r\n - Receivers galore\r\n   - define in `settings\\receivers.json`\r\n - Moved json files to settings\r\n - removed repeated nodes\r\n - Local RX FFT\r\n   - `www` folder from `pluto` now lives in DATV-Red\r\n   - Uses the broker address to conenct to the `pluto` websocket for `FFT`\r\n - TSinput override\r\n - Main spectrum refactor\r\n   - Removed `Bootstrap` and `JQuery`\r\n   - This is prepping the code for the new `FFT` source\r\n   - spectrum.html (578KB)- `deleted`\r\n   - `spectrum_internet` folder contains new code\r\n     - 50KB in size now\r\n   - It is somewhat bigger now...\r\n - Too many changes to recall... ¯\\_(ツ)_/¯\r\n - Does it work, maybe...\r\n\r\nV3.69\r\n - Fixed spectrum MQTT client\r\n   - Spans and frequencies are labeled\r\n - Fixed linux start up bugs\r\n   - works again\r\n - Inject OS type before all else...\r\n - Double unmute bug is no more a thing on start up.\r\n - Auto channel calibration...\r\n - Clean up code and flows\r\n - Chat button\r\n   - I don't like it on the dashboard\r\n   - Opens url in default browser\r\n - More fixing of things\r\n - Full rx tuning range\r\n - GUI moved things around\r\n \r\nV3.79\r\n- Minitiouner startup bugs\r\n- GSE refactor\r\n- 1MS on reboot TX SR bug...\r\n- Tx mute should not trigger on startup\r\n- Cleanup of code \r\n- Wrap provider name in quotes    \r\nV3.9\r\n- New firmware version needed see repo\r\n- Spectrum changes\r\n- Detect signals symbol rate\r\n- tune with pluto spectrum\r\n- there is much to be done still.\r\n",
        "env": []
    },
    {
        "id": "9d964f25dcc4d750",
        "type": "tab",
        "label": "Local RX spectrum",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "34bd429848bdfd07",
        "type": "tab",
        "label": "Constellation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d7c58eb9e7b65abb",
        "type": "tab",
        "label": "DATV Reception",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e2c54979685d14cb",
        "type": "tab",
        "label": "Internet_spectrum_source",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "71a32338963256e1",
        "type": "tab",
        "label": "Receiver setup",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "27bb1861e8b5803b",
        "type": "tab",
        "label": "Chat",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "30d0afc93dfb235a",
        "type": "tab",
        "label": "Sonoff Basic tasmota",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "15d7457.fcac4bb",
        "type": "subflow",
        "name": "Change Flow Disabled",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "42613114.0e42c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 40,
                "wires": [
                    {
                        "id": "bc4c108.66f42f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "flowId",
                "type": "str",
                "value": "PUT_FLOW_ID_HERE",
                "ui": {
                    "icon": "font-awesome/fa-id-card",
                    "label": {
                        "en-US": "Flow ID"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "nodeRedUrl",
                "type": "str",
                "value": "http://localhost:1880/flow",
                "ui": {
                    "icon": "font-awesome/fa-chain-broken",
                    "label": {
                        "en-US": "Node RED api url"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "28611a179255d92b",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Spectrum ",
        "style": {
            "label": true,
            "color": "#001f60",
            "fill": "#92d04f"
        },
        "nodes": [
            "185cc616489b2615"
        ],
        "x": 22,
        "y": 1373,
        "w": 1350,
        "h": 720
    },
    {
        "id": "4bfefaeb7f82f4c6",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "settings restorer",
        "style": {
            "label": true,
            "fill": "#92d04f"
        },
        "nodes": [
            "7d6077cea86f2378",
            "b800a9f107cb3124",
            "a5d3ec26a3634e1e",
            "8c7733a45d32bf17",
            "98580b7a29e56897",
            "61748e994293d03b",
            "da0526f09e2cf48c",
            "c667113f68ae72fa",
            "a56122d1643df6cf",
            "a14cd65fe7fac722",
            "b9e877b123e7e841",
            "000aadf55c9c61da",
            "a8ded79652836a82",
            "d558ecd264feb081",
            "6afa3d5787c3c8dd",
            "fd45eaf559f851a8",
            "03f8ae8f0673a768"
        ],
        "x": 54,
        "y": 2159,
        "w": 1332,
        "h": 242
    },
    {
        "id": "92c95af69a0592d1",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "minitiouner manager (CTRL + CLICK)",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "93e49a0d26636e17",
            "274b304d8404d31e",
            "3a1ea47d1bb87edc",
            "25f28cc77302135e",
            "d7eb35aa7c9a4908",
            "58a19d39b1eb3028",
            "748c39ac026e286f",
            "8c74bea29b3244b0",
            "cdb49e4080a5ecb2",
            "865c9cd7fad69b04",
            "c8e4e5eb867b6e88",
            "048ae9d864757a44",
            "7daf6fdd23e69a4c",
            "edf957ba7edd18f0",
            "f5b8169559eb4b73",
            "a21fb06793441a8f",
            "34a5dcd51ab8d855",
            "517a7337244c67a7",
            "03deb776667356fc",
            "0861bf2c01e827fb",
            "ae0409453c6b420f",
            "f71130d672ef9830"
        ],
        "x": 3574,
        "y": 2951.5,
        "w": 1732,
        "h": 409.5
    },
    {
        "id": "6230aabbd2e27dba",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Find Windows devices",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "ce7363465aea09c2",
            "81e222ea9f35567c",
            "9d36e0103e48d0eb",
            "6c240bebc70161fa",
            "92680e051846903d",
            "061c529da56f288b",
            "d5144c0538d61e55",
            "6cdbc7e33d7543c1",
            "40fa6e863c8479b7",
            "3d8ee5b781b696ce",
            "1a213daf8dd78831",
            "6e36be08ede45d50",
            "350b02626581dd9b",
            "4fe9cd48590dddd9",
            "2da73cb53fcec181",
            "79ca0ff5d731c280",
            "5422df2970623734",
            "6fdf3a4e90a1a7d1",
            "5c9a646ff82923e6",
            "2b1a75997781caab",
            "88e8c5a8e4d381e5"
        ],
        "x": 2914,
        "y": 759,
        "w": 1332,
        "h": 362
    },
    {
        "id": "f6218c30fc4ec8b7",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "TS analyse with ffprobe",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "ef4d188e14a5bed7",
            "de0df3db418f176f",
            "b61cc3d9e4fb5593",
            "a773a2941ec99d3d",
            "92f5f62ed5cadc7c",
            "428a0fc47da7621b"
        ],
        "x": 2914,
        "y": 211.5,
        "w": 1012,
        "h": 149.5
    },
    {
        "id": "4b15878090b5548b",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Channel calibration",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "40caf32a1fc66903",
            "f34bfe124eab12e8",
            "78db13f139016718",
            "7aa0b41ed418f215",
            "eb77e66d5c0acdae",
            "cffbb4b1eb45b8da",
            "8879551bc103b8c4",
            "09f981f156e98728",
            "ba71cda151f629ae",
            "538b8437c0ff15ad",
            "19af65617856761b",
            "fa8a006c0eeeb105",
            "5423e8db27441d88",
            "f9b91a99d9c45cf8",
            "7f4880a53860cbd8",
            "f7ad545acf4151b3",
            "da43e8cbedf7105d",
            "edea5b446673c7e5",
            "fca0dc49e0dbc8c8",
            "231152bfc003a87e",
            "2e0709eeb3596e1a"
        ],
        "x": 2914,
        "y": 399,
        "w": 1792,
        "h": 322
    },
    {
        "id": "1f5722b7aff1a710",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Profile variables",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#ffffff",
            "fill": "#001f60"
        },
        "nodes": [
            "a0addd449f41ee70",
            "3c2665b335deadcc",
            "1bb882ca67278b69",
            "6e2b3c9e08662125",
            "ae40a9e5bdd0d113",
            "5989fbe4c1133db2",
            "b003500f8ea3ffe1",
            "d2a7c63d9b2fe699",
            "320ab26158363e57",
            "9c6e205117c83338",
            "6bfbf0101b2cd3a4",
            "34feacf8cac79e5e",
            "072a53bc4325b8e2",
            "da44a9637b5774a0",
            "3db47b10f2ad0660",
            "9afe5b50e0c2e439",
            "3eb70786a69e6c70",
            "1411feb53b899df2",
            "7e30ac73bb50c7aa"
        ],
        "x": 14,
        "y": 539,
        "w": 1232,
        "h": 342
    },
    {
        "id": "78b656eeda23dc5a",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "UI variable elements",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "c140f8f622e33238",
            "b2786302ea5b87d8",
            "8105dd1d410bdd4b",
            "43c746e7299a60f3",
            "23f54550ba5b6a79",
            "5d929a20d665af8d",
            "332cd73b70ec7dca",
            "b62a3f484010816e",
            "8d58e07463dad267",
            "ecb0e81ee3028514",
            "3ee02849882f8ff7",
            "679eb4e7914de8fa",
            "6b675d160a28a287",
            "498aacb4ed3dc458",
            "41882693fba06080"
        ],
        "x": 2094,
        "y": 199,
        "w": 832,
        "h": 242
    },
    {
        "id": "9f151e324008585b",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Device settings loader",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "3b59a3e0f9422294",
            "a49d494221eac856",
            "fd4311919bb382bd"
        ],
        "x": 1454,
        "y": 39,
        "w": 732,
        "h": 82
    },
    {
        "id": "359e81623396a0cb",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Device settings saver",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "3208e4f72b88b92e",
            "0c5e1df9f4cacd67",
            "c708b213a5701d8c",
            "99a4c83c076987df",
            "c76b9f49508d0e3f"
        ],
        "x": 3414,
        "y": 39,
        "w": 1032,
        "h": 142
    },
    {
        "id": "1473030260740438",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Bitrate calculator",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "dd4535e1d6b65679",
            "8c336280fd0fcc92",
            "8751a0dd93a8ed60",
            "d791940d6fb69cd4",
            "1827c9f76c07664e",
            "1c303a9ac462db5c",
            "38ad92b4a70e6127"
        ],
        "x": 2214,
        "y": 19,
        "w": 1172,
        "h": 162
    },
    {
        "id": "158a8e642f8da366",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "ffplay settings",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "0566516b8c2f5f60",
            "4823c6eed9e03e46",
            "e29b0f596d18b958",
            "c99bca3dafb85e2c",
            "0b68cbbed95acffe",
            "ade9869b5330a585",
            "e7685ca77d90f76f",
            "17d14c187e03e78d",
            "ce957a7adc0b6602",
            "a7b99958c4999cf0",
            "cb3c608d488f8a50",
            "7a37be749116f373",
            "5aec87e336f5bf99",
            "cfdd9fffb83031de",
            "de67b561ba5031e9"
        ],
        "x": 1454,
        "y": 139,
        "w": 592,
        "h": 322
    },
    {
        "id": "e6bc3a23f88991a3",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "tools",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "0d83df21a3badfd8",
            "ba28f83345465e97",
            "e7122ff60e30d850",
            "bd7080b9d634eebf",
            "de9023ef02fb7ae5",
            "97790ba38317b165",
            "c94c6e15b8ce6ac5",
            "b48d83349f462275",
            "0bdcee0b1767660d",
            "dc1201bc61b55d34"
        ],
        "x": 4274,
        "y": 771.5,
        "w": 672,
        "h": 237
    },
    {
        "id": "72ddf00d98862ef3",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "ffmpeg managers",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "023820f309b020da",
            "c4c1592e68a08ac2",
            "0c94d661261c1f6e",
            "f79b05ded58d1157",
            "ae8f84a8936bf21e",
            "378dce373fcfc379",
            "6e64d146147821e7",
            "3e90d102d97d90d1",
            "1de26d5def9ca4f5",
            "ec867dfd3be3e114",
            "d4a8f10165e682cf",
            "72b5ad0fc32a3da9",
            "7392fd205d401ef9",
            "0b5fd2d31add3324"
        ],
        "x": 2114,
        "y": 479,
        "w": 772,
        "h": 422
    },
    {
        "id": "78f7e24f56d510ed",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Profiles",
        "style": {
            "label": true,
            "fill": "#001f60",
            "fill-opacity": "1"
        },
        "nodes": [
            "6bdd18a478266cdb",
            "e41f78ecb41096ea",
            "26d4847d4e66ef33",
            "b12e26636bc4a755",
            "4ecaf72037fc5448",
            "321917da5c241be6",
            "37c0f70c56da77c5",
            "863b303484773cde",
            "6f5791e469edab55",
            "dd252f1ac7e17f8a",
            "6c2ed6b6c40e42db",
            "29f59051e6cbe148",
            "380f24164e357a8f",
            "66d128c2a339f3cb",
            "aed175dfbecd5c12",
            "a6736166225853ff",
            "0024149327ace021",
            "870adb347b148820",
            "da2d9235ea59d48e",
            "0e9c3a491a2a469e",
            "59cffb16faf16e25",
            "32d2cf35c427d5be",
            "770f2093391eb417",
            "9dc24cfa530ed99e",
            "475f01a383d6b75e",
            "3e225268e88814d4",
            "86a53ceb1364b3e0",
            "fc3424b338c6f01a",
            "e733dc0c81143d51",
            "181bc2bec72e1d2d",
            "e5b0fa3224166063",
            "767df388fc1df0e3",
            "2bc31358161b2eb4",
            "7b165d480a2ae435",
            "a421a70d3ead9cd8",
            "a784bb0de8df6b05",
            "193a32ea6df689be",
            "a1c31abd4376d5f1"
        ],
        "x": 14,
        "y": 899,
        "w": 2052,
        "h": 422
    },
    {
        "id": "d320c7a134a3a36a",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "MQTT RX",
        "style": {
            "label": true,
            "fill": "#6f2fa0"
        },
        "nodes": [
            "36a9e71117a34327",
            "babe629c1afb5e8b",
            "45967ab8c3bd9a21",
            "d2b51c2f7d254def",
            "306b57e47411d35c",
            "23773127332c2b1f",
            "9aa8ef50bbbe8e2d",
            "d26972d34559fd63",
            "a27d9eec9ce16ab7",
            "b601d6596401a754",
            "b6d03834b636d44d",
            "9cea687107707a6b",
            "50bf46056b71ec3a",
            "5d39969ea562b92d",
            "18b3a285bc3b304a",
            "59e507f64ad42e32",
            "4ddefda4dc462586",
            "a3b043862df5d1c9",
            "203d8eabee6242e7",
            "33155f6018ceeffa",
            "7a4a8d639646cff4",
            "96d158d7fdc5ee78",
            "746af9f95f7438cd",
            "9fb89f4342f8baf0",
            "e2ddf0eaa1468069",
            "91114b46796f2205",
            "aeded232cbae2ef0",
            "8bcc3bb6537a078d",
            "2e28b17c64c14184",
            "04d27b36a3ee9934",
            "25a924b7dc1d4576",
            "c25d1cacc8057d1d",
            "0b6d33db8fc071c9",
            "ac88fa94a49129ec",
            "347c8041af1a52e0",
            "8ec0b8acdb25a6b7",
            "1cc9bf09772f06d3",
            "54e338fa6a48fd5b",
            "ae61c1e19f8634d0",
            "8a6e91746db5e484",
            "31eb287a0ca0a45c",
            "508bccc9de4506fc",
            "c8042db5402565df",
            "8e34088eda2b7263",
            "2acfb18cb9db9a02",
            "0813517cbc9b99f3",
            "c4f36ff7105c2dd1",
            "de949c9780005117",
            "c44d0cb54ec5e706",
            "4fd321bd9fa719f3",
            "f1d972d20ef54cf2",
            "ef310c8290b45f2f",
            "728cb5ecbddc04f0",
            "b22449c1178f10d2",
            "9cb8fc791809bfd9",
            "1decf932a1bf2fcd",
            "ba4a435e3fbcd377",
            "a944ecbfc565c58b",
            "54cbda477035a37f",
            "04e9fefc43a9ccbf",
            "b733d75a1c79f1a2",
            "850a280f13dbdd1a",
            "32e18f58d4f086f8",
            "76bed5f0ebc81a4c",
            "56ad120991eb3c83",
            "4dc0d6bc0972a150",
            "cf6155c5314434de",
            "24ba1c8ca7aea429",
            "9f35c0e151e986ea",
            "8bb744f5177e71ff"
        ],
        "x": 74,
        "y": 2779,
        "w": 1232,
        "h": 1122
    },
    {
        "id": "c927282dfd987c70",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "UI inputs",
        "style": {
            "fill": "#0070c0",
            "label": true
        },
        "nodes": [
            "462c1bee49073de7",
            "5f71534b6c02e324",
            "f29b8d8eb8441fde",
            "508ff50f2a470219",
            "f0c209e940860820",
            "dffe1e50bcaeb0a5",
            "be4a04a5a054f988",
            "2e677684d13ac6e0",
            "aa6d588a480f161c",
            "ddf60892397fbc68",
            "1969a0cddc042f2e",
            "f38c438a231661c6",
            "ce96de0f7dba91c5",
            "16a3685e614e0995",
            "0d6f171d50f0a0c3",
            "33a0bcca85522580",
            "b4aff87862b89a39",
            "edd3123535a89e2c",
            "bdfdc40f3409d5eb",
            "2d16a7785c1bb3dd",
            "b019a1fc7eadfd0f",
            "dc1c3fa4fcdb0856",
            "a010bf6559579ac1",
            "70cb26f62de94a5d",
            "93d8b2c69bdc7792",
            "7d0cac41101d2058",
            "cdd0f03b36b22781",
            "8ee9aef755219d8b",
            "2eb9a7d4d6079e45"
        ],
        "x": 2014,
        "y": 1439,
        "w": 292,
        "h": 1702
    },
    {
        "id": "5ed3848da82bcc9a",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "state restorers",
        "style": {
            "fill": "#92d04f",
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "30575829e5293823",
            "50469be080414712",
            "7806bcad704424dd",
            "3ea225876900d6cc",
            "04c8e605a02922e7",
            "5256f916f7a707b7",
            "0116ed63e32c47c2",
            "88e74c15960c22df",
            "475c87a434b0f7e6",
            "271147b0966b0076",
            "570136a8608a39a6",
            "5f939f9512d4ba6e",
            "5937fb0a3c880ee7",
            "4e9c1f576e08279b",
            "204d7697c1384266",
            "2b4b283274423aba",
            "35c6cd1a805aeca5",
            "f118040acbbf5f44",
            "4aff6b42b30f122f",
            "3845b79a049ba0b1"
        ],
        "x": 1434,
        "y": 1919,
        "w": 332,
        "h": 802
    },
    {
        "id": "44bb8f59b40e58cf",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "MQTT TX",
        "style": {
            "label": true,
            "fill": "#92d04f",
            "label-position": "n"
        },
        "nodes": [
            "faf5a12234cf3d6a",
            "645cda7b921399b2",
            "64a9de4a4bd4dab6",
            "1b201451fae7fae6",
            "d57c9c3c32e5a58b",
            "7f859a7a7ee27404",
            "68e079e44b9dd5c2",
            "5af92414e3f29873",
            "524de1980547eaea",
            "5d8a44d8d3dfd931",
            "33dc958065cdada2",
            "e91e846502f35c90",
            "14e5a286770d3cd0",
            "cec2f56be1fccf51",
            "152082051caa1d1d",
            "88c17ad9f892b06d",
            "762e2c70acd9ebe0",
            "b1fb472a0a5e24a7",
            "37b18a222ae30d52",
            "b6da9101dce07fd1",
            "807128449158f2eb",
            "f65818d390a71152",
            "9695655b0a719b4a",
            "20fcf5f8b61db48f",
            "89b95ad3b6453036",
            "af45e1bfc3e75ecb",
            "aa4a256618f7c4a6",
            "55bca069bdb08ee7",
            "c5ceed661f8529ce",
            "0c74362e749bcdc4",
            "4a50af4869a33baa",
            "b1b6fc76c723e0f1",
            "7b06e3153449eb9a",
            "d533bf0f097fedc4",
            "f7a31bdb75d1c530",
            "5c31dbeab217c8e9",
            "1d6a50722e33c015",
            "e1d2a880c9ca99a4",
            "3084477086b5b8f2",
            "1b8ee9dbe0155dcd",
            "e5b15ef8662e723b",
            "34093316d4a4742b",
            "2b25acbe5bad144e",
            "c20ffdd3c22ba8da",
            "0d29c855caae3889",
            "cf798b4f51cbac85",
            "343e66e2cb1a67c3",
            "4a0642add9f7b983",
            "2d85a16a42027727",
            "2d1d2f2c5a3e44b6",
            "947313bf5f0e22d1"
        ],
        "x": 2334,
        "y": 1219,
        "w": 1172,
        "h": 1762
    },
    {
        "id": "9286ad1292f976c7",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "GSE",
        "style": {
            "stroke": "#0070c0",
            "fill": "#6f2fa0",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "fcc82dc0c60388f5",
            "bb8dee7ad47db69c",
            "44f0b7da719f1757",
            "3b86358ac5d8c435",
            "1de281946f74c19b",
            "6f6601d609b6460d",
            "01840b0f91ef20b4",
            "1ca63cc42b3ba5f8",
            "5db94457ba6ae6b6",
            "9dc994ba008186e4",
            "41df24c97592fd90",
            "0bd56278afe23f51",
            "4c0b0ccf968a8497",
            "19b9271d7a62e4a5",
            "2f1edd8276585605",
            "2ecb46ec465f3a11",
            "5635c4cc49824c04",
            "71e2bcf77d069c8e",
            "4cbca64d40e28578",
            "cdf1aaaf980ac998",
            "d508b43091f81d07",
            "361d78ea269b5bbd",
            "3cb48bb52bd5e53f",
            "ce3c8a12ea185160",
            "73b256567fa9437e",
            "226d23b60515dc29",
            "8ce724b0fdbe7f04",
            "5cb8fd575bd887c8",
            "eea6578b7b1c97c9",
            "4bcbcb9cfd193fed",
            "7a479b074b745c8f",
            "ad59cd30b3cc7fcc",
            "107deb095943505f",
            "12e13fa8933eafa7",
            "3ba5b7893d572d90",
            "56e7df909b256eec",
            "e481ee2481f35f02",
            "7327672ce1acf181",
            "f522633969ddbe94",
            "0eeb16760c96d1fa",
            "38932643615d50c9"
        ],
        "x": 2354,
        "y": 2999,
        "w": 1002,
        "h": 822
    },
    {
        "id": "9b97da84f20d2dc4",
        "type": "group",
        "z": "e2c54979685d14cb",
        "name": "refactored spectrum",
        "style": {
            "label": true
        },
        "nodes": [
            "01cd46f702ab295a",
            "f7591f90facf0e0b",
            "2acadfcfdd128dd9",
            "bbf9e870bbb3141b"
        ],
        "x": 574,
        "y": 39,
        "w": 712,
        "h": 82
    },
    {
        "id": "2406e32417780de0",
        "type": "group",
        "z": "9d964f25dcc4d750",
        "name": "plutos www folder",
        "style": {
            "label": true
        },
        "nodes": [
            "1e0841f1.ac68fe",
            "d2c0bc2a.05a02",
            "f3b55ea2.f4d51",
            "2131639cdf6f62a5",
            "c6e41b39dc0902c3",
            "de3615657f5f8b75"
        ],
        "x": 48,
        "y": 39,
        "w": 1118,
        "h": 368
    },
    {
        "id": "1d8e778f40edcc21",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Pluto and callsign setup",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "25874e1909171caa",
            "a7dfa23e416d0533",
            "140f70c9bf342365",
            "2f35ec1420f48a0f",
            "7a8137e70ed5fb2b",
            "33c3427b6f2eba85",
            "02f7103302a82356",
            "f8e15444b3a32973",
            "f86b01b311946b8c",
            "f9918b65a647c1e1",
            "cbb3d29b1d836219",
            "4dce4a7940b4c36d",
            "916ef06cc52d52e2",
            "4fb1058936a12cd1",
            "5802767bfd215d2b",
            "d1ad7660a13218b1",
            "223c50087c6a3388",
            "42b2f3084f79ec8f",
            "07279ec1e0bf1661",
            "b66465fdf55144d8",
            "f4ad9554731575c3",
            "701b4659bc7d55d4",
            "e5e82c410614ac58",
            "7fd6bfdcbfc713bb",
            "6f5ef4ad92a31857",
            "e3acc1961332372a"
        ],
        "x": 28,
        "y": 39,
        "w": 1378,
        "h": 468
    },
    {
        "id": "b40c8f098d8e9ccc",
        "type": "group",
        "z": "71a32338963256e1",
        "name": "add receiver",
        "style": {
            "fill": "#3f93cf",
            "label": true
        },
        "nodes": [
            "390ac0996bfbf3e8",
            "583e05834ada403d",
            "56dc16b9e1976cab",
            "6f0dfc4da4e5adba",
            "735e31a90de36b9a",
            "1e70a3d6fd597ab5",
            "d1aea45a350e8689",
            "8822bec48f5c42d6",
            "ae1646fbdd5d8b9c",
            "282aef0db727d395",
            "a51c17448cbde903",
            "731a3c957fc08056",
            "4330f69a2f5fe062",
            "0d7bed971ef2d798",
            "7409d36e4650ab84",
            "4696f747c19341dd",
            "8ebc9dd6c04d47a7"
        ],
        "x": 54,
        "y": 59,
        "w": 1472,
        "h": 242
    },
    {
        "id": "f06e928c83c73984",
        "type": "group",
        "z": "9d964f25dcc4d750",
        "name": "Mocked MQTT topics",
        "style": {
            "fill": "#3f93cf",
            "label": true
        },
        "nodes": [
            "53d85ccc1ca38e73",
            "6860085513c10a64",
            "5e009d852e836e3b",
            "1abba09f50e1a73c",
            "97ea4ec5dc95813b",
            "f51752e8606fb64c",
            "0e96496b235b3fe0",
            "c98f9bfdc4eab524",
            "9f6a4873cc3768b5",
            "4536019d942cbd41",
            "9af1f8975e61cc08",
            "f5eef0dfd7e39ee3",
            "07b220183ff77006",
            "7328fadc376b984b",
            "c27c4949eee35a7e",
            "8b5dc62e18f85b99",
            "6ffcd71ddb97f2dd",
            "4a2dcbac0d2b3e30",
            "8123e129750f95b0",
            "03727daaaf94f10a",
            "6ba4f27abdc0a2d7",
            "95acf832281a1027",
            "b20d795a08271867"
        ],
        "x": 74,
        "y": 959,
        "w": 1292,
        "h": 422
    },
    {
        "id": "97ecf1ac9459a777",
        "type": "group",
        "z": "9d964f25dcc4d750",
        "name": "Spectrum controls",
        "style": {
            "fill": "#addb7b",
            "label": true
        },
        "nodes": [
            "470e4d8abf29a205",
            "b47b8870b7c9bd24",
            "bb77722b6c2658e8",
            "77dc98e0de74c888",
            "aa44e5106814ab9f",
            "30794624a6a04c15",
            "0a9fe9e2623385cb",
            "3ba43ff973399e13",
            "b82cad0a3cddc877",
            "f72c1ae9d1dc7d89",
            "7d69601736a74273",
            "12159992489b0591",
            "bff2bb43c29c79e5",
            "e688634a9f60c746",
            "818602f620560caa",
            "6adfe6d609aeb90a",
            "5493fb3252e35009",
            "4497dbfe8502fab3",
            "98c8f2e2679a3123",
            "a6254b8eb8807472",
            "c4b45eae95987a16",
            "c0a747bc908afade",
            "db57ce0d38f95c32",
            "9cfb443df5cb5da9",
            "de2e4421edba4493",
            "860f19a6077ccf7a",
            "8142d24399193d99",
            "90ab66a37fc92ccc",
            "05155ef717c0fb68",
            "8be1ad29d1e86276",
            "ed827f68456e01f6",
            "0d2cd9e73e204cef",
            "f3e27e7da4f03be6",
            "f9e2e71dd4f166ca",
            "0b50c351304db3b5",
            "0c34bd3ef0714d28"
        ],
        "x": 54,
        "y": 439,
        "w": 1452,
        "h": 502
    },
    {
        "id": "6a8835db32d9f8ed",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "style": {
            "stroke": "#30363d",
            "stroke-opacity": "1",
            "fill": "#010409",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#e6edf3"
        },
        "nodes": [
            "47d25b72b324c7b6",
            "d4c9f72959210bb4",
            "1c72db672d937ce0",
            "f477395f8ca8b572",
            "1e1b426c252bac24",
            "aa5484e4337c7485"
        ],
        "x": 3614,
        "y": 1239,
        "w": 992,
        "h": 82
    },
    {
        "id": "50b9700a9a4f731c",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "spectrum settings",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "f132495fecc36548",
            "d46af93abcd001aa",
            "63d3cb318a61e47d",
            "5a94e29921a8893f",
            "d03c46be6294064a"
        ],
        "x": 3614,
        "y": 2599,
        "w": 1012,
        "h": 82
    },
    {
        "id": "a01b8f8a522d73dd",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "style": {
            "stroke": "#30363d",
            "stroke-opacity": "1",
            "fill": "#010409",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#e6edf3"
        },
        "nodes": [
            "42ec474e.43e4c8",
            "e16e75f65f1a42b2",
            "387cd20cdde7b2fa",
            "d715fd10ad04ca6e",
            "18d44df70262aa37",
            "83b62f5224016f4c",
            "5538dd0dd8c2d484",
            "6be46c0407607ba9",
            "b460c8e9f7e52b65",
            "ba93cd72c45535cd",
            "d7d044e9b570db55"
        ],
        "x": 3614,
        "y": 1339,
        "w": 1312,
        "h": 162
    },
    {
        "id": "a70e8b8a362b3c9d",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "dvbs_gui_path",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "9dc824c56f4f3a2c",
            "93f563206f98cde4",
            "a53750444a663bac",
            "06596bd1203529e7",
            "3aadcd5b16a568f8",
            "e4d49de5ef76b48c",
            "973c10af4dbfb52e",
            "ad88d2145d494f9b",
            "30437f33c9972f90",
            "c5f093958cc5103e",
            "21bcf98d22dabf77",
            "77d1845d8d7e97dd",
            "7c666d4b66bdb1c1",
            "382c0ba4ac25e933",
            "a65e0da8e66d8647",
            "08bb407e7555f53c",
            "05d216119b33b43c",
            "4cea289b661afb2e",
            "f67aefa381b6dc8a",
            "55f7b77a67cc54df",
            "587ba7dcecad6d47",
            "8c3e78c6704e92a2",
            "517a1391985bff60",
            "bdad9791244eab3b",
            "21b402fbd4675dcf",
            "87560b970ae3d1ca",
            "46a46f85dadd76f6",
            "2427bded041bffae",
            "81633328a5ead7be",
            "3b2bfc1de615d1c2",
            "e48b23e1d46a182a",
            "1b33b2ee0e91bf0a",
            "f410cc2d0716c94e",
            "42fadc716a7bbdd3",
            "95edb2da87d8257d",
            "fa64203cbbfc748d",
            "f59601c8ef54fb30",
            "9077d20ca65ab2fd",
            "264f78c58101c550",
            "bcea6a9dea321503",
            "d8696aeccbf8391b",
            "9fc2b2b1712c4ac3",
            "cf620cc1430c2ec5",
            "e63faf17ba00a395"
        ],
        "x": 3614,
        "y": 1839,
        "w": 1212,
        "h": 602
    },
    {
        "id": "68ebf17055b62392",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "style": {
            "stroke": "#30363d",
            "stroke-opacity": "1",
            "fill": "#010409",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#e6edf3"
        },
        "nodes": [
            "e9c772547c5ee64e",
            "72e2801309ab6835",
            "fcd4072301b187df",
            "0f8ccbb1c38e5852",
            "99e9d49edd3bd44a",
            "66edc2f79dcda9bc"
        ],
        "x": 3614,
        "y": 2799,
        "w": 952,
        "h": 122
    },
    {
        "id": "16b2433f74b66b9a",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "style": {
            "stroke": "#30363d",
            "stroke-opacity": "1",
            "fill": "#010409",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#e6edf3"
        },
        "nodes": [
            "7f3d237a25e7a435",
            "68abb4393d028775",
            "06b559ab4aca15cf",
            "6f532c25947db01e",
            "2e0d409b4b551cdb",
            "a7a765ba72c31ee8",
            "7a6a3cfb847eed62",
            "d155c2f4a4a95ddf",
            "4b0e4ceac0843b6c",
            "bb9f89e948bdda86",
            "17889543320f7239",
            "793fd51eda4da3b4",
            "976add8cdc661885",
            "afc105ffdbfd6b67",
            "edaef66bea244028",
            "1476c7ae3ee7429f",
            "bda9d0fa12b73a7b",
            "9707e10f88d44a13",
            "e4f4bb8ab484614c",
            "268823098bee16e3",
            "7de98b3ad530b9ed",
            "adec478022684111",
            "3867abc64be57709",
            "5742c2b6848b86ca",
            "b0cd2e5a31c4cd6b",
            "4d3826e743c485db",
            "c79482819129c76e"
        ],
        "x": 3612.67578125,
        "y": 1519,
        "w": 1633.32421875,
        "h": 305
    },
    {
        "id": "9c7cb0f498a9f7e2",
        "type": "group",
        "z": "34bd429848bdfd07",
        "name": "Constellation",
        "style": {
            "label": true
        },
        "nodes": [
            "ee10e75eb6c917e8",
            "8a1fb5a4ffa544fd",
            "dd2992c2880bcc1f",
            "692cfca16036ea93",
            "966f8abcef78816c",
            "35ee7231ba2e92d3",
            "6fbbca7ba1ed3157",
            "3fcda18d3f907163"
        ],
        "x": 34,
        "y": 19,
        "w": 1032,
        "h": 162
    },
    {
        "id": "2a6eb2e492bee274",
        "type": "group",
        "z": "34bd429848bdfd07",
        "name": "static vendor js file local spectrum uses this too",
        "style": {
            "label": true
        },
        "nodes": [
            "02f3e9ac818c03e0",
            "51d2c788419a360e",
            "819d5b65838d0f8c"
        ],
        "x": 34,
        "y": 199,
        "w": 752,
        "h": 82
    },
    {
        "id": "97fae7a46f8ffe23",
        "type": "group",
        "z": "e2c54979685d14cb",
        "name": "static files for this flow",
        "style": {
            "label": true
        },
        "nodes": [
            "40362380a38ea4c4",
            "5a1f6104e1ceca1d",
            "c265fbc2639366a2",
            "a96d8fa6d1a40a14",
            "0cafa97494de79ac",
            "496ca8b3595b7b48",
            "0a1fe3cce13a2b95",
            "6fcf19edb84cb384",
            "2a3dc125f08d620e"
        ],
        "x": 54,
        "y": 159,
        "w": 872,
        "h": 222
    },
    {
        "id": "c070d9c6c2a6ac1b",
        "type": "group",
        "z": "d7c58eb9e7b65abb",
        "name": "Signal report",
        "style": {
            "fill": "#3f93cf",
            "label": true
        },
        "nodes": [
            "f6e02394155b93b8",
            "da68bec334fc010b",
            "32bc79c700bb824b",
            "2d249c596e884cd8",
            "8b74e5e219711233"
        ],
        "x": 194,
        "y": 1611.5,
        "w": 792,
        "h": 149.5
    },
    {
        "id": "850ce0dd6b054d30",
        "type": "group",
        "z": "27bb1861e8b5803b",
        "name": "chat button and its iframe",
        "style": {
            "label": true
        },
        "nodes": [
            "9d1da64159907870",
            "34ce25461d4e6d42",
            "e0101a5a9a04f1aa",
            "7db57965.76d468",
            "5e1f0081.6dc3c",
            "ece06122.7e762"
        ],
        "x": 34,
        "y": 39,
        "w": 1032,
        "h": 82
    },
    {
        "id": "f6c11774649f8d00",
        "type": "group",
        "z": "30d0afc93dfb235a",
        "name": "enable these two to enable HTTP mode",
        "style": {
            "label": true,
            "fill": "#92d04f"
        },
        "nodes": [
            "511e874b9e79d9c1",
            "60df7c8dc6d1de55"
        ],
        "x": 74,
        "y": 19,
        "w": 692,
        "h": 82
    },
    {
        "id": "936b15192e58877f",
        "type": "group",
        "z": "30d0afc93dfb235a",
        "name": "MQTT control",
        "style": {
            "label": true,
            "fill": "#9363b7"
        },
        "nodes": [
            "a8596f60466f8cf4",
            "4a2877dc5a808a1b",
            "7dae242b8566df9b",
            "4169371e544b9666",
            "857224de9710110f",
            "449f2a69fa24e7fd",
            "ff147eec327f33fe",
            "bc7c3ea6788d2b58",
            "fabd30d9f5135abd",
            "d625fe7265cbfada",
            "29a3c6a207d493f9",
            "b7d0059588d03318",
            "33b81b6ee3d763f8"
        ],
        "x": 54,
        "y": 559,
        "w": 1492,
        "h": 162
    },
    {
        "id": "4da866f299df009c",
        "type": "group",
        "z": "30d0afc93dfb235a",
        "name": "HTTP control",
        "style": {
            "label": true,
            "fill": "#001f60"
        },
        "nodes": [
            "f36ea5478cd26f4c",
            "8e6e379dd23ad541",
            "2d87948c62090044",
            "3d1df83227b48c35",
            "ce64bf27f1fae6be",
            "cf17c69c227b6825",
            "f90b10e6825765f0",
            "e4b9db07aee76ef2",
            "eef90d12fe67652d",
            "70dc135bb18e2bd6",
            "caa457b0361bf0ba"
        ],
        "x": 54,
        "y": 119,
        "w": 772,
        "h": 382
    },
    {
        "id": "a5269925ed64322c",
        "type": "group",
        "z": "d7c58eb9e7b65abb",
        "name": "TS analysis",
        "style": {
            "fill": "#addb7b",
            "label": true
        },
        "nodes": [
            "a90f9c1c2af87afa",
            "4f2dbe83f0fbb265",
            "410d95bdc81fa714",
            "cfc26d33717144bd",
            "85960296b05e0f13",
            "32d49dfe659b035a",
            "c5ac2e82dbf465e3",
            "ede5df2f5091c5aa",
            "f298934c06e2694e",
            "b4d68204ef4121e0",
            "27b3329bfce21726",
            "3c63daae2a5e8e99",
            "28bb27b4e9707d84",
            "175d46a089ea6ba5",
            "9575b4e1e6fa27ea",
            "0a2e232f723d91c4",
            "d50ebc8190dac5c2",
            "41d02716c7ee4788",
            "da95ef82cdeaed72",
            "0dd1ad16dedd4d28",
            "6f8a9a80f62fe1e9",
            "a331c7113bb6fa38",
            "86a761d0d89ee362",
            "1e5acd6b13718ebb",
            "6925ed56180918ca",
            "097842d26da1c238"
        ],
        "x": 174,
        "y": 1799,
        "w": 1452,
        "h": 402
    },
    {
        "id": "5c31dbeab217c8e9",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "pass mode bug fix",
        "style": {
            "label": true
        },
        "nodes": [
            "50c309ece9e67b71",
            "0776d1539b28a948",
            "f8b6ea291e46f876"
        ],
        "x": 2754,
        "y": 2719,
        "w": 652,
        "h": 142
    },
    {
        "id": "185cc616489b2615",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "name": "Radio HTTP API",
        "style": {
            "label": true
        },
        "nodes": [
            "5a74b55c01f09bf7",
            "df0fb204fd14a618",
            "079e67d7c1e3e99d",
            "553167af0b3221c1",
            "0d9e815c3c9d7d4a",
            "d95cd044385c2ba5",
            "3bec8a3571888efd",
            "0c5fbec92e79eb41",
            "b86aad85fafa0443"
        ],
        "x": 48,
        "y": 1399,
        "w": 1298,
        "h": 668
    },
    {
        "id": "b66465fdf55144d8",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "read pluto.json file",
        "style": {
            "label": true
        },
        "nodes": [
            "8d24e6025fe47ef5",
            "cdc147736509f758"
        ],
        "x": 234,
        "y": 299,
        "w": 532,
        "h": 82
    },
    {
        "id": "e3acc1961332372a",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "first to load",
        "style": {
            "label": true
        },
        "nodes": [
            "804a1873f1bbe26f",
            "42bc7dd8aab51b22",
            "85a46cf1a97d17bc"
        ],
        "x": 54,
        "y": 399,
        "w": 492,
        "h": 82
    },
    {
        "id": "de3615657f5f8b75",
        "type": "group",
        "z": "9d964f25dcc4d750",
        "g": "2406e32417780de0",
        "name": "static files for this flow",
        "style": {
            "label": true
        },
        "nodes": [
            "026128c195db1eef",
            "627cec867371bde2",
            "3c45a7075be468c5",
            "b64eeea466d6cd08",
            "966872edde445388",
            "eecde73600e53333",
            "dc26a162f73df5e8",
            "6312034bd95423a1",
            "1f4aee22e5bdb8cb",
            "a29f718da4699db4",
            "adf66d2e6169af92",
            "12183c5ef3ad71e6",
            "647b655c9e80836a",
            "edb6738c089743d7",
            "0dd67a65a9a17989"
        ],
        "x": 74,
        "y": 139,
        "w": 872,
        "h": 242
    },
    {
        "id": "079e67d7c1e3e99d",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "Longmynd onboard tuning",
        "style": {
            "label": true
        },
        "nodes": [
            "af0afe1e86d6e2ce",
            "6154ee8d719adfbd",
            "463481925ac847f1",
            "2a5a3cc2d63b2942",
            "6e96b284f2323a85",
            "2c6310aae8f397fd",
            "8764be884d895f57",
            "2265f82b17bf49e1"
        ],
        "x": 454,
        "y": 1479,
        "w": 792,
        "h": 162
    },
    {
        "id": "553167af0b3221c1",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "Tx controls",
        "style": {
            "label": true
        },
        "nodes": [
            "64b76a53a5576a2f",
            "63698f5f30341a43",
            "e56ed07756258705",
            "7d18f3e7511a4c0f",
            "11531a3595ef0f5a",
            "430d098e101f5c6c"
        ],
        "x": 474,
        "y": 1659,
        "w": 712,
        "h": 162
    },
    {
        "id": "0d9e815c3c9d7d4a",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "config endpoint for our widgets",
        "style": {
            "label": true
        },
        "nodes": [
            "fc107bad9688d742",
            "74e7eb9fa07e7e53",
            "cc29196277550f51"
        ],
        "x": 94,
        "y": 1679,
        "w": 252,
        "h": 162
    },
    {
        "id": "d95cd044385c2ba5",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "Minitiuner channels",
        "style": {
            "label": true
        },
        "nodes": [
            "1eba27791287fb18",
            "515e9264fb253fbc",
            "2f37f6fa43572da4",
            "c82484c6378aaa4e"
        ],
        "x": 274,
        "y": 1959,
        "w": 992,
        "h": 82
    },
    {
        "id": "3bec8a3571888efd",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "HTTP endpoints",
        "style": {
            "label": true
        },
        "nodes": [
            "117e420d4df518b1",
            "b828f6a6.47d708",
            "1052941d.efad6c",
            "3d529b46ee563149",
            "69d6d63ac36eab12"
        ],
        "x": 74,
        "y": 1479,
        "w": 332,
        "h": 202
    },
    {
        "id": "9b3296db2e0c849f",
        "type": "ui_tab",
        "name": "Transmission and profiles",
        "icon": "fa-spinner fa-pulse",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b9e32bd91ff08aa2",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#931010",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Custom Dark",
                "default": "#4B7930",
                "baseColor": "#800800",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#7c1a13",
                    "value": "#800800",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#800800",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#343a40",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#cc0d00",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#343a40",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#800800",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#343a40",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "dark"
            }
        },
        "site": {
            "name": "DATV-Red v3.94",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e8adab232b1d4dce",
        "type": "ui_group",
        "name": "Buffer",
        "tab": "3fcae860e82945fc",
        "order": 1,
        "disp": false,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "235bdacf6041386f",
        "type": "ui_group",
        "name": "Spectrum window",
        "tab": "9b3296db2e0c849f",
        "order": 7,
        "disp": false,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bc7afc94660c6b76",
        "type": "ui_group",
        "name": "Pluto top left status",
        "tab": "9b3296db2e0c849f",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "806d30964cf41d9d",
        "type": "ui_group",
        "name": "Pluto top right status",
        "tab": "9b3296db2e0c849f",
        "order": 3,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3fcae860e82945fc",
        "type": "ui_tab",
        "name": "Stats and settings",
        "icon": "fa-sliders",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6140f866127cd620",
        "type": "ui_group",
        "name": "Rx buttons",
        "tab": "9b3296db2e0c849f",
        "order": 4,
        "disp": false,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3e6a59708bbf6e6c",
        "type": "websocket-client",
        "path": "ws://127.0.0.1:9090/",
        "tls": "",
        "wholemsg": "false",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "da031ac17a307778",
        "type": "ui_group",
        "name": "preset bar",
        "tab": "9b3296db2e0c849f",
        "order": 2,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7954d85ae8701623",
        "type": "ui_group",
        "name": "Misc bar",
        "tab": "9b3296db2e0c849f",
        "order": 9,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2275ce4aba6ae57e",
        "type": "ui_group",
        "name": "Global settings",
        "tab": "3fcae860e82945fc",
        "order": 2,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "064bde8eca01e996",
        "type": "mqtt-broker",
        "name": "place holder",
        "broker": "localhost",
        "port": "",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": false,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2b125fd54182d066",
        "type": "ui_group",
        "name": "Frequency bar",
        "tab": "9b3296db2e0c849f",
        "order": 5,
        "disp": false,
        "width": "32",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7b522f0cd708870",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "2b125fd54182d066",
        "order": 4,
        "width": "1",
        "height": "1"
    },
    {
        "id": "65d91b75202c3b55",
        "type": "ui_group",
        "name": "RX",
        "tab": "9b3296db2e0c849f",
        "order": 11,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d81fd296c3fbb409",
        "type": "ui_tab",
        "name": "GSE",
        "icon": "fa-signal",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "91cddc460b9c86f1",
        "type": "ui_group",
        "name": "GSE network settings",
        "tab": "d81fd296c3fbb409",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a4a37989805c1f8e",
        "type": "ui_group",
        "name": "RX 2",
        "tab": "9b3296db2e0c849f",
        "order": 12,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bd5e2c07c46bb0ef",
        "type": "ui_group",
        "name": "ffmpeg related options",
        "tab": "fefa8fb5a3363008",
        "order": 3,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "28123a21c50f54af",
        "type": "ui_group",
        "name": "ffmpeg paths",
        "tab": "fefa8fb5a3363008",
        "order": 4,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "861f885ba5c5eebc",
        "type": "ui_group",
        "name": "Radio misc",
        "tab": "3fcae860e82945fc",
        "order": 3,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fefa8fb5a3363008",
        "type": "ui_tab",
        "name": "FFMPEG",
        "icon": "fa-play",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "af1f464a62309da1",
        "type": "ui_group",
        "name": "command",
        "tab": "fefa8fb5a3363008",
        "order": 1,
        "disp": true,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "88af1ac84b7217bd",
        "type": "ui_group",
        "name": "Inputs and Codecs",
        "tab": "fefa8fb5a3363008",
        "order": 2,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b774f32781d086fb",
        "type": "ui_group",
        "name": "Receiver settings",
        "tab": "55e61f84f5d24cee",
        "order": 2,
        "disp": true,
        "width": "26",
        "collapse": false,
        "className": ""
    },
    {
        "id": "55e61f84f5d24cee",
        "type": "ui_tab",
        "name": "Receiver setup",
        "icon": "fa-podcast",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bd40e71dca80ef04",
        "type": "ui_group",
        "name": "Pluto RX port",
        "tab": "9b3296db2e0c849f",
        "order": 10,
        "disp": false,
        "width": "32",
        "collapse": false,
        "className": ""
    },
    {
        "id": "06245a91daf3c666",
        "type": "ui_group",
        "name": "Mod1",
        "tab": "9b3296db2e0c849f",
        "order": 6,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8bd7855b29878c5b",
        "type": "ui_group",
        "name": "Enocder",
        "tab": "9b3296db2e0c849f",
        "order": 8,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad62d4cb9a477715",
        "type": "ui_spacer",
        "z": "9d964f25dcc4d750",
        "name": "spacer",
        "group": "06245a91daf3c666",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "0acd94f5a0cb6af3",
        "type": "ui_spacer",
        "z": "9d964f25dcc4d750",
        "name": "spacer",
        "group": "06245a91daf3c666",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "1d0d55cb8f9c1bff",
        "type": "ui_spacer",
        "z": "d7c58eb9e7b65abb",
        "name": "spacer",
        "group": "a4a37989805c1f8e",
        "order": 7,
        "width": "1",
        "height": "1"
    },
    {
        "id": "84cb906279952940",
        "type": "ui_spacer",
        "z": "d7c58eb9e7b65abb",
        "name": "spacer",
        "group": "bd40e71dca80ef04",
        "order": 8,
        "width": "5",
        "height": "1"
    },
    {
        "id": "19741613631106f3",
        "type": "ui_spacer",
        "z": "d7c58eb9e7b65abb",
        "name": "spacer",
        "group": "bd40e71dca80ef04",
        "order": 10,
        "width": "7",
        "height": "1"
    },
    {
        "id": "8920ad34.ac04a",
        "type": "http request",
        "z": "15d7457.fcac4bb",
        "name": "Retrieve current flow state",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "2c17ab5e.baf484",
                "4ae06e4d.49bdf"
            ]
        ]
    },
    {
        "id": "bc4c108.66f42f",
        "type": "http request",
        "z": "15d7457.fcac4bb",
        "name": "Update flow state",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 710,
        "y": 80,
        "wires": [
            [
                "50c71a03.281e54"
            ]
        ]
    },
    {
        "id": "2c17ab5e.baf484",
        "type": "function",
        "z": "15d7457.fcac4bb",
        "name": "Change flow disabled",
        "func": "switch (flow.get('action')) {\n    case true:\n        msg.payload.disabled = false\n        break;\n    case false:\n        msg.payload.disabled = true\n        break;\n    default:\n        msg.payload.disabled = !msg.payload.disabled\n        break;\n}\n\n\nmsg.url = flow.get('url')\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 80,
        "wires": [
            [
                "bc4c108.66f42f"
            ]
        ]
    },
    {
        "id": "4ae06e4d.49bdf",
        "type": "debug",
        "z": "15d7457.fcac4bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 150,
        "y": 120,
        "wires": []
    },
    {
        "id": "50c71a03.281e54",
        "type": "debug",
        "z": "15d7457.fcac4bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 120,
        "wires": []
    },
    {
        "id": "42613114.0e42c",
        "type": "function",
        "z": "15d7457.fcac4bb",
        "name": "Prepare URL",
        "func": "//action true-enable false-disable else toggle\nflow.set('action', msg.payload)\n\nreturn {\n    url: flow.get('url')\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "flow.set('url', env.get('nodeRedUrl') + '/' + env.get('flowId'))",
        "finalize": "",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "8920ad34.ac04a"
            ]
        ]
    },
    {
        "id": "36a9e71117a34327",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3220,
        "wires": [
            [
                "a27d9eec9ce16ab7"
            ]
        ]
    },
    {
        "id": "babe629c1afb5e8b",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "2b125fd54182d066",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "Frequency",
        "label": "<font size=3>Frequency",
        "format": "<font size=3>{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Verdana,Verdana,Geneva,sans-serif",
        "fontSize": "17",
        "color": "#ffffff",
        "x": 750,
        "y": 3100,
        "wires": []
    },
    {
        "id": "45967ab8c3bd9a21",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3060,
        "wires": [
            [
                "babe629c1afb5e8b",
                "8ec0b8acdb25a6b7"
            ]
        ]
    },
    {
        "id": "d2b51c2f7d254def",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3020,
        "wires": [
            [
                "54cbda477035a37f"
            ]
        ]
    },
    {
        "id": "306b57e47411d35c",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3180,
        "wires": [
            [
                "54e338fa6a48fd5b"
            ]
        ]
    },
    {
        "id": "23773127332c2b1f",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3140,
        "wires": [
            [
                "1cc9bf09772f06d3"
            ]
        ]
    },
    {
        "id": "9aa8ef50bbbe8e2d",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2940,
        "wires": [
            [
                "ddf60892397fbc68"
            ]
        ]
    },
    {
        "id": "d26972d34559fd63",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2980,
        "wires": [
            [
                "1969a0cddc042f2e"
            ]
        ]
    },
    {
        "id": "a27d9eec9ce16ab7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: mute",
        "func": "let mute = msg.payload;\n\nglobal.set(\"mute\", mute)\nmsg.payload = mute;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3220,
        "wires": [
            [
                "f0c209e940860820"
            ]
        ]
    },
    {
        "id": "b601d6596401a754",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3360,
        "wires": [
            [
                "b6d03834b636d44d",
                "aeded232cbae2ef0",
                "2acfb18cb9db9a02",
                "ef310c8290b45f2f"
            ]
        ]
    },
    {
        "id": "b6d03834b636d44d",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "806d30964cf41d9d",
        "order": 3,
        "width": 2,
        "height": 1,
        "name": "Queue",
        "label": "<font color={{textColor}}>Queue",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "1",
        "color": "#000000",
        "x": 730,
        "y": 3360,
        "wires": []
    },
    {
        "id": "9cea687107707a6b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Mute",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/mute\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3220,
        "wires": [
            [
                "36a9e71117a34327"
            ]
        ]
    },
    {
        "id": "50bf46056b71ec3a",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 3420,
        "wires": [
            [
                "9cea687107707a6b",
                "5d39969ea562b92d",
                "18b3a285bc3b304a",
                "59e507f64ad42e32",
                "4ddefda4dc462586",
                "a3b043862df5d1c9",
                "203d8eabee6242e7",
                "33155f6018ceeffa",
                "96d158d7fdc5ee78",
                "9fb89f4342f8baf0",
                "91114b46796f2205",
                "8bcc3bb6537a078d",
                "2e28b17c64c14184",
                "04d27b36a3ee9934",
                "0b6d33db8fc071c9",
                "8e34088eda2b7263",
                "c44d0cb54ec5e706",
                "ac88fa94a49129ec",
                "1decf932a1bf2fcd",
                "04e9fefc43a9ccbf",
                "9f35c0e151e986ea"
            ]
        ]
    },
    {
        "id": "5d39969ea562b92d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Mode",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/stream/mode\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3180,
        "wires": [
            [
                "306b57e47411d35c"
            ]
        ]
    },
    {
        "id": "18b3a285bc3b304a",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "FecMode",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/fecmode\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2980,
        "wires": [
            [
                "d26972d34559fd63"
            ]
        ]
    },
    {
        "id": "59e507f64ad42e32",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Gain",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/gain\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3020,
        "wires": [
            [
                "d2b51c2f7d254def"
            ]
        ]
    },
    {
        "id": "4ddefda4dc462586",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Fec",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/fec\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2940,
        "wires": [
            [
                "9aa8ef50bbbe8e2d"
            ]
        ]
    },
    {
        "id": "a3b043862df5d1c9",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Frequency",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/frequency\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 3060,
        "wires": [
            [
                "45967ab8c3bd9a21"
            ]
        ]
    },
    {
        "id": "203d8eabee6242e7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Samplerate",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/sr\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 3140,
        "wires": [
            [
                "23773127332c2b1f"
            ]
        ]
    },
    {
        "id": "33155f6018ceeffa",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Queu",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/queue\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3340,
        "wires": [
            [
                "b601d6596401a754"
            ]
        ]
    },
    {
        "id": "7a4a8d639646cff4",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3500,
        "wires": [
            [
                "f38c438a231661c6"
            ]
        ]
    },
    {
        "id": "96d158d7fdc5ee78",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Constellation",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/constel\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 3500,
        "wires": [
            [
                "7a4a8d639646cff4"
            ]
        ]
    },
    {
        "id": "746af9f95f7438cd",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3540,
        "wires": [
            [
                "ce96de0f7dba91c5"
            ]
        ]
    },
    {
        "id": "9fb89f4342f8baf0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "frame",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/frame\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3540,
        "wires": [
            [
                "746af9f95f7438cd"
            ]
        ]
    },
    {
        "id": "e2ddf0eaa1468069",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3580,
        "wires": [
            [
                "16a3685e614e0995",
                "ae61c1e19f8634d0"
            ]
        ]
    },
    {
        "id": "91114b46796f2205",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Pilots",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/pilots\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3580,
        "wires": [
            [
                "e2ddf0eaa1468069"
            ]
        ]
    },
    {
        "id": "aeded232cbae2ef0",
        "type": "ui_chart",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "group": "e8adab232b1d4dce",
        "order": 1,
        "width": "26",
        "height": "5",
        "label": "Queue",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "60",
        "removeOlderPoints": "90",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 730,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "8bcc3bb6537a078d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Gain Variable",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/gainvariable\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3620,
        "wires": [
            [
                "4dc0d6bc0972a150"
            ]
        ]
    },
    {
        "id": "2e28b17c64c14184",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "TS Source Mode",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/tssourcemode\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3660,
        "wires": [
            [
                "56ad120991eb3c83"
            ]
        ]
    },
    {
        "id": "04d27b36a3ee9934",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "FEC Range",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/fecrange\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 3700,
        "wires": [
            [
                "76bed5f0ebc81a4c"
            ]
        ]
    },
    {
        "id": "25a924b7dc1d4576",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2900,
        "wires": [
            [
                "c25d1cacc8057d1d",
                "bdfdc40f3409d5eb"
            ]
        ]
    },
    {
        "id": "c25d1cacc8057d1d",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "2b125fd54182d066",
        "order": 5,
        "width": 3,
        "height": 1,
        "name": "Numerically controlled oscillator",
        "label": "NCO",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Verdana,Verdana,Geneva,sans-serif",
        "fontSize": "17",
        "color": "#ffffff",
        "x": 810,
        "y": 2980,
        "wires": []
    },
    {
        "id": "0b6d33db8fc071c9",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "NCO",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/nco\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2900,
        "wires": [
            [
                "25a924b7dc1d4576"
            ]
        ]
    },
    {
        "id": "ac88fa94a49129ec",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Digital Gain",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/digitalgain\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2860,
        "wires": [
            [
                "347c8041af1a52e0"
            ]
        ]
    },
    {
        "id": "347c8041af1a52e0",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "mqtt dg",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2860,
        "wires": [
            [
                "462c1bee49073de7"
            ]
        ]
    },
    {
        "id": "8ec0b8acdb25a6b7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: frequency",
        "func": "var payload = Number(msg.payload);\n\nif (global.get(\"tune\")) {\n    let tune_table = new Set(global.get(\"tune_table\"));\n    tune_table.add(Number(msg.payload))\n    \n    if (Array.from(tune_table).length === 27) {\n        global.set(\"tune_table\", Array.from(tune_table));\n        global.set(\"tune\", false);\n        global.set(\"tune_done\", true);\n        msg.tuned_freq = global.get(\"device.tx.frequency\");\n        msg.payload = payload;\n        return msg;\n    }\n    global.set(\"tune_table\", Array.from(tune_table));\n}\nmsg.payload = payload;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 3060,
        "wires": [
            [
                "dffe1e50bcaeb0a5",
                "cf6155c5314434de"
            ]
        ]
    },
    {
        "id": "1cc9bf09772f06d3",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: sr",
        "func": "let payload = Number(msg.payload);\nif (payload !== global.get(\"device.tx.dvbs2.sr\")) {\n    // global.set(\"bitratechange\", true);\n    global.set(\"device.tx.dvbs2.sr\", payload);\n    global.set(\"settings.SR\", payload / 1000);\n    return msg;\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 3140,
        "wires": [
            [
                "aa6d588a480f161c"
            ]
        ]
    },
    {
        "id": "54e338fa6a48fd5b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: mode",
        "func": "\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3180,
        "wires": [
            [
                "2e677684d13ac6e0"
            ]
        ]
    },
    {
        "id": "ae61c1e19f8634d0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: pilots",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.pilots\")){\n    global.set(\"device.tx.dvbs2.pilots\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3580,
        "wires": [
            []
        ]
    },
    {
        "id": "8a6e91746db5e484",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: gainvariable",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.gainvariable\")){\n    global.set(\"device.tx.dvbs2.gainvariable\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3620,
        "wires": [
            [
                "70cb26f62de94a5d"
            ]
        ]
    },
    {
        "id": "31eb287a0ca0a45c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: tssourcemode",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.tssourcemode\")){\n    global.set(\"device.tx.dvbs2.tssourcemode\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 3660,
        "wires": [
            [
                "93d8b2c69bdc7792"
            ]
        ]
    },
    {
        "id": "508bccc9de4506fc",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: fecrange",
        "func": "var payload = Number(msg.payload);\nif (payload !== global.get(\"device.tx.dvbs2.fecrange\")){\n    global.set(\"device.tx.dvbs2.fecrange\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 3700,
        "wires": [
            [
                "33a0bcca85522580"
            ]
        ]
    },
    {
        "id": "c8042db5402565df",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "806d30964cf41d9d",
        "order": 5,
        "width": "4",
        "height": 1,
        "name": "",
        "label": "TS",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 3740,
        "wires": []
    },
    {
        "id": "8e34088eda2b7263",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "TS Address",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/tssourceaddress\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 3740,
        "wires": [
            [
                "b733d75a1c79f1a2"
            ]
        ]
    },
    {
        "id": "2acfb18cb9db9a02",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: queue",
        "func": "var payload = parseInt(msg.payload);\nif (payload !== global.get(\"queue\")) {\n    global.set(\"queue\", payload);\n}\nif (payload > 50) {\n    msg.fcolor = \"#d81706\";\n    msg.payload = \"overflow\";\n    return msg;\n}\nif (payload > 0) {\n    msg.fcolor = \"#0e7c1a\";\n    msg.payload = \"nominal\";\n    return msg;\n}\n\nmsg.payload = \"underflow\";\nmsg.fcolor = \"#ff9e07\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 3320,
        "wires": [
            [
                "0813517cbc9b99f3"
            ]
        ]
    },
    {
        "id": "0813517cbc9b99f3",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "806d30964cf41d9d",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Buffer",
        "format": "<font size=3><font color={{fcolor}}>{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 910,
        "y": 3320,
        "wires": []
    },
    {
        "id": "c4f36ff7105c2dd1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: temp",
        "func": "var payload = parseFloat(msg.payload) / 1000;\nif (payload !== global.get(\"temp\") && payload > 0) {\n    global.set(\"temp\", payload);\n    msg.payload = payload.toFixed(2);\n    return msg;\n\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2820,
        "wires": [
            [
                "4fd321bd9fa719f3"
            ]
        ]
    },
    {
        "id": "de949c9780005117",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "mqtt temp",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 580,
        "y": 2820,
        "wires": [
            [
                "c4f36ff7105c2dd1"
            ]
        ]
    },
    {
        "id": "c44d0cb54ec5e706",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Temperature",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\") + \"/temperature_ad\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2820,
        "wires": [
            [
                "de949c9780005117"
            ]
        ]
    },
    {
        "id": "4fd321bd9fa719f3",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "806d30964cf41d9d",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "Pluto Temp",
        "label": "FPGA",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Verdana,Verdana,Geneva,sans-serif",
        "fontSize": "17",
        "color": "#ffffff",
        "x": 750,
        "y": 2860,
        "wires": []
    },
    {
        "id": "5f71534b6c02e324",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "+dBm",
        "group": "06245a91daf3c666",
        "order": 9,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "+0.25dB",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-plus",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 2080,
        "wires": [
            [
                "88c17ad9f892b06d"
            ]
        ]
    },
    {
        "id": "f29b8d8eb8441fde",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "-dBm",
        "group": "06245a91daf3c666",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "-0.25dB",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-minus",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 2140,
        "wires": [
            [
                "b6da9101dce07fd1"
            ]
        ]
    },
    {
        "id": "88c17ad9f892b06d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Increase Gain",
        "func": "let currentGain = global.get(\"device.tx.gain\");\nlet uppedGain = parseFloat(currentGain) + 0.25;\nmsg.payload = uppedGain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 2080,
        "wires": [
            [
                "37b18a222ae30d52"
            ]
        ]
    },
    {
        "id": "b6da9101dce07fd1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Decrease Gain",
        "func": "let currentGain = global.get(\"device.tx.gain\");\nlet downedGain = parseFloat(currentGain) - 0.25;\nmsg.payload = downedGain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 2140,
        "wires": [
            [
                "be4a04a5a054f988",
                "37b18a222ae30d52"
            ]
        ]
    },
    {
        "id": "508ff50f2a470219",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "06245a91daf3c666",
        "order": 5,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "RF OFF",
        "tooltip": "Stop transmission",
        "color": "",
        "bgcolor": "{{stop_button_color}}",
        "className": "",
        "icon": "{{stop_animation}}",
        "payload": "1",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 2120,
        "y": 2680,
        "wires": [
            [
                "aa4a256618f7c4a6"
            ]
        ]
    },
    {
        "id": "f0c209e940860820",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "06245a91daf3c666",
        "order": 4,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "RF ON",
        "tooltip": "Start transmission",
        "color": "",
        "bgcolor": "{{start_button_color}}",
        "className": "",
        "icon": "{{start_animation}}",
        "payload": "0",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 2120,
        "y": 2620,
        "wires": [
            [
                "af45e1bfc3e75ecb"
            ]
        ]
    },
    {
        "id": "af45e1bfc3e75ecb",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Mute OFF",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/mute`;\nmsg.set_stuff = false;\nif(global.get(\"sr_bug\")){\n    global.set(\"sr_bug\", false);\n    msg.set_stuff = true;\n}\nmsg.topic = topic;\nlet now = Date.now();\nglobal.set(\"tx_time\", now);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 2460,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "55bca069bdb08ee7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Mute ON",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/mute`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"tx_time\", 0);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2980,
        "y": 2500,
        "wires": [
            [
                "1b8ee9dbe0155dcd",
                "c20ffdd3c22ba8da"
            ]
        ]
    },
    {
        "id": "dffe1e50bcaeb0a5",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "Channel",
        "label": "Channel",
        "tooltip": "",
        "place": "",
        "group": "2b125fd54182d066",
        "order": 3,
        "width": "7",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "channel",
        "x": 2120,
        "y": 2380,
        "wires": [
            [
                "807128449158f2eb"
            ]
        ]
    },
    {
        "id": "be4a04a5a054f988",
        "type": "ui_slider",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "TX Gain",
        "label": "Gain",
        "tooltip": "",
        "group": "06245a91daf3c666",
        "order": 7,
        "width": "4",
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "-89",
        "max": "0",
        "step": "-0.25",
        "className": "",
        "x": 2120,
        "y": 2200,
        "wires": [
            [
                "37b18a222ae30d52"
            ]
        ]
    },
    {
        "id": "2e677684d13ac6e0",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Mode",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 10,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "dvbs2-ts",
                "value": "dvbs2-ts",
                "type": "str"
            },
            {
                "label": "dvbs2-gse",
                "value": "dvbs2-gse",
                "type": "str"
            },
            {
                "label": "Carrier",
                "value": "test",
                "type": "str"
            },
            {
                "label": "pass",
                "value": "pass",
                "type": "str"
            },
            {
                "label": "dvbs-ts",
                "value": "dvbs-ts",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2110,
        "y": 2560,
        "wires": [
            [
                "1d6a50722e33c015",
                "3ba5b7893d572d90",
                "38932643615d50c9"
            ]
        ]
    },
    {
        "id": "aa6d588a480f161c",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "SR",
        "tooltip": "",
        "place": "Samplerate",
        "group": "06245a91daf3c666",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "35 Ks",
                "value": 35000,
                "type": "num"
            },
            {
                "label": "66 Ks",
                "value": 66000,
                "type": "num"
            },
            {
                "label": "125 Ks",
                "value": 125000,
                "type": "num"
            },
            {
                "label": "250 Ks",
                "value": 250000,
                "type": "num"
            },
            {
                "label": "333 Ks",
                "value": 333000,
                "type": "num"
            },
            {
                "label": "500 Ks",
                "value": 500000,
                "type": "num"
            },
            {
                "label": "1 Ms",
                "value": 1000000,
                "type": "num"
            },
            {
                "label": "1.5 Ms/s",
                "value": 1500000,
                "type": "num"
            },
            {
                "label": "2 Ms",
                "value": 2000000,
                "type": "num"
            },
            {
                "label": "3 Ms",
                "value": 3000000,
                "type": "num"
            },
            {
                "label": "4 Ms",
                "value": 4000000,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2110,
        "y": 2440,
        "wires": [
            [
                "89b95ad3b6453036"
            ]
        ]
    },
    {
        "id": "ddf60892397fbc68",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "FEC",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2110,
        "y": 2260,
        "wires": [
            [
                "cec2f56be1fccf51"
            ]
        ]
    },
    {
        "id": "1969a0cddc042f2e",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "FecMode",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 17,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "fixed",
                "type": "str"
            },
            {
                "label": "",
                "value": "variable",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2120,
        "y": 2320,
        "wires": [
            [
                "152082051caa1d1d"
            ]
        ]
    },
    {
        "id": "152082051caa1d1d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: FecMode",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fecmode`;\nif (payload === \"variable\") {\n    let constel = global.get(\"device.tx.dvbs2.constel\");\n    let fec = constel === \"qpsk\" ? \"1/4\" : constel === \"8psk\" ? \"3/5\" : constel === \"16apsk\" ? \"2/3\" : \"3/4\";\n    msg.fec = fec;\n}\nmsg.defaultFEC = true;\nmsg.topic = topic\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.fecmode\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 2020,
        "wires": [
            [
                "762e2c70acd9ebe0",
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "37b18a222ae30d52",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Gain",
        "func": "let payload = Number(msg.payload);\nlet topic = `${global.get(\"cmdPath\")}/tx/gain`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.gain\", Number(payload));\nglobal.set(\"settings.gain\", Number(payload));\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 2120,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "cec2f56be1fccf51",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Fec",
        "func": "global.set(\"deviceChange\", true);\nlet payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fec`;\nglobal.set(\"stop\", true);\nglobal.set(\"device.tx.dvbs2.fec\", payload);\nglobal.set(\"settings.FEC\", payload);\nmsg.topic = topic\nmsg.payload = payload\n// global.set(\"bitratechange\", true);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1960,
        "wires": [
            [
                "b1fb472a0a5e24a7",
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "89b95ad3b6453036",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: SampleRate",
        "func": "global.set(\"deviceChange\", true);\nlet payload = Number(msg.payload);\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/sr`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"stop\", true);\nglobal.set(\"device.tx.dvbs2.sr\", payload);\nglobal.set(\"settings.SR\", payload/1000);\n// global.set(\"bitratechange\", true);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2300,
        "wires": [
            [
                "9695655b0a719b4a",
                "1b8ee9dbe0155dcd",
                "2d85a16a42027727",
                "4a0642add9f7b983"
            ]
        ]
    },
    {
        "id": "807128449158f2eb",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Frequency",
        "func": "let payload = Number(msg.payload) + global.get(\"device.tx.offset\");\nlet topic = `${global.get(\"cmdPath\")}/tx/frequency`;\nmsg.topic = topic;\nmsg.payload = Number(payload);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.frequency\", payload);\nglobal.set(\"settings.frequency\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2240,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "f38c438a231661c6",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "MOD",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "qpsk",
                "value": "qpsk",
                "type": "str"
            },
            {
                "label": "8psk",
                "value": "8psk",
                "type": "str"
            },
            {
                "label": "16apsk",
                "value": "16apsk",
                "type": "str"
            },
            {
                "label": "32apsk",
                "value": "32apsk",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2110,
        "y": 2720,
        "wires": [
            [
                "c5ceed661f8529ce",
                "86a189cf7830c88d"
            ]
        ]
    },
    {
        "id": "c5ceed661f8529ce",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Constellation",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/constel`;\nglobal.set(\"stop\", true);\nglobal.set(\"device.tx.dvbs2.constel\", payload);\nglobal.set(\"settings.MODE\", payload);\nmsg.topic = topic;\nmsg.payload = payload;\n\nlet mode = global.get(\"device.tx.stream.mode\");\nif (mode === \"dvbs2-ts\") {\n    let fec = global.get(\"device.tx.dvbs2.fec\");\n    if ((payload === \"8psk\" || payload === \"16apsk\" || payload === \"32apsk\") && (fec === \"1/4\" || fec === \"1/3\" || fec === \"2/5\" || fec === \"1/2\")) {\n        msg.test = \"error\";\n    }\n    if ((payload === \"16apsk\" || payload === \"32apsk\") && (fec === \"1/4\" || fec === \"1/3\" || fec === \"2/5\" || fec === \"1/2\" || fec === \"3/5\")) {\n        msg.test = \"error\";\n    }\n    if ((payload === \"32apsk\") && (fec === \"1/4\" || fec === \"1/3\" || fec === \"2/5\" || fec === \"1/2\" || fec === \"3/5\" || fec === \"2/3\")) {\n        msg.test = \"error\";\n    }\n}\n\n// global.set(\"deviceChange\", true);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2560,
        "wires": [
            [
                "50c309ece9e67b71",
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "ce96de0f7dba91c5",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Frame",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "short",
                "value": "short",
                "type": "str"
            },
            {
                "label": "long",
                "value": "long",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2110,
        "y": 2760,
        "wires": [
            [
                "0c74362e749bcdc4",
                "86a189cf7830c88d"
            ]
        ]
    },
    {
        "id": "0c74362e749bcdc4",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Frame",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/frame`;\n// global.set(\"bitratechange\", true);\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"stop\", true);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.frame\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 2620,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "16a3685e614e0995",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Pilots",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 20,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "off",
                "value": "0",
                "type": "str"
            },
            {
                "label": "on",
                "value": "1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2110,
        "y": 2820,
        "wires": [
            [
                "4a50af4869a33baa"
            ]
        ]
    },
    {
        "id": "4a50af4869a33baa",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Pilots",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/pilots`;\n// global.set(\"bitratechange\", true);\nmsg.topic = topic\nmsg.payload = payload;\nglobal.set(\"stop\", true);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.pilots\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 2680,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "14e5a286770d3cd0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Reboot",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/system/reboot`;\nmsg.topic = topic\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"mute\", \"1\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 1900,
        "wires": [
            [
                "e5b15ef8662e723b"
            ]
        ]
    },
    {
        "id": "0d6f171d50f0a0c3",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "bc7afc94660c6b76",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "payload",
        "topicType": "msg",
        "x": 2120,
        "y": 1540,
        "wires": [
            [
                "14e5a286770d3cd0"
            ]
        ]
    },
    {
        "id": "70cb26f62de94a5d",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "VarGain",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 19,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "on",
                "value": 1,
                "type": "num"
            },
            {
                "label": "off",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2120,
        "y": 2880,
        "wires": [
            [
                "b1b6fc76c723e0f1"
            ]
        ]
    },
    {
        "id": "b1b6fc76c723e0f1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Gain variable",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/gainvariable`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.gainvariable\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 2740,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "93d8b2c69bdc7792",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "TS Source mode",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 18,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "TS IP",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Pattern",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2150,
        "y": 2940,
        "wires": [
            [
                "7b06e3153449eb9a"
            ]
        ]
    },
    {
        "id": "7b06e3153449eb9a",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: TsSourceMode",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/tssourcemode`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.tssourcemode\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 2800,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "33a0bcca85522580",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "FEC Range",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 16,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3",
                "value": 3,
                "type": "num"
            },
            {
                "label": "4",
                "value": 4,
                "type": "num"
            },
            {
                "label": "5",
                "value": 5,
                "type": "num"
            },
            {
                "label": "6",
                "value": "6",
                "type": "str"
            },
            {
                "label": "7",
                "value": 7,
                "type": "num"
            },
            {
                "label": "8",
                "value": 8,
                "type": "num"
            },
            {
                "label": "9",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2130,
        "y": 3000,
        "wires": [
            [
                "d533bf0f097fedc4"
            ]
        ]
    },
    {
        "id": "d533bf0f097fedc4",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: FEC Range variable",
        "func": "let payload = Number(msg.payload);\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fecrange`;\nmsg.topic = topic;\nmsg.payload = Number(payload);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.fecrange\", payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 2860,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "462c1bee49073de7",
        "type": "ui_slider",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "TX Digital Gain",
        "label": "Digital Gain",
        "tooltip": "",
        "group": "861f885ba5c5eebc",
        "order": 1,
        "width": 8,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "-20",
        "max": "3",
        "step": "1",
        "className": "",
        "x": 2140,
        "y": 1840,
        "wires": [
            [
                "e91e846502f35c90"
            ]
        ]
    },
    {
        "id": "e91e846502f35c90",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Digital Gain when not is pass mode...",
        "func": "let payload = Number(msg.payload);\n// We cannot send digital gain in pass mode...\nif(global.get(\"device.tx.stream.mode\") === \"pass\") return;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/digitalgain`\nmsg.topic = topic\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.digitalgain\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2550,
        "y": 1840,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "6bdd18a478266cdb",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 3",
        "group": "da031ac17a307778",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "profile 3",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p3_color}}",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 560,
        "y": 1020,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "e41f78ecb41096ea",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 4",
        "group": "da031ac17a307778",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "profile 4",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p5_color}}",
        "className": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 560,
        "y": 1060,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "26d4847d4e66ef33",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 5",
        "group": "da031ac17a307778",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "profile 5",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p6_color}}",
        "className": "",
        "icon": "",
        "payload": "5",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 560,
        "y": 1100,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "a6736166225853ff",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Update Active Profile Button",
        "func": "let status = msg.status.text;\nlet fill = msg.status.fill;\nlet source = msg.status.source.name;\nmsg.p1_color = \"\";\nmsg.p2_color = \"\";\nmsg.p3_color = \"\";\nmsg.p4_color = \"\";\nmsg.p5_color = \"\";\nmsg.p6_color = \"\";\nmsg.p7_color = \"\";\nmsg.p8_color = \"\";\nmsg.p9_color = \"\";\nif (msg.status.text === \"error:1\" || msg.status.text === \"rc:1\") {\n    msg.ffmpeg = \"clear\";\n    global.set(\"ProfileButtonsActive\", false);\n    return msg;\n}\n// msg.p1_color = \"gray\";\n// msg.p2_color = \"gray\";\n// msg.p3_color = \"gray\";\n// msg.p4_color = \"gray\";\n// msg.p5_color = \"gray\";\n// msg.p6_color = \"gray\";\n// msg.p7_color = \"gray\";\n// msg.p8_color = \"gray\";\n// msg.p9_color = \"gray\";\nif (msg.status.text) {\n    let pid = msg.status.text.split(':');\n    msg.command = \"start\";\n    switch (source) {\n        case \"Load 33KS\":\n            msg.p1_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 66KS\":\n            msg.p2_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 125KS\":\n            msg.p3_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load last run\":\n            msg.p4_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 250KS\":\n            msg.p5_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 333KS\":\n            msg.p6_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 500KS\":\n            msg.p7_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 1000KS\":\n            msg.p8_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load custom\":\n            msg.p9_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n    }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 940,
        "wires": [
            [
                "6bdd18a478266cdb",
                "e41f78ecb41096ea",
                "26d4847d4e66ef33",
                "b12e26636bc4a755",
                "4ecaf72037fc5448",
                "37c0f70c56da77c5",
                "321917da5c241be6",
                "6f5791e469edab55",
                "66d128c2a339f3cb"
            ]
        ]
    },
    {
        "id": "0024149327ace021",
        "type": "status",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "",
        "scope": [
            "870adb347b148820"
        ],
        "x": 100,
        "y": 940,
        "wires": [
            [
                "a6736166225853ff"
            ]
        ]
    },
    {
        "id": "8fc50c918238bbb1",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "name": "",
        "props": [],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1430,
        "y": 2860,
        "wires": [
            [
                "f3b56d13d111f207"
            ]
        ]
    },
    {
        "id": "b12e26636bc4a755",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 6",
        "group": "da031ac17a307778",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "profile 6",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p7_color}}",
        "className": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 560,
        "y": 1140,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "4ecaf72037fc5448",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 7",
        "group": "da031ac17a307778",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "profile 7",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p8_color}}",
        "className": "",
        "icon": "",
        "payload": "7",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 560,
        "y": 1180,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "aa4a256618f7c4a6",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Only send if we are unmuted",
        "func": "if (parseInt(msg.payload) !== parseInt(global.get(\"mute\"))) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 2500,
        "wires": [
            [
                "55bca069bdb08ee7"
            ]
        ]
    },
    {
        "id": "321917da5c241be6",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 2",
        "group": "da031ac17a307778",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "profile 2",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p2_color}}",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 560,
        "y": 980,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "37c0f70c56da77c5",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 1",
        "group": "da031ac17a307778",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "profile 1",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p1_color}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 560,
        "y": 940,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "863b303484773cde",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send profile settings",
        "func": "// if some saving flag is set do saving stuff\nif (global.get(\"saving\")) {\n    global.set(\"saving\", false);\n    let jsonSettings = global.get(\"settings\");\n    msg.loading = \"0\";\n    // msg.filename = `profiles\\\\p${msg.payload}.json`\n    msg.filename = `profiles/p${msg.payload}.json`\n    // if (global.get(\"platform\") === \"linux\") msg.filename = `profiles/p${msg.payload}.json`\n    msg.payload = jsonSettings;\n    return msg;\n}\n// if not then just load the profile\nlet ffmpegPID = global.get(\"pid\");\nif (ffmpegPID === \"\" || ffmpegPID === undefined) {\n    if (msg.payload <= 7) {\n        msg.loading = \"1\";\n        // msg.filename = `profiles\\\\p${msg.payload}.json`\n        msg.filename = `profiles/p${msg.payload}.json`\n        // if (global.get(\"platform\") === \"linux\") msg.filename = `profiles/p${msg.payload}.json`\n        return msg;\n    }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1000,
        "wires": [
            [
                "475f01a383d6b75e"
            ]
        ]
    },
    {
        "id": "b4aff87862b89a39",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "+dBm",
        "group": "861f885ba5c5eebc",
        "order": 3,
        "width": "1",
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "+1dB",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-plus",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 1720,
        "wires": [
            [
                "5d8a44d8d3dfd931"
            ]
        ]
    },
    {
        "id": "edd3123535a89e2c",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "-dBm",
        "group": "861f885ba5c5eebc",
        "order": 2,
        "width": "1",
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "-1dB",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-minus",
        "payload": "device.tx.dvbs2.digitalgain",
        "payloadType": "global",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 1780,
        "wires": [
            [
                "33dc958065cdada2"
            ]
        ]
    },
    {
        "id": "5d8a44d8d3dfd931",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Digital Increase Gain",
        "func": "let currentGain = global.get(\"device.tx.dvbs2.digitalgain\");\nlet uppedGain = parseFloat(currentGain) + 1;\nmsg.payload = uppedGain;\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 1720,
        "wires": [
            [
                "e91e846502f35c90"
            ]
        ]
    },
    {
        "id": "33dc958065cdada2",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Digital Decrease Gain",
        "func": "let currentGain = global.get(\"device.tx.dvbs2.digitalgain\");\nlet downedGain = parseFloat(currentGain) - 1;\nmsg.payload = downedGain;\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 1780,
        "wires": [
            [
                "e91e846502f35c90"
            ]
        ]
    },
    {
        "id": "7d6077cea86f2378",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "",
        "group": "bc7afc94660c6b76",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "RESTORE",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{payload}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 2260,
        "wires": [
            [
                "a14cd65fe7fac722"
            ]
        ]
    },
    {
        "id": "bdfdc40f3409d5eb",
        "type": "ui_slider",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "",
        "tooltip": "numerically controlled oscilator",
        "group": "2b125fd54182d066",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "str",
        "min": "-50000",
        "max": "50000",
        "step": "250",
        "className": "",
        "x": 2090,
        "y": 1980,
        "wires": [
            [
                "5af92414e3f29873"
            ]
        ]
    },
    {
        "id": "5af92414e3f29873",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: NCO",
        "func": "let payload = Number(msg.payload);\nlet topic = `${global.get(\"cmdPath\")}/tx/nco`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.nco\", payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 1660,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "6f5791e469edab55",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Start encoder",
        "group": "8bd7855b29878c5b",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start encoder",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p9_color}}",
        "className": "",
        "icon": "{{start_animation}}",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 580,
        "y": 1260,
        "wires": [
            [
                "a1c31abd4376d5f1"
            ]
        ]
    },
    {
        "id": "2d16a7785c1bb3dd",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "2b125fd54182d066",
        "order": 8,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "+Hz",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 1600,
        "wires": [
            [
                "68e079e44b9dd5c2"
            ]
        ]
    },
    {
        "id": "68e079e44b9dd5c2",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Increase nco",
        "func": "let currentNCO = global.get(\"device.tx.nco\");\nlet uppedNCO = parseFloat(currentNCO) + 250;\nmsg.payload = uppedNCO;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1600,
        "wires": [
            [
                "5af92414e3f29873"
            ]
        ]
    },
    {
        "id": "524de1980547eaea",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Decrease nco",
        "func": "let currentNCO = global.get(\"device.tx.nco\");\nlet uppedNCO = parseFloat(currentNCO) - 250;\nmsg.payload = uppedNCO;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 1660,
        "wires": [
            [
                "5af92414e3f29873"
            ]
        ]
    },
    {
        "id": "023820f309b020da",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "ffplay",
        "x": 2710,
        "y": 780,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "dd252f1ac7e17f8a",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ffmpeg_cmd",
        "payloadType": "global",
        "x": 820,
        "y": 1080,
        "wires": [
            [
                "6c2ed6b6c40e42db"
            ]
        ]
    },
    {
        "id": "6c2ed6b6c40e42db",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "",
        "label": "ffmpeg command",
        "tooltip": "",
        "group": "af1f464a62309da1",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1150,
        "y": 1080,
        "wires": [
            [
                "66d128c2a339f3cb"
            ]
        ]
    },
    {
        "id": "29f59051e6cbe148",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "group": "235bdacf6041386f",
        "order": 1,
        "width": "18",
        "height": 1,
        "name": "ffmpeg out",
        "label": "<font size=3><font color={{textColor}}>ffmpeg output",
        "format": "<font size=3><font color={{fcolor}}>{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#ffffff",
        "x": 1650,
        "y": 1120,
        "wires": []
    },
    {
        "id": "380f24164e357a8f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Output safegaurd",
        "func": "let ffmpegOut = msg.payload;\nif (`${ffmpegOut}`.includes(\"frame=\")){\n    let testStr = ffmpegOut.toString();\n    let index = testStr.indexOf(\"speed=\");\n    testStr = testStr.substr(index);\n    testStr = testStr.substr(6).replace('x','');\n    let speed = parseFloat(testStr);\n    if(speed < 0.95 ){\n        msg.fcolor = \"red\";\n    }\n    if (speed >= 0.96 && speed < 1.5) {\n        msg.fcolor = \"limegreen\";\n    }\n    msg.payload = ffmpegOut;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1160,
        "wires": [
            [
                "29f59051e6cbe148"
            ]
        ]
    },
    {
        "id": "66d128c2a339f3cb",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Output clearer",
        "func": "if(msg.ffmpeg === \"clear\"){\n    msg.fcolor = \"\";\n    msg.textColor = \"\";\n    msg.payload = \"\";\n    return msg;\n}\nlet ffmpegOut = msg.payload;\nif (ffmpegOut === \"\" || `${ffmpegOut}`.length < 2){\n    msg.payload = ffmpegOut;\n    msg.textColor = \"\";\n    msg.fcolor = \"\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1080,
        "wires": [
            [
                "29f59051e6cbe148"
            ]
        ]
    },
    {
        "id": "86a189cf7830c88d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "name": "FEC watchdog",
        "func": "let constel = global.get(\"device.tx.dvbs2.constel\");\nlet fec = global.get(\"device.tx.dvbs2.fec\");\nlet frame = global.get(\"device.tx.dvbs2.frame\");\nmsg.payload = fec;\nswitch (constel) {\n    case \"qpsk\":\n        if (frame === \"long\") msg.options = [\"1/4\", \"1/3\", \"2/5\", \"1/2\", \"3/5\", \"2/3\", \"3/4\", \"4/5\", \"5/6\", \"8/9\", \"9/10\"];\n        if (frame === \"short\") msg.options = [\"1/4\", \"1/3\", \"2/5\", \"1/2\", \"3/5\", \"2/3\", \"3/4\", \"4/5\", \"5/6\", \"8/9\"];\n        return msg;\n    case \"8psk\":\n        if (frame === \"long\") msg.options = [\"3/5\", \"2/3\", \"3/4\", \"5/6\", \"8/9\", \"9/10\"];\n        if (frame === \"short\") msg.options = [\"3/5\", \"2/3\", \"3/4\", \"5/6\", \"8/9\"];\n        return msg;\n    case \"16apsk\":\n        if (frame === \"long\") msg.options = [\"2/3\", \"3/4\", \"5/6\", \"8/9\", \"9/10\"];\n        if (frame === \"short\") msg.options = [\"2/3\", \"3/4\", \"5/6\", \"8/9\"];\n        return msg;\n    case \"32apsk\":\n        if (frame === \"long\") msg.options = [\"3/4\", \"5/6\", \"8/9\", \"9/10\"];\n        if (frame === \"short\") msg.options = [\"3/4\", \"5/6\", \"8/9\"];\n        return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 2260,
        "wires": [
            [
                "ddf60892397fbc68",
                "cec2f56be1fccf51"
            ]
        ]
    },
    {
        "id": "43ea11b6033b9ecf",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "name": "constel",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "device.tx.dvbs2.constel",
        "payloadType": "global",
        "x": 1880,
        "y": 2360,
        "wires": [
            [
                "f38c438a231661c6"
            ]
        ]
    },
    {
        "id": "f3b56d13d111f207",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "name": "button animations",
        "func": "// We are not transmitting state...\nmsg.start_button_color = \"\";\nmsg.start_animation = \"fa-wifi fa-2x\";\nmsg.stop_button_color = \"\";\nmsg.stop_animation = \"fa-times fa-2x\";\nif(global.get(\"mute\") === \"0\") {\n    // We are transmitting state...\n    msg.start_button_color =\"green\";\n    msg.start_animation = \"fa-spinner fa-spin fa-2x\";\n    msg.stop_button_color = \"darkred\";\n    msg.stop_animation = \"fa-times fa-2x\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 2860,
        "wires": [
            [
                "508ff50f2a470219",
                "f0c209e940860820"
            ]
        ]
    },
    {
        "id": "30575829e5293823",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "nco",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.nco",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 2040,
        "wires": [
            [
                "bdfdc40f3409d5eb",
                "5af92414e3f29873"
            ]
        ]
    },
    {
        "id": "50469be080414712",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "digitalgain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.digitalgain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 2080,
        "wires": [
            [
                "e91e846502f35c90"
            ]
        ]
    },
    {
        "id": "7806bcad704424dd",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "fec",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.fec",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 2120,
        "wires": [
            [
                "cec2f56be1fccf51"
            ]
        ]
    },
    {
        "id": "3ea225876900d6cc",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "fecmode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.fecmode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 2160,
        "wires": [
            [
                "152082051caa1d1d"
            ]
        ]
    },
    {
        "id": "04c8e605a02922e7",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "gain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.gain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 2200,
        "wires": [
            [
                "be4a04a5a054f988",
                "37b18a222ae30d52"
            ]
        ]
    },
    {
        "id": "5256f916f7a707b7",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "frequency",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.frequency",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 2240,
        "wires": [
            [
                "dffe1e50bcaeb0a5",
                "807128449158f2eb"
            ]
        ]
    },
    {
        "id": "0116ed63e32c47c2",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "constel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.constel",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 2400,
        "wires": [
            [
                "f38c438a231661c6",
                "c5ceed661f8529ce"
            ]
        ]
    },
    {
        "id": "88e74c15960c22df",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "frame",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.frame",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 2440,
        "wires": [
            [
                "ce96de0f7dba91c5",
                "0c74362e749bcdc4"
            ]
        ]
    },
    {
        "id": "475c87a434b0f7e6",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "pilots",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.pilots",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 2480,
        "wires": [
            [
                "16a3685e614e0995",
                "4a50af4869a33baa"
            ]
        ]
    },
    {
        "id": "271147b0966b0076",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "gainvariable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.gainvariable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 2520,
        "wires": [
            [
                "70cb26f62de94a5d",
                "b1b6fc76c723e0f1"
            ]
        ]
    },
    {
        "id": "570136a8608a39a6",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "tssourcemode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.tssourcemode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 2560,
        "wires": [
            [
                "93d8b2c69bdc7792",
                "7b06e3153449eb9a"
            ]
        ]
    },
    {
        "id": "5f939f9512d4ba6e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "fecrange",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.fecrange",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 2600,
        "wires": [
            [
                "33a0bcca85522580",
                "d533bf0f097fedc4"
            ]
        ]
    },
    {
        "id": "3208e4f72b88b92e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "name": "did device settings change",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "deviceChange",
        "payloadType": "global",
        "x": 3580,
        "y": 80,
        "wires": [
            [
                "0c5e1df9f4cacd67"
            ]
        ]
    },
    {
        "id": "0c5e1df9f4cacd67",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "name": "save device settings ",
        "func": "if (msg.payload) {\n    global.set(\"deviceChange\", false);\n    let deviceSettings = global.get(\"device\");\n    msg.payload = JSON.stringify(deviceSettings);\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3840,
        "y": 80,
        "wires": [
            [
                "c76b9f49508d0e3f",
                "c708b213a5701d8c"
            ]
        ]
    },
    {
        "id": "c708b213a5701d8c",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "name": "",
        "filename": "settings/device.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4330,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "99a4c83c076987df",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "position": "bottom left",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Device settings changed",
        "x": 4090,
        "y": 140,
        "wires": []
    },
    {
        "id": "c76b9f49508d0e3f",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Device changes saved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3840,
        "y": 140,
        "wires": [
            [
                "99a4c83c076987df"
            ]
        ]
    },
    {
        "id": "c4c1592e68a08ac2",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "Stop encoder",
        "group": "8bd7855b29878c5b",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop {{msg.payload}}",
        "tooltip": "Kill ffmpeg steaming process",
        "color": "",
        "bgcolor": "Darkred",
        "className": "",
        "icon": "fa-stop-circle-o fa-2x",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2450,
        "y": 520,
        "wires": [
            [
                "aa4a256618f7c4a6",
                "0c94d661261c1f6e",
                "7b165d480a2ae435"
            ]
        ]
    },
    {
        "id": "0c94d661261c1f6e",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "get active ffmpeg process id",
        "func": "let payload = msg.payload;\nif (payload === \"1\") {\n    msg.backgroundcolor = \"\";\n    global.set(\"pid\", \"\");\n    global.set(\"ProfileButtonsActive\", false);\n    global.set(\"ffmpeg_cmd\", \"\");\n    msg.ffmpeg = \"clear\";\n    msg.p9_color = \"\";\n    msg.kill = \"\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 520,
        "wires": [
            [
                "870adb347b148820"
            ]
        ]
    },
    {
        "id": "f79b05ded58d1157",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "then we should stop the transmission and profile",
        "func": "let payload = msg.stop;\nif (payload){\n    global.set(\"stop\", false);\n    msg.payload = \"1\" ;\n    msg.kill = \"\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 600,
        "wires": [
            [
                "aa4a256618f7c4a6"
            ]
        ]
    },
    {
        "id": "ae8f84a8936bf21e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "global.stop checker",
        "props": [
            {
                "p": "stop",
                "v": "stop",
                "vt": "global"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "x": 2280,
        "y": 600,
        "wires": [
            [
                "f79b05ded58d1157"
            ]
        ]
    },
    {
        "id": "5937fb0a3c880ee7",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "sr",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.sr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 2280,
        "wires": [
            [
                "aa6d588a480f161c",
                "89b95ad3b6453036"
            ]
        ]
    },
    {
        "id": "7f859a7a7ee27404",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Broker address plus 8282",
        "func": "let ts_input = `${global.get(\"broker_address\")}:8282`;\nlet topic =  `${global.get(\"cmdPath\")}/tx/dvbs2/tssourceaddress`;\nmsg.topic = topic\nmsg.payload = ts_input;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.tssourceaddress\", ts_input);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1480,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "b800a9f107cb3124",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "FIRST set stream mode",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nglobal.set(\"state_color\", \"\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2260,
        "wires": [
            [
                "98580b7a29e56897",
                "000aadf55c9c61da",
                "35c6cd1a805aeca5",
                "f118040acbbf5f44"
            ]
        ]
    },
    {
        "id": "8c7733a45d32bf17",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "set mute after reboot",
        "rules": [
            {
                "t": "set",
                "p": "mute",
                "pt": "global",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 2360,
        "wires": [
            [
                "aa4a256618f7c4a6",
                "fd45eaf559f851a8"
            ]
        ]
    },
    {
        "id": "dc1c3fa4fcdb0856",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Tx offset (Hz)",
        "tooltip": "",
        "group": "861f885ba5c5eebc",
        "order": 5,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2120,
        "y": 1940,
        "wires": [
            [
                "d57c9c3c32e5a58b"
            ]
        ]
    },
    {
        "id": "d57c9c3c32e5a58b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Set global tx offset",
        "func": "let offset = Number(msg.payload);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.offset\", offset);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "4e9c1f576e08279b",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "tx offset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.offset",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 2000,
        "wires": [
            [
                "dc1c3fa4fcdb0856"
            ]
        ]
    },
    {
        "id": "a010bf6559579ac1",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Rx offset (Hz)",
        "tooltip": "",
        "group": "861f885ba5c5eebc",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2120,
        "y": 1900,
        "wires": [
            [
                "1b201451fae7fae6"
            ]
        ]
    },
    {
        "id": "204d7697c1384266",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "rx offset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rx.offset",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 1960,
        "wires": [
            [
                "a010bf6559579ac1"
            ]
        ]
    },
    {
        "id": "1b201451fae7fae6",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Set global rx offset",
        "func": "let offset = Number(msg.payload);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.rx.offset\", offset);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "645cda7b921399b2",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "group": "2b125fd54182d066",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "Rx freqeuncy",
        "label": "RX",
        "format": "{{msg.payload}} MHz",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 3210,
        "y": 1360,
        "wires": []
    },
    {
        "id": "64a9de4a4bd4dab6",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: longmynd rx freq",
        "func": "let payload = msg.payload;\nlet offset = global.get(\"device.rx.offset\");\nmsg.freq =  Number(payload + offset);\nlet rxActual =  Number(payload + offset) / 1000;\nlet topic = \"cmd/longmynd/frequency\";\nmsg.topic = topic\nmsg.payload = rxActual\nglobal.set(\"device.rx.frequency\", rxActual);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 1360,
        "wires": [
            [
                "faf5a12234cf3d6a",
                "1b8ee9dbe0155dcd",
                "343e66e2cb1a67c3"
            ]
        ]
    },
    {
        "id": "faf5a12234cf3d6a",
        "type": "calculator",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Hz to kHz",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": true,
        "decimals": "2",
        "x": 3020,
        "y": 1360,
        "wires": [
            [
                "645cda7b921399b2"
            ]
        ]
    },
    {
        "id": "3b59a3e0f9422294",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "9f151e324008585b",
        "name": "function 2",
        "func": "let jsonSettings = JSON.parse(msg.payload);\nmsg.payload = jsonSettings;\nmsg.codec = jsonSettings.CODEC;\nglobal.set(\"settings\", jsonSettings);\nglobal.set(\"device.tx.dvbs2.constel\", jsonSettings.MODE);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 80,
        "wires": [
            [
                "a49d494221eac856"
            ]
        ]
    },
    {
        "id": "a49d494221eac856",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "9f151e324008585b",
        "name": "Settings loader",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 80,
        "wires": []
    },
    {
        "id": "c140f8f622e33238",
        "type": "status",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "scope": [
            "347c8041af1a52e0",
            "746af9f95f7438cd",
            "de949c9780005117",
            "e2ddf0eaa1468069",
            "d2b51c2f7d254def",
            "306b57e47411d35c",
            "23773127332c2b1f"
        ],
        "x": 2200,
        "y": 280,
        "wires": [
            [
                "498aacb4ed3dc458"
            ]
        ]
    },
    {
        "id": "b2786302ea5b87d8",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "Pluto connection status",
        "func": "let status=msg.status.text;\nlet fill = msg.status.fill;\nlet human_status;\nif (status == \"node-red:common.status.connecting\") {\n    human_status = \"Connecting\";\n    global.set(\"state_color\", \"orange\");\n    global.set(\"first_load\", true);\n}\nif (status == \"node-red:common.status.connected\") {\n    let fw = global.get(\"fw_version\")?.slice(10);\n    human_status = fw.substring(0, fw.length - 7);\n    if(global.get(\"first_load\")){\n        global.set(\"restore\", true);\n    }\n}\nif (status == \"node-red:common.status.disconnected\") {\n    human_status = \"Disconnected\";\n    global.set(\"state_color\", \"orange\");\n    global.set(\"first_load\", true);\n}\nif (fill == \"yellow\") {\n    msg.achtergrond_kleur = \"black\"\n}\nif (fill == \"green\") {\n    msg.achtergrond_kleur = \"white\"\n}\nif (fill == \"red\") {\n    msg.achtergrond_kleur = \"white\"\n}\nmsg.human_status=human_status;\nmsg.kleur = fill;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 280,
        "wires": [
            [
                "8105dd1d410bdd4b"
            ]
        ]
    },
    {
        "id": "8105dd1d410bdd4b",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "group": "bc7afc94660c6b76",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "{{human_status}}",
        "tooltip": "",
        "color": "{{achtergrond_kleur}}",
        "bgcolor": "{{kleur}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2750,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "43c746e7299a60f3",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "group": "bc7afc94660c6b76",
        "order": 1,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Pluto",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2850,
        "y": 320,
        "wires": []
    },
    {
        "id": "23f54550ba5b6a79",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "group": "8bd7855b29878c5b",
        "order": 11,
        "width": "6",
        "height": 1,
        "name": "Video bitrate",
        "label": "<font size=3>Video bitrate",
        "format": "<font size=3>{{msg.payload}} kb/s",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2490,
        "y": 360,
        "wires": []
    },
    {
        "id": "5d929a20d665af8d",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "group": "8bd7855b29878c5b",
        "order": 10,
        "width": "6",
        "height": 1,
        "name": "TS bitrate",
        "label": "<font size=3>TS bitrate",
        "format": "<font size=3>{{msg.payload}} kb/s",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2740,
        "y": 400,
        "wires": []
    },
    {
        "id": "332cd73b70ec7dca",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.VBITRATE",
        "payloadType": "global",
        "x": 2280,
        "y": 360,
        "wires": [
            [
                "23f54550ba5b6a79"
            ]
        ]
    },
    {
        "id": "b62a3f484010816e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.tx.dvbs2.ts.bitrate",
        "payloadType": "global",
        "x": 2290,
        "y": 400,
        "wires": [
            [
                "8d58e07463dad267"
            ]
        ]
    },
    {
        "id": "a0addd449f41ee70",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Codec dropdown",
        "label": "Codec",
        "tooltip": "",
        "place": "Select...",
        "group": "8bd7855b29878c5b",
        "order": 4,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "SW - libx264",
                "value": "libx264",
                "type": "str"
            },
            {
                "label": "SW - libx265",
                "value": "libx265",
                "type": "str"
            },
            {
                "label": "SW - libvvenc",
                "value": "libvvenc",
                "type": "str"
            },
            {
                "label": "SW - libaom-av1",
                "value": "libaom-av1",
                "type": "str"
            },
            {
                "label": "HW - h264_nvenc",
                "value": "h264_nvenc",
                "type": "str"
            },
            {
                "label": "HW - hevc_nvenc",
                "value": "hevc_nvenc",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 410,
        "y": 600,
        "wires": [
            [
                "1bb882ca67278b69"
            ]
        ]
    },
    {
        "id": "3c2665b335deadcc",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "Frames per second",
        "tooltip": "",
        "place": "",
        "group": "8bd7855b29878c5b",
        "order": 9,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "5fps",
                "value": "5",
                "type": "str"
            },
            {
                "label": "10 fps",
                "value": "10",
                "type": "str"
            },
            {
                "label": "15 fps",
                "value": "15",
                "type": "str"
            },
            {
                "label": "20 fps",
                "value": "20",
                "type": "str"
            },
            {
                "label": "25 fps",
                "value": "25",
                "type": "str"
            },
            {
                "label": "30 fps",
                "value": "30",
                "type": "str"
            },
            {
                "label": "48 fps",
                "value": "48",
                "type": "str"
            },
            {
                "label": "50 fps",
                "value": "50",
                "type": "str"
            },
            {
                "label": "60 fps",
                "value": "60",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 410,
        "y": 660,
        "wires": [
            [
                "6e2b3c9e08662125"
            ]
        ]
    },
    {
        "id": "1bb882ca67278b69",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "function 1",
        "func": "let payload = msg.payload;\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 600,
        "wires": [
            [
                "5989fbe4c1133db2"
            ]
        ]
    },
    {
        "id": "6e2b3c9e08662125",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Framerate",
        "rules": [
            {
                "t": "set",
                "p": "settings.FPS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 660,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "ae40a9e5bdd0d113",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Audio channels",
        "rules": [
            {
                "t": "set",
                "p": "settings.AUDIO",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 720,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "5989fbe4c1133db2",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Codec",
        "rules": [
            {
                "t": "set",
                "p": "settings.CODEC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 600,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "b003500f8ea3ffe1",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "Image",
        "tooltip": "",
        "place": "",
        "group": "8bd7855b29878c5b",
        "order": 5,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "426x240",
                "type": "str"
            },
            {
                "label": "",
                "value": "640x360",
                "type": "str"
            },
            {
                "label": "",
                "value": "854x480",
                "type": "str"
            },
            {
                "label": "",
                "value": "960x540",
                "type": "str"
            },
            {
                "label": "",
                "value": "1024x576",
                "type": "str"
            },
            {
                "label": "",
                "value": "1280x720",
                "type": "str"
            },
            {
                "label": "",
                "value": "1600x900",
                "type": "str"
            },
            {
                "label": "",
                "value": "1920x1080",
                "type": "str"
            },
            {
                "label": "",
                "value": "2560x1440",
                "type": "str"
            },
            {
                "label": "",
                "value": "3840x2160",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 370,
        "y": 780,
        "wires": [
            [
                "d2a7c63d9b2fe699"
            ]
        ]
    },
    {
        "id": "d2a7c63d9b2fe699",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Image size",
        "rules": [
            {
                "t": "set",
                "p": "settings.IMAGESIZE",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 780,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "320ab26158363e57",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "Audio bit rate",
        "tooltip": "",
        "place": "Select option",
        "group": "8bd7855b29878c5b",
        "order": 7,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "8",
                "type": "str"
            },
            {
                "label": "",
                "value": "12",
                "type": "str"
            },
            {
                "label": "",
                "value": "16",
                "type": "str"
            },
            {
                "label": "",
                "value": "24",
                "type": "str"
            },
            {
                "label": "",
                "value": "32",
                "type": "str"
            },
            {
                "label": "",
                "value": "48",
                "type": "str"
            },
            {
                "label": "",
                "value": "64",
                "type": "str"
            },
            {
                "label": "",
                "value": "96",
                "type": "str"
            },
            {
                "label": "",
                "value": "128",
                "type": "str"
            },
            {
                "label": "",
                "value": "192",
                "type": "str"
            },
            {
                "label": "",
                "value": "256",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 390,
        "y": 840,
        "wires": [
            [
                "9c6e205117c83338"
            ]
        ]
    },
    {
        "id": "9c6e205117c83338",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Audio Bitrate",
        "rules": [
            {
                "t": "set",
                "p": "settings.ABITRATE",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 840,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "6bfbf0101b2cd3a4",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Settings manager",
        "func": "let jsonSettings = global.get(\"settings\");\nmsg.codec = jsonSettings.CODEC;\nmsg.payload = JSON.stringify(jsonSettings);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 660,
        "wires": [
            [
                "3eb70786a69e6c70",
                "34feacf8cac79e5e"
            ]
        ]
    },
    {
        "id": "34feacf8cac79e5e",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "filename": "settings/settings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1120,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "072a53bc4325b8e2",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "image size",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.IMAGESIZE",
        "payloadType": "global",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "b003500f8ea3ffe1"
            ]
        ]
    },
    {
        "id": "da44a9637b5774a0",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "audio bitrate",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.ABITRATE",
        "payloadType": "global",
        "x": 140,
        "y": 840,
        "wires": [
            [
                "320ab26158363e57"
            ]
        ]
    },
    {
        "id": "3db47b10f2ad0660",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "audio channels",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.AUDIO",
        "payloadType": "global",
        "x": 140,
        "y": 720,
        "wires": [
            [
                "7e30ac73bb50c7aa"
            ]
        ]
    },
    {
        "id": "9afe5b50e0c2e439",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "fps",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.FPS",
        "payloadType": "global",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "3c2665b335deadcc"
            ]
        ]
    },
    {
        "id": "3eb70786a69e6c70",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Set globals",
        "rules": [
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "stop",
                "pt": "global",
                "to": "true",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "1411feb53b899df2",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.CODEC",
        "payloadType": "global",
        "x": 170,
        "y": 600,
        "wires": [
            [
                "a0addd449f41ee70"
            ]
        ]
    },
    {
        "id": "762e2c70acd9ebe0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "send min device FEC for variable fecmode ",
        "func": "if (msg.fec) {\n    global.set(\"deviceChange\", true);\n    let payload = msg.fec;\n    let topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fec`;\n    // global.set(\"stop\", true);\n    global.set(\"device.tx.dvbs2.fec\", payload);\n    // global.set(\"settings.FEC\", payload);\n    msg.topic = topic\n    msg.payload = payload\n    return msg;\n}\nif(msg.defaultFEC){\n    global.set(\"deviceChange\", true);\n    let payload = global.get(\"settings.FEC\");\n    let topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fec`;\n    // global.set(\"stop\", true);\n    global.set(\"device.tx.dvbs2.fec\", payload);\n    msg.topic = topic\n    msg.payload = payload\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 2020,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "b1fb472a0a5e24a7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "44bb8f59b40e58cf",
        "name": "fixed fecmode setter",
        "func": "let topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fecmode`;\nmsg.topic = topic\nmsg.payload = \"fixed\";\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.fecmode\", \"fixed\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "a5d3ec26a3634e1e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "color injector",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "state_color",
        "payloadType": "global",
        "x": 180,
        "y": 2260,
        "wires": [
            [
                "7d6077cea86f2378"
            ]
        ]
    },
    {
        "id": "40caf32a1fc66903",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tune",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3200,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "f34bfe124eab12e8",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 3010,
        "y": 440,
        "wires": [
            [
                "40caf32a1fc66903"
            ]
        ]
    },
    {
        "id": "78db13f139016718",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 3010,
        "y": 500,
        "wires": [
            [
                "7aa0b41ed418f215"
            ]
        ]
    },
    {
        "id": "7aa0b41ed418f215",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tune_table",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3220,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "eb77e66d5c0acdae",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "tune_done",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 3030,
        "y": 560,
        "wires": [
            [
                "cffbb4b1eb45b8da"
            ]
        ]
    },
    {
        "id": "cffbb4b1eb45b8da",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tune_done",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3220,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "8879551bc103b8c4",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 3010,
        "y": 620,
        "wires": [
            [
                "ba71cda151f629ae"
            ]
        ]
    },
    {
        "id": "09f981f156e98728",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "send channel options",
        "func": "let payload = msg.payload;\nmsg.payload = global.get(\"device.tx.frequency\");\nmsg.options = JSON.parse(payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 620,
        "wires": [
            [
                "dffe1e50bcaeb0a5"
            ]
        ]
    },
    {
        "id": "9d36e0103e48d0eb",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "Build device list",
        "func": "let ffmpegOut = msg.payload;\nif (ffmpegOut.includes(\"[dshow\")) {\n  let device_array = global.get(\"device_array\");\n  let indexStart = getPosition(ffmpegOut, '\"', 1);\n  let indexEnd = getPosition(ffmpegOut, '\"', 2);\n  const deviceString = ffmpegOut.substring(indexStart + 1, indexEnd);\n  device_array.push(deviceString)\n  global.set(\"device_array\", device_array);\n  msg.payload = deviceString;\n  return msg;\n}\n\nfunction getPosition(string, subString, index) {\n  return string.split(subString, index).join(subString).length;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3660,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "81e222ea9f35567c",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "find devices",
        "x": 3430,
        "y": 940,
        "wires": [
            [],
            [
                "9d36e0103e48d0eb"
            ],
            [
                "6c240bebc70161fa"
            ]
        ]
    },
    {
        "id": "ce7363465aea09c2",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "group": "88af1ac84b7217bd",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Find Devices",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 3010,
        "y": 880,
        "wires": [
            [
                "5c9a646ff82923e6"
            ]
        ]
    },
    {
        "id": "92680e051846903d",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "label": "Audio Device",
        "tooltip": "",
        "place": "",
        "group": "88af1ac84b7217bd",
        "order": 4,
        "width": "13",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "{{msg.payload}}",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3910,
        "y": 940,
        "wires": [
            [
                "d5144c0538d61e55"
            ]
        ]
    },
    {
        "id": "6c240bebc70161fa",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "function 3",
        "func": "let device_array = global.get(\"device_array\");\nlet array = [];\nfor (let index = 0; index < device_array.length; index++) {\n    array[index] = device_array[index];\n}\nmsg.payload = array[0];\nmsg.options = array;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3660,
        "y": 1000,
        "wires": [
            [
                "92680e051846903d",
                "061c529da56f288b"
            ]
        ]
    },
    {
        "id": "061c529da56f288b",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "label": "Video Device",
        "tooltip": "",
        "place": "Select option",
        "group": "88af1ac84b7217bd",
        "order": 5,
        "width": "13",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3910,
        "y": 1020,
        "wires": [
            [
                "6cdbc7e33d7543c1"
            ]
        ]
    },
    {
        "id": "d5144c0538d61e55",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.audio_device",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4140,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "6cdbc7e33d7543c1",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.video_device",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4140,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "378dce373fcfc379",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "ffplay ip and title setter",
        "func": "let title = global.get('ffplay_title');\nlet titleWindows = global.get('ffplay_title');\n\nlet ontop = global.get('device.rx.ffplay_ontop') === true ? \"-alwaysontop\" : \"\";\ntitle = `${title}_:_Press_\\'9\\',\\'0\\'_for_volume_down_and_up,_\\'m\\'_for_mute,_right_arrow_key_\\\\'->\\\\'_to_seek_to_latest_frame`;\ntitleWindows = `\\\"${titleWindows}: Press \\'9\\',\\'0\\' for volume down and up, \\'m\\' for mute, right arrow key \\`->\\` to seek to latest frame\\\"`;\nlet titleStr = titleWindows;\nif (global.get(\"platform\") === \"linux\") titleStr = title;\nglobal.set(\"vlc_title\", titleStr);\n// title = `test`;\n// global.set(\"ffplay_title\", \"\");\nlet imagesize = global.get('device.rx.ffplay_size');\nlet volume = global.get('device.rx.ffplay_volume');\nlet xPos = imagesize.indexOf(\"x\");\nlet hor = imagesize.substr(0, xPos);\nlet vert = imagesize.substr(xPos + 1, imagesize.length);\nmsg.size = `${hor}x${vert}`;\nlet path = `${global.get(\"settings.ffplay_console\") ? \"\" : \"start\"} ${global.get(\"device.ffplay_path\")}`;\nif (global.get(\"platform\") === \"linux\") path = `${global.get(\"settings.ffplay_console\") ? \"\" : \"gnome-terminal -e\"} \\\"${global.get(\"device.ffplay_path_linux\")}`;\nmsg.payload = `${path} udp://@${global.get(\"device.rx.tsip\")} -window_title ${titleStr} -volume ${volume} -seek_interval 3  -x ${hor} -y ${vert} -hide_banner -top ${global.get(\"ffplay_top\")} -left ${global.get(\"ffplay_left\")} ${ontop}${global.get(\"platform\") === \"linux\" ? `\\\"`: ``}`;\n// msg.payload = \n// `udp://@${global.get(\"device.rx.tsip\")} ` + \n// `-window_title ${title} ` + \n// `-volume ${volume} ` + \n// `-seek_interval 3 ` + \n// `-x ${hor} `+ \n// `-y ${vert} ` + \n// `-hide_banner ` + \n// `-top ${global.get(\"ffplay_top_exit\")} ` + \n// `-left ${global.get(\"ffplay_left_exit\")} ` + \n// `${ontop}`\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 780,
        "wires": [
            [
                "023820f309b020da"
            ]
        ]
    },
    {
        "id": "6e64d146147821e7",
        "type": "trigger",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "Kill and wait 250ms",
        "op1": "1",
        "op2": "1",
        "op1type": "num",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 2230,
        "y": 760,
        "wires": [
            [
                "3e90d102d97d90d1"
            ],
            [
                "378dce373fcfc379"
            ]
        ]
    },
    {
        "id": "865c9cd7fad69b04",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "command": "powershell \"Get-Process | Where {$_.ProcessName -Like 'MiniTioune*'}\"",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "wmic to check if minitioune is running",
        "x": 4290,
        "y": 3000,
        "wires": [
            [
                "8c74bea29b3244b0"
            ],
            [],
            []
        ]
    },
    {
        "id": "8c74bea29b3244b0",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "if we are not 0, we have a PID",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4610,
        "y": 3020,
        "wires": [
            [
                "c8e4e5eb867b6e88"
            ],
            [
                "517a7337244c67a7"
            ]
        ]
    },
    {
        "id": "d7eb35aa7c9a4908",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Minitiouner isn't running, open?",
        "x": 4270,
        "y": 3080,
        "wires": [
            [
                "3a1ea47d1bb87edc"
            ]
        ]
    },
    {
        "id": "cdb49e4080a5ecb2",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "set dialog text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Minitiouner is not running... open?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4040,
        "y": 3080,
        "wires": [
            [
                "d7eb35aa7c9a4908"
            ]
        ]
    },
    {
        "id": "25f28cc77302135e",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Open Minitiouner",
        "x": 4570,
        "y": 3280,
        "wires": [
            [],
            [],
            [
                "1de26d5def9ca4f5"
            ]
        ]
    },
    {
        "id": "274b304d8404d31e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "set minitiouner path",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "device.minitioune_path",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4330,
        "y": 3200,
        "wires": [
            [
                "25f28cc77302135e",
                "93e49a0d26636e17"
            ]
        ]
    },
    {
        "id": "3a1ea47d1bb87edc",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "Check if okay",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4520,
        "y": 3080,
        "wires": [
            [
                "274b304d8404d31e"
            ]
        ]
    },
    {
        "id": "93e49a0d26636e17",
        "type": "trigger",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "trigger tune 7s after opening",
        "op1": "1",
        "op2": "last_rx_tune_udp",
        "op1type": "str",
        "op2type": "global",
        "duration": "9",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 4580,
        "y": 3200,
        "wires": [
            [
                "34a5dcd51ab8d855"
            ],
            [
                "58a19d39b1eb3028"
            ]
        ]
    },
    {
        "id": "748c39ac026e286f",
        "type": "udp out",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 5230,
        "y": 3200,
        "wires": []
    },
    {
        "id": "58a19d39b1eb3028",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "replay last tune command to udp multicast",
        "func": "let payload = msg.payload;\nmsg.payload = payload;\nmsg.ip = global.get(\"device.rx.configIP\")\nmsg.port = 6789;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4980,
        "y": 3200,
        "wires": [
            [
                "748c39ac026e286f"
            ]
        ]
    },
    {
        "id": "a773a2941ec99d3d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "f6218c30fc4ec8b7",
        "name": "ts analyse",
        "func": "let tsanalysis = JSON.parse(msg.payload);\nif (Object.keys(tsanalysis).length === 0 && tsanalysis.constructor === Object) {\n    msg.payload = \"failed\";\n    return msg\n    }\nlet stats = {};\nfor (let index = 0; index < tsanalysis.programs.length; index++) {\n    const program = tsanalysis.programs[index];\n    if (program.hasOwnProperty('tags')) {\n        stats['program_id'] = program.program_id;\n        stats['nb_streams'] = program.nb_streams;\n        stats['service_name'] = program.tags.service_name;\n        stats['service_provider'] = program.tags.service_provider;\n\n    }\n    // if (program.nb_streams !== 0){\n    //   for (let i = 0; i < program.streams.length; i++) {\n    //     const stream = program.streams[i];\n    //     stats[`stream ${i}: codec_name`] = stream.codec_name;\n    //     stats[`stream ${i}: codec_long_name`] = stream.codec_long_name;\n    //     if (stream.codec_type === \"video\") {\n    //       let sw = true;\n    //       if (stream.hasOwnProperty('profile')) sw = false;\n    //       stats[`stream ${i}: codec_sw`] = sw;\n    //     }\n\n    //   }\n    // }\n}\nlet output = JSON.stringify(`${stats.service_name} : ${stats.service_provider}`);\n// global.set(\"ffplay_title\", output)\nglobal.set(\"tsanalysis\", \"\");\nmsg.payload = output;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 260,
        "wires": [
            [
                "92f5f62ed5cadc7c",
                "428a0fc47da7621b"
            ]
        ]
    },
    {
        "id": "b61cc3d9e4fb5593",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "f6218c30fc4ec8b7",
        "name": "build json ts analysis",
        "func": "let payload = msg.payload;\nlet stringArray = global.get(\"tsanalysis\");\nstringArray += payload;\nglobal.set(\"tsanalysis\", stringArray);\n\nif(stringArray === \"\") return;\nlet yes = isJsonString(stringArray);\nif(yes){\n    msg.payload = stringArray;\n    return msg;\n}\n\nfunction isJsonString(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3360,
        "y": 260,
        "wires": [
            [
                "a773a2941ec99d3d"
            ]
        ]
    },
    {
        "id": "92f5f62ed5cadc7c",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "f6218c30fc4ec8b7",
        "position": "top right",
        "displayTime": "5",
        "highlight": "Magenta",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 3810,
        "y": 320,
        "wires": []
    },
    {
        "id": "de0df3db418f176f",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "f6218c30fc4ec8b7",
        "command": "scripts\\ffprobe.bat",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "ffprobe",
        "x": 3130,
        "y": 260,
        "wires": [
            [
                "b61cc3d9e4fb5593"
            ],
            [],
            []
        ]
    },
    {
        "id": "ef4d188e14a5bed7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "f6218c30fc4ec8b7",
        "name": "",
        "func": "msg.payload = global.get(\"device.rx.tsip\");\nglobal.set(\"tsanalysis\", \"\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3000,
        "y": 260,
        "wires": [
            [
                "de0df3db418f176f"
            ]
        ]
    },
    {
        "id": "c8e4e5eb867b6e88",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "check minitiouner path defined",
        "property": "device.minitioune_path",
        "propertyType": "global",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3750,
        "y": 3100,
        "wires": [
            [
                "cdb49e4080a5ecb2"
            ],
            [
                "7daf6fdd23e69a4c"
            ]
        ]
    },
    {
        "id": "048ae9d864757a44",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "check path",
        "x": 3890,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "7daf6fdd23e69a4c",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "set dialog text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "please define minitiouner path",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3700,
        "y": 3160,
        "wires": [
            [
                "048ae9d864757a44"
            ]
        ]
    },
    {
        "id": "517a7337244c67a7",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "use ffplay check",
        "property": "device.rx.ffplay",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 5060,
        "y": 3280,
        "wires": [
            [
                "6e64d146147821e7"
            ]
        ]
    },
    {
        "id": "34a5dcd51ab8d855",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "use ffplay check",
        "property": "device.rx.ffplay",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 5060,
        "y": 3100,
        "wires": [
            [
                "378dce373fcfc379"
            ]
        ]
    },
    {
        "id": "0566516b8c2f5f60",
        "type": "ui_switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "Use ffplay",
        "label": "",
        "tooltip": "use ffplay",
        "group": "6140f866127cd620",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1760,
        "y": 180,
        "wires": [
            [
                "4823c6eed9e03e46"
            ]
        ]
    },
    {
        "id": "4823c6eed9e03e46",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "use ffplay",
        "func": "let payload = msg.payload\nglobal.set(\"device.rx.ffplay\",  payload);\nglobal.set(\"deviceChange\", true);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e29b0f596d18b958",
        "type": "ui_switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay ontop",
        "label": "",
        "tooltip": "ffplay ontop",
        "group": "6140f866127cd620",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1770,
        "y": 240,
        "wires": [
            [
                "c99bca3dafb85e2c"
            ]
        ]
    },
    {
        "id": "c99bca3dafb85e2c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay ontop",
        "func": "let payload = msg.payload\nglobal.set(\"device.rx.ffplay_ontop\", payload);\nglobal.set(\"deviceChange\", true);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "0b68cbbed95acffe",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "",
        "label": "",
        "tooltip": "ffplay start up size",
        "place": "",
        "group": "6140f866127cd620",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "426x240",
                "type": "str"
            },
            {
                "label": "",
                "value": "640x360",
                "type": "str"
            },
            {
                "label": "",
                "value": "854x480",
                "type": "str"
            },
            {
                "label": "",
                "value": "960x540",
                "type": "str"
            },
            {
                "label": "",
                "value": "1024x576",
                "type": "str"
            },
            {
                "label": "",
                "value": "1280x720",
                "type": "str"
            },
            {
                "label": "",
                "value": "1600x900",
                "type": "str"
            },
            {
                "label": "",
                "value": "1920x1080",
                "type": "str"
            },
            {
                "label": "",
                "value": "2560x1440",
                "type": "str"
            },
            {
                "label": "",
                "value": "3840x2160",
                "type": "str"
            },
            {
                "label": "",
                "value": "1440x810",
                "type": "str"
            },
            {
                "label": "",
                "value": "1430x804",
                "type": "str"
            },
            {
                "label": "",
                "value": "1420x799",
                "type": "str"
            },
            {
                "label": "",
                "value": "1435x807",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1760,
        "y": 300,
        "wires": [
            [
                "ade9869b5330a585"
            ]
        ]
    },
    {
        "id": "ade9869b5330a585",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay size",
        "func": "let payload = msg.payload\nif(payload){\n    global.set(\"deviceChange\", true);\n    global.set(\"device.rx.ffplay_size\", payload);\n    return;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e7685ca77d90f76f",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay size",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.rx.ffplay_size",
        "payloadType": "global",
        "x": 1570,
        "y": 300,
        "wires": [
            [
                "0b68cbbed95acffe"
            ]
        ]
    },
    {
        "id": "17d14c187e03e78d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay volume",
        "func": "let payload = msg.payload\nif(payload){\n    global.set(\"deviceChange\", true);\n    global.set(\"device.rx.ffplay_volume\", payload);\n    return;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ce957a7adc0b6602",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay volume",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.rx.ffplay_volume",
        "payloadType": "global",
        "x": 1580,
        "y": 360,
        "wires": [
            [
                "a7b99958c4999cf0"
            ]
        ]
    },
    {
        "id": "a7b99958c4999cf0",
        "type": "ui_slider",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "volume",
        "label": "",
        "tooltip": "ffplay volume",
        "group": "6140f866127cd620",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 1760,
        "y": 360,
        "wires": [
            [
                "17d14c187e03e78d"
            ]
        ]
    },
    {
        "id": "cb3c608d488f8a50",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "use ffplay",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "device.rx.ffplay",
        "payloadType": "global",
        "x": 1570,
        "y": 180,
        "wires": [
            [
                "0566516b8c2f5f60"
            ]
        ]
    },
    {
        "id": "7a37be749116f373",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay ontop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "device.rx.ffplay_ontop",
        "payloadType": "global",
        "x": 1570,
        "y": 240,
        "wires": [
            [
                "e29b0f596d18b958"
            ]
        ]
    },
    {
        "id": "edf957ba7edd18f0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "92c95af69a0592d1",
        "name": "function 5",
        "func": "let payload = msg.payload;\nif(payload.includes(\",myValue=true;\")) return;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3760,
        "y": 3320,
        "wires": [
            [
                "f5b8169559eb4b73"
            ]
        ]
    },
    {
        "id": "f5b8169559eb4b73",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "92c95af69a0592d1",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3880,
        "y": 3220,
        "wires": []
    },
    {
        "id": "a21fb06793441a8f",
        "type": "udp in",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "92c95af69a0592d1",
        "name": "",
        "iface": "",
        "port": "6789",
        "ipv": "udp4",
        "multicast": "true",
        "group": "232.0.0.11",
        "datatype": "utf8",
        "x": 3710,
        "y": 3220,
        "wires": [
            [
                "f5b8169559eb4b73"
            ]
        ]
    },
    {
        "id": "dd4535e1d6b65679",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "did bit change checker",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "bitratechange",
        "payloadType": "global",
        "x": 2370,
        "y": 120,
        "wires": [
            [
                "1c303a9ac462db5c",
                "38ad92b4a70e6127"
            ]
        ]
    },
    {
        "id": "8c336280fd0fcc92",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "Settings manager",
        "func": "if (msg.payload !== 1) {\n    let jsonSettings = global.get(\"settings\");\n    msg.payload = JSON.stringify(jsonSettings);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2830,
        "y": 120,
        "wires": [
            [
                "1827c9f76c07664e",
                "8751a0dd93a8ed60"
            ]
        ]
    },
    {
        "id": "8751a0dd93a8ed60",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "",
        "filename": "settings/settings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3240,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d791940d6fb69cd4",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "bit",
        "topic": "",
        "name": "Bitrate settings changed",
        "x": 3250,
        "y": 80,
        "wires": []
    },
    {
        "id": "1827c9f76c07664e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Bitrate changes saved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3040,
        "y": 80,
        "wires": [
            [
                "d791940d6fb69cd4"
            ]
        ]
    },
    {
        "id": "5a74b55c01f09bf7",
        "type": "websocket in",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "185cc616489b2615",
        "name": "OT",
        "server": "",
        "client": "3e6a59708bbf6e6c",
        "x": 750,
        "y": 1880,
        "wires": [
            [
                "df0fb204fd14a618"
            ]
        ]
    },
    {
        "id": "df0fb204fd14a618",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "Rx tuner",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1880,
        "wires": []
    },
    {
        "id": "117e420d4df518b1",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "3bec8a3571888efd",
        "name": "",
        "url": "/setRx",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1520,
        "wires": [
            [
                "b828f6a6.47d708",
                "df0fb204fd14a618",
                "463481925ac847f1",
                "c82484c6378aaa4e",
                "1eba27791287fb18"
            ]
        ]
    },
    {
        "id": "2a5a3cc2d63b2942",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "079e67d7c1e3e99d",
        "name": "CTRL click symbol rate RX",
        "func": "let sr = Number(msg.payload.SR);\nsr = sr * 1000;\nmsg.payload = sr;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1520,
        "wires": [
            [
                "6e96b284f2323a85"
            ]
        ]
    },
    {
        "id": "6e96b284f2323a85",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "079e67d7c1e3e99d",
        "name": "Send: longmynd rx sr",
        "func": "let payload = msg.payload;\nlet topic = \"cmd/longmynd/sr\";\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"rx_time\", 0);\nglobal.set(\"rx_locked\", false);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1520,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "6154ee8d719adfbd",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "079e67d7c1e3e99d",
        "position": "bottom left",
        "displayTime": "3",
        "highlight": "blue",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Longmynd",
        "name": "Longmynd",
        "x": 1130,
        "y": 1600,
        "wires": []
    },
    {
        "id": "7d18f3e7511a4c0f",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "553167af0b3221c1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "11531a3595ef0f5a",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "553167af0b3221c1",
        "name": "Kill transmission",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1740,
        "wires": [
            [
                "55bca069bdb08ee7",
                "0c94d661261c1f6e",
                "7b165d480a2ae435"
            ]
        ]
    },
    {
        "id": "e56ed07756258705",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "553167af0b3221c1",
        "name": "busy watchdog",
        "func": "let busy = msg.payload.busy;\nif (busy === \"true\" && global.get(\"mute\") === \"0\") {\n    let freq = parseFloat(global.get(\"device.tx.frequency\")).toFixed(2);\n    let uplink = Math.round(Number(freq) / 1000000 * 4) / 4;\n    let payload =\n        Number(uplink) === Number(msg.payload.uplink) ?\n            \"You're transmitting on this channel... Hold CTRL and click to tune RX\" :\n            \"This channel is busy and you're transmitting... Hold CTRL and click to tune RX\";\n    msg.payload = payload;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1780,
        "wires": [
            [
                "7d18f3e7511a4c0f"
            ]
        ]
    },
    {
        "id": "8764be884d895f57",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "079e67d7c1e3e99d",
        "name": "CTRL click notfication formatter",
        "func": "let payload = msg.payload;\npayload.downlink = Number(payload.downlink).toFixed(2);\npayload.SR = Number(payload.SR * 1000);\nmsg.payload = JSON.stringify(payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1600,
        "wires": [
            [
                "6154ee8d719adfbd",
                "517a7337244c67a7"
            ]
        ]
    },
    {
        "id": "2c6310aae8f397fd",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "079e67d7c1e3e99d",
        "name": "CTRL click for RX frequency",
        "func": "let freq = Number(msg.payload.downlink);\nlet sr = Number(msg.payload.SR);\nsr = sr * 1000;\nlet title = `Freq: ${freq} MHz, SR: ${sr}kS `;\nif (global.get(\"platform\") === \"linux\") title = `Freq:_${freq}_MHz,SR:_${sr}_kS/s_`;\nmsg.title = title;\nglobal.set(\"ffplay_title\", title);\nfreq = freq * 1000000;\nmsg.payload = freq; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1560,
        "wires": [
            [
                "64a9de4a4bd4dab6",
                "af0afe1e86d6e2ce"
            ]
        ]
    },
    {
        "id": "b828f6a6.47d708",
        "type": "http response",
        "z": "2ec6a7ddfe0cd173",
        "g": "3bec8a3571888efd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 330,
        "y": 1560,
        "wires": []
    },
    {
        "id": "1052941d.efad6c",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "3bec8a3571888efd",
        "name": "",
        "url": "/setTx",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1600,
        "wires": [
            [
                "e56ed07756258705",
                "b828f6a6.47d708",
                "64b76a53a5576a2f",
                "63698f5f30341a43"
            ]
        ]
    },
    {
        "id": "64b76a53a5576a2f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "553167af0b3221c1",
        "name": "spectrum click tx frequency",
        "func": "let busy = msg.payload.busy;\nif (global.get(\"mute\") === \"0\") return;\n\nlet freq = Number(msg.payload.uplink);\nfreq = freq * 1000000\nmsg.payload = freq; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1700,
        "wires": [
            [
                "807128449158f2eb"
            ]
        ]
    },
    {
        "id": "63698f5f30341a43",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "553167af0b3221c1",
        "name": "spectrum click tx symbol rate if different",
        "func": "let busy = msg.payload.busy;\n\nlet sr = parseFloat(msg.payload.SR);\nsr = Number(sr * 1000000);\nif (`${sr}` !== global.get(\"device.tx.dvbs2.sr\")){\n    msg.payload = Number(sr); \n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1740,
        "wires": [
            [
                "430d098e101f5c6c",
                "89b95ad3b6453036"
            ]
        ]
    },
    {
        "id": "515e9264fb253fbc",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d95cd044385c2ba5",
        "name": "tuning multicast message",
        "func": "let offset = Math.abs(global.get(\"device.rx.offset\")/1000); // kHz\nglobal.set(\"ffplay_title\", `Freq:${Number(msg.payload.downlink) * 1000}`);\nlet receivers = global.get(\"receivers\");\nlet channel = msg.payload.channel - 1;\nlet payload = `[GlobalMsg],Freq=${Number(msg.payload.downlink) * 1000},Offset=${receivers[channel].offset},Doppler=0,Srate=${Number(msg.payload.SR) * 1000},WideScan=${receivers[channel].wide_scan},LowSR=${receivers[channel].low_sr},DVBmode=${receivers[channel].dvb_mode},FPlug=${receivers[channel].rx_socket},Voltage=${receivers[channel].lnb_volts},22kHz=${receivers[channel].lnb_22khz};`;\nif(receivers[channel].type !== \"Minitioune\") payload = `[GlobalMsg],Freq=${Number(msg.payload.downlink) * 1000},Offset=${receivers[channel].offset},Doppler=0,Srate=${Number(msg.payload.SR) * 1000},FPlug=${receivers[channel].rx_socket},Voltage=${receivers[channel].lnb_volts},22kHz=${receivers[channel].lnb_22khz};`\nmsg.payload = payload;\nglobal.set(\"last_rx_tune_udp\", payload);\nmsg.ip = receivers[channel].ip_address;\nmsg.port = receivers[channel].port;\n// msg.payload = receivers;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2000,
        "wires": [
            [
                "2f37f6fa43572da4",
                "0861bf2c01e827fb",
                "df0fb204fd14a618"
            ]
        ]
    },
    {
        "id": "2f37f6fa43572da4",
        "type": "udp out",
        "z": "2ec6a7ddfe0cd173",
        "g": "d95cd044385c2ba5",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "multi",
        "x": 1190,
        "y": 2000,
        "wires": []
    },
    {
        "id": "3d529b46ee563149",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "3bec8a3571888efd",
        "name": "",
        "url": "/setTune",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1560,
        "wires": [
            [
                "b828f6a6.47d708"
            ]
        ]
    },
    {
        "id": "20fcf5f8b61db48f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: NCO after SR change",
        "func": "let payload = global.get(\"device.tx.nco\")\nlet topic = `${global.get(\"cmdPath\")}/tx/nco`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.nco\", payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3340,
        "y": 2260,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "9695655b0a719b4a",
        "type": "trigger",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "when we change symbol rates the nco changes, so we set it after a slight delay",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2920,
        "y": 2320,
        "wires": [
            [
                "20fcf5f8b61db48f"
            ]
        ]
    },
    {
        "id": "f65818d390a71152",
        "type": "comment",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "the pluto doesn't report this change, yet frequency is off...",
        "info": "",
        "x": 2930,
        "y": 2240,
        "wires": []
    },
    {
        "id": "a944ecbfc565c58b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "check queue",
        "func": "if(msg.payload){    \n    let now = Date.now();\n    global.set(\"last_queue_check\", now);\n    global.set(\"queue_colour\", \"\");\n    if (global.get(\"last_queue\") - now < -2000){\n        global.set(\"queue_colour\", \"red\");\n    }\n    msg.payload = global.get(\"last_queue\") - now;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "f1d972d20ef54cf2",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 910,
        "y": 3440,
        "wires": [
            [
                "a944ecbfc565c58b"
            ]
        ]
    },
    {
        "id": "ef310c8290b45f2f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "set last timestamp",
        "func": "if(msg.payload){\n    let lastQueue = Date.now();\n    global.set(\"last_queue\", lastQueue);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "728cb5ecbddc04f0",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "color injector",
        "props": [
            {
                "p": "textColor",
                "v": "queue_colour",
                "vt": "global"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 540,
        "y": 3300,
        "wires": [
            [
                "b6d03834b636d44d"
            ]
        ]
    },
    {
        "id": "b22449c1178f10d2",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "queue_colour",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 3360,
        "wires": [
            []
        ]
    },
    {
        "id": "9cb8fc791809bfd9",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 3360,
        "wires": [
            [
                "b22449c1178f10d2"
            ]
        ]
    },
    {
        "id": "5aec87e336f5bf99",
        "type": "ui_switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "Use minitioune",
        "label": "",
        "tooltip": "use minitioune",
        "group": "6140f866127cd620",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1780,
        "y": 420,
        "wires": [
            [
                "cfdd9fffb83031de"
            ]
        ]
    },
    {
        "id": "cfdd9fffb83031de",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "use ffplay",
        "func": "let payload = msg.payload\nglobal.set(\"device.rx.use_minitioune\",  payload);\nglobal.set(\"deviceChange\", true);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "de67b561ba5031e9",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "minitioune",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "device.rx.use_minitioune",
        "payloadType": "global",
        "x": 1570,
        "y": 420,
        "wires": [
            [
                "5aec87e336f5bf99"
            ]
        ]
    },
    {
        "id": "03deb776667356fc",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "Open ffplay",
        "group": "6140f866127cd620",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "Ffplay",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4810,
        "y": 3280,
        "wires": [
            [
                "517a7337244c67a7"
            ]
        ]
    },
    {
        "id": "1decf932a1bf2fcd",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "TS bitrate expected",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/dvbs2/ts/bitrate\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3780,
        "wires": [
            [
                "32e18f58d4f086f8"
            ]
        ]
    },
    {
        "id": "ba4a435e3fbcd377",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: ts bitrate expected",
        "func": "var payload = Number(msg.payload);\nif (payload !== global.get(\"device.tx.dvbs2.ts.bitrate\") && global.get(\"device.tx.dvbs2.fecmode\") === \"fixed\"){\n    global.set(\"bitratechange\", true);\n    global.set(\"device.tx.dvbs2.ts.bitrate\", payload);\n    return msg;\n}\n// let payload = msg.payload;\n// if (payload !== global.get(\"device.tx.dvbs2.ts.bitrate\")) {\n//     global.set(\"bitratechange\", true);\n//     global.set(\"device.tx.dvbs2.ts.bitrate\", payload);\n//     return msg;\n// }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 3780,
        "wires": [
            []
        ]
    },
    {
        "id": "8d58e07463dad267",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "ts bytes to kilobytes",
        "func": "let payload = msg.payload;\nlet tsRate = (payload / 1000).toFixed(2);\nmsg.payload = Number(tsRate);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2530,
        "y": 400,
        "wires": [
            [
                "5d929a20d665af8d"
            ]
        ]
    },
    {
        "id": "aed175dfbecd5c12",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "saver",
        "group": "da031ac17a307778",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Saver",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p3_color}}",
        "className": "",
        "icon": "fa-floppy-o  fa-2x",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 1220,
        "wires": [
            [
                "86a53ceb1364b3e0"
            ]
        ]
    },
    {
        "id": "0d83df21a3badfd8",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "name": "",
        "group": "6140f866127cd620",
        "order": 2,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "VLC",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4430,
        "y": 900,
        "wires": [
            [
                "de9023ef02fb7ae5"
            ]
        ]
    },
    {
        "id": "ba28f83345465e97",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "VLC",
        "x": 4810,
        "y": 900,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e7122ff60e30d850",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "DVB-S GUI",
        "x": 4850,
        "y": 960,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bd7080b9d634eebf",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "name": "DVBS GUI",
        "group": "7954d85ae8701623",
        "order": 6,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "DVBS GUI",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4370,
        "y": 960,
        "wires": [
            [
                "0bdcee0b1767660d"
            ]
        ]
    },
    {
        "id": "d233942edd1dc8df",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "name": "constel",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1780,
        "y": 1700,
        "wires": [
            [
                "86a189cf7830c88d"
            ]
        ]
    },
    {
        "id": "870adb347b148820",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Load custom",
        "x": 1150,
        "y": 1160,
        "wires": [
            [],
            [
                "380f24164e357a8f"
            ],
            []
        ]
    },
    {
        "id": "40fa6e863c8479b7",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "video device",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.video_device",
        "payloadType": "global",
        "x": 3470,
        "y": 1080,
        "wires": [
            [
                "6e36be08ede45d50"
            ]
        ]
    },
    {
        "id": "3d8ee5b781b696ce",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "audio device",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.audio_device",
        "payloadType": "global",
        "x": 3470,
        "y": 880,
        "wires": [
            [
                "1a213daf8dd78831"
            ]
        ]
    },
    {
        "id": "da2d9235ea59d48e",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "load profile",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1250,
        "y": 960,
        "wires": [
            [
                "0e9c3a491a2a469e"
            ]
        ]
    },
    {
        "id": "0e9c3a491a2a469e",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "make JSON settings",
        "func": "let jsonSettings = JSON.parse(msg.payload);\nmsg.payload = jsonSettings;\nglobal.set(\"settings\", jsonSettings);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 960,
        "wires": [
            [
                "59cffb16faf16e25"
            ]
        ]
    },
    {
        "id": "59cffb16faf16e25",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "set device settings",
        "func": "let payload = msg.payload;\nmsg.payload = payload;\nmsg.sr = payload.SR * 1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 960,
        "wires": [
            [
                "32d2cf35c427d5be",
                "770f2093391eb417",
                "9dc24cfa530ed99e",
                "767df388fc1df0e3",
                "2bc31358161b2eb4"
            ]
        ]
    },
    {
        "id": "32d2cf35c427d5be",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send FEC",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.FEC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 960,
        "wires": [
            [
                "cec2f56be1fccf51"
            ]
        ]
    },
    {
        "id": "770f2093391eb417",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send SR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 1020,
        "wires": [
            [
                "89b95ad3b6453036"
            ]
        ]
    },
    {
        "id": "9dc24cfa530ed99e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send MODE",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.MODE",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 1080,
        "wires": [
            [
                "c5ceed661f8529ce"
            ]
        ]
    },
    {
        "id": "475f01a383d6b75e",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Save or load?",
        "property": "loading",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 1000,
        "wires": [
            [
                "da2d9235ea59d48e"
            ],
            [
                "3e225268e88814d4"
            ]
        ]
    },
    {
        "id": "3e225268e88814d4",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "save profile",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1250,
        "y": 1020,
        "wires": [
            [
                "e733dc0c81143d51"
            ]
        ]
    },
    {
        "id": "86a53ceb1364b3e0",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "set saving",
        "rules": [
            {
                "t": "set",
                "p": "saving",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1180,
        "wires": [
            [
                "181bc2bec72e1d2d"
            ]
        ]
    },
    {
        "id": "fc3424b338c6f01a",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "position": "top right",
        "displayTime": "4",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Profile saved",
        "x": 1610,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e733dc0c81143d51",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Profile saved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1020,
        "wires": [
            [
                "fc3424b338c6f01a",
                "e5b0fa3224166063"
            ]
        ]
    },
    {
        "id": "181bc2bec72e1d2d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "button colors",
        "func": "if(msg.payload){\n    msg.p1_color = \"green\";\n    msg.p2_color = \"green\";\n    msg.p3_color = \"green\";\n    msg.p4_color = \"green\";\n    msg.p5_color = \"green\";\n    msg.p6_color = \"green\";\n    msg.p7_color = \"green\";\n    msg.p8_color = \"green\";\n    msg.p9_color = \"green\";\n    return msg;\n}\nmsg.p1_color = \"\";\nmsg.p2_color = \"\";\nmsg.p3_color = \"\";\nmsg.p4_color = \"\";\nmsg.p5_color = \"\";\nmsg.p6_color = \"\";\nmsg.p7_color = \"\";\nmsg.p8_color = \"\";\nmsg.p9_color = \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1020,
        "wires": [
            [
                "37c0f70c56da77c5",
                "321917da5c241be6",
                "6bdd18a478266cdb",
                "e41f78ecb41096ea",
                "26d4847d4e66ef33",
                "b12e26636bc4a755",
                "4ecaf72037fc5448"
            ]
        ]
    },
    {
        "id": "e5b0fa3224166063",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "set saving",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "saving",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 120,
        "y": 1080,
        "wires": [
            [
                "181bc2bec72e1d2d"
            ]
        ]
    },
    {
        "id": "25874e1909171caa",
        "type": "mqtt out",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "064bde8eca01e996",
        "x": 850,
        "y": 440,
        "wires": [],
        "inputLabels": [
            "pluto mqtt broker IN"
        ]
    },
    {
        "id": "8d24e6025fe47ef5",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "b66465fdf55144d8",
        "name": "",
        "filename": "settings/pluto.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "cdc147736509f758"
            ]
        ]
    },
    {
        "id": "cdc147736509f758",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "b66465fdf55144d8",
        "name": "transform json to broker message",
        "func": "let file = JSON.parse(msg.payload);\nmsg.action = file.action;\nmsg.broker = file.broker;\nmsg.topic = file.topic;\nmsg.payload = file.payload;\nglobal.set(\"callsign\", file.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 340,
        "wires": [
            [
                "a7dfa23e416d0533",
                "2f35ec1420f48a0f",
                "25874e1909171caa",
                "140f70c9bf342365"
            ]
        ]
    },
    {
        "id": "767df388fc1df0e3",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send Gain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.gain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 1160,
        "wires": [
            [
                "37b18a222ae30d52"
            ]
        ]
    },
    {
        "id": "2bc31358161b2eb4",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send frequency",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.frequency",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 1200,
        "wires": [
            [
                "807128449158f2eb"
            ]
        ]
    },
    {
        "id": "a7dfa23e416d0533",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "group": "bc7afc94660c6b76",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "Callsign",
        "label": "Callsign",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 860,
        "y": 320,
        "wires": []
    },
    {
        "id": "140f70c9bf342365",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "Set command path once we are done with setup",
        "func": "let callsign = msg.payload\nglobal.set(\"cmdPath\", `cmd/pluto/${callsign}`)\nglobal.set(\"broker_address\", msg.broker.broker)\nglobal.set(\"mqtt_done\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "98580b7a29e56897",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "delay restore after MODE set",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1240,
        "y": 2320,
        "wires": [
            [
                "204d7697c1384266",
                "4e9c1f576e08279b",
                "30575829e5293823",
                "50469be080414712",
                "7806bcad704424dd",
                "3ea225876900d6cc",
                "04c8e605a02922e7",
                "2b4b283274423aba",
                "0116ed63e32c47c2",
                "88e74c15960c22df",
                "475c87a434b0f7e6",
                "271147b0966b0076",
                "570136a8608a39a6",
                "4aff6b42b30f122f",
                "3845b79a049ba0b1",
                "03f8ae8f0673a768",
                "5256f916f7a707b7"
            ]
        ]
    },
    {
        "id": "f7a31bdb75d1c530",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 2520,
        "wires": []
    },
    {
        "id": "50c309ece9e67b71",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "5c31dbeab217c8e9",
        "name": "Set lowest fec",
        "func": "if (msg.test === \"error\") {\n    if(msg.payload === \"8psk\"){\n        msg.payload = \"3/5\";\n    }\n    if (msg.payload === \"16apsk\") {\n        msg.payload = \"2/3\";\n    }\n    if (msg.payload === \"32apsk\") {\n        msg.payload = \"3/4\";\n    }\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2860,
        "y": 2760,
        "wires": [
            [
                "f8b6ea291e46f876",
                "cec2f56be1fccf51"
            ]
        ]
    },
    {
        "id": "0776d1539b28a948",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "5c31dbeab217c8e9",
        "name": "set the MODE too, after we get into lowest FEC state",
        "func": "if (msg.test === \"error\") {\n    msg.payload = \"dvbs2-ts\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3180,
        "y": 2820,
        "wires": [
            [
                "f7a31bdb75d1c530",
                "1d6a50722e33c015"
            ]
        ]
    },
    {
        "id": "f8b6ea291e46f876",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "5c31dbeab217c8e9",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3040,
        "y": 2760,
        "wires": [
            [
                "0776d1539b28a948"
            ]
        ]
    },
    {
        "id": "2f35ec1420f48a0f",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "MQTT on start",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 360,
        "wires": []
    },
    {
        "id": "de9023ef02fb7ae5",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "name": "vlc",
        "func": "let imagesize = global.get('device.rx.ffplay_size');\nlet xPos = imagesize.indexOf(\"x\");\nlet hor = imagesize.substr(0, xPos);\nlet vert = imagesize.substr(xPos + 1, imagesize.length);\n\nlet vlc = `${global.get(\"device.vlc_path\")}`;\nif (global.get(\"platform\") === \"linux\") vlc = `${global.get(\"device.vlc_path_linux\")}`;\nlet dimensions = global.get(\"device.rx.ffplay_size\").split(\"x\"); // --height=${dimensions[1]}\nlet path = `\\\"${vlc}\\\" udp://@${global.get(\"device.rx.tsip\")} --video-x=50 --video-y=50 --meta-title=\\\"${global.get(\"ffplay_title\")}\\\"`;\nmsg.payload = path;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4610,
        "y": 900,
        "wires": [
            [
                "ba28f83345465e97"
            ]
        ]
    },
    {
        "id": "1a213daf8dd78831",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "push config item to options list",
        "func": "let device = msg.payload;\nlet array = [];\narray.push(device);\nmsg.options = array;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3710,
        "y": 880,
        "wires": [
            [
                "92680e051846903d"
            ]
        ]
    },
    {
        "id": "6e36be08ede45d50",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "push config item to options list",
        "func": "let device = msg.payload;\nlet array = [];\narray.push(device);\nmsg.options = array;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3750,
        "y": 1080,
        "wires": [
            [
                "061c529da56f288b"
            ]
        ]
    },
    {
        "id": "ecb0e81ee3028514",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "set first_load",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2230,
        "y": 240,
        "wires": [
            [
                "3ee02849882f8ff7"
            ]
        ]
    },
    {
        "id": "3ee02849882f8ff7",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "set first_load",
        "rules": [
            {
                "t": "set",
                "p": "first_load",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2410,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "61748e994293d03b",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "first_load",
        "payloadType": "global",
        "x": 190,
        "y": 2300,
        "wires": [
            [
                "da0526f09e2cf48c"
            ]
        ]
    },
    {
        "id": "da0526f09e2cf48c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "press button when connected",
        "func": "if (msg.payload) {\n    if (global.get(\"restore\")) {\n        global.set(\"first_load\", false);\n        global.set(\"restore\", false);\n        msg.payload = \"Press button\";\n        return msg;\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 2300,
        "wires": [
            [
                "c667113f68ae72fa"
            ]
        ]
    },
    {
        "id": "c667113f68ae72fa",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 2300,
        "wires": [
            [
                "a56122d1643df6cf",
                "a8ded79652836a82",
                "a14cd65fe7fac722"
            ]
        ]
    },
    {
        "id": "a56122d1643df6cf",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "Auto restore",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 2300,
        "wires": []
    },
    {
        "id": "7e30ac73bb50c7aa",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "Audio channels",
        "tooltip": "",
        "place": "Select option",
        "group": "8bd7855b29878c5b",
        "order": 6,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Mono",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Stereo",
                "value": "2",
                "type": "str"
            },
            {
                "label": "5.1",
                "value": "6",
                "type": "str"
            },
            {
                "label": "7.1",
                "value": "8",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 400,
        "y": 720,
        "wires": [
            [
                "ae40a9e5bdd0d113"
            ]
        ]
    },
    {
        "id": "54cbda477035a37f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: gain",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.gain\")){\n    // global.set(\"device.tx.gain\", payload);\n    msg.payload = parseFloat(payload).toFixed(2);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3020,
        "wires": [
            [
                "be4a04a5a054f988"
            ]
        ]
    },
    {
        "id": "b019a1fc7eadfd0f",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "2b125fd54182d066",
        "order": 7,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "-Hz",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2110,
        "y": 1660,
        "wires": [
            [
                "524de1980547eaea"
            ]
        ]
    },
    {
        "id": "679eb4e7914de8fa",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "group": "8bd7855b29878c5b",
        "order": 1,
        "width": "6",
        "height": 1,
        "name": "Encoder controls",
        "label": "<b><font size=4><font color=\"#CC0D00\"}>Encoder controls",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2750,
        "y": 360,
        "wires": []
    },
    {
        "id": "000aadf55c9c61da",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "JSON restore",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 2240,
        "wires": []
    },
    {
        "id": "428a0fc47da7621b",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "f6218c30fc4ec8b7",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3780,
        "y": 260,
        "wires": []
    },
    {
        "id": "fcc82dc0c60388f5",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Network",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.network",
        "payloadType": "global",
        "x": 2460,
        "y": 3180,
        "wires": [
            [
                "bb8dee7ad47db69c"
            ]
        ]
    },
    {
        "id": "bb8dee7ad47db69c",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Network",
        "label": "Network",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2700,
        "y": 3180,
        "wires": [
            [
                "44f0b7da719f1757"
            ]
        ]
    },
    {
        "id": "44f0b7da719f1757",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "set network",
        "rules": [
            {
                "t": "set",
                "p": "settings.network",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "3b86358ac5d8c435",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "PC1 UDP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.pc1",
        "payloadType": "global",
        "x": 2470,
        "y": 3240,
        "wires": [
            [
                "6f6601d609b6460d"
            ]
        ]
    },
    {
        "id": "1de281946f74c19b",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "set PC1 UDP",
        "rules": [
            {
                "t": "set",
                "p": "settings.pc1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "6f6601d609b6460d",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "PC1 UDP",
        "label": "Computer receiving UDP IP",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2700,
        "y": 3240,
        "wires": [
            [
                "1de281946f74c19b"
            ]
        ]
    },
    {
        "id": "01840b0f91ef20b4",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "PC2 TCP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.pc2",
        "payloadType": "global",
        "x": 2470,
        "y": 3300,
        "wires": [
            [
                "1ca63cc42b3ba5f8"
            ]
        ]
    },
    {
        "id": "1ca63cc42b3ba5f8",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "PC2 TCP",
        "label": "Your computer IP",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2700,
        "y": 3300,
        "wires": [
            [
                "5db94457ba6ae6b6"
            ]
        ]
    },
    {
        "id": "5db94457ba6ae6b6",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "set PC2 TCP",
        "rules": [
            {
                "t": "set",
                "p": "settings.pc2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 3300,
        "wires": [
            []
        ]
    },
    {
        "id": "9dc994ba008186e4",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Portstart UDP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.portstart_udp",
        "payloadType": "global",
        "x": 2480,
        "y": 3360,
        "wires": [
            [
                "41df24c97592fd90"
            ]
        ]
    },
    {
        "id": "41df24c97592fd90",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Portstart UDP",
        "label": "Portstart UDP",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2720,
        "y": 3360,
        "wires": [
            [
                "0bd56278afe23f51"
            ]
        ]
    },
    {
        "id": "0bd56278afe23f51",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "set Portstart UDP",
        "rules": [
            {
                "t": "set",
                "p": "settings.portstart_udp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 3360,
        "wires": [
            []
        ]
    },
    {
        "id": "4c0b0ccf968a8497",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "set Portend UDP",
        "rules": [
            {
                "t": "set",
                "p": "settings.portend_udp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 3420,
        "wires": [
            []
        ]
    },
    {
        "id": "19b9271d7a62e4a5",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Portend UDP",
        "label": "Portend UDP",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2710,
        "y": 3420,
        "wires": [
            [
                "4c0b0ccf968a8497"
            ]
        ]
    },
    {
        "id": "2f1edd8276585605",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Portend UDP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.portend_udp",
        "payloadType": "global",
        "x": 2480,
        "y": 3420,
        "wires": [
            [
                "19b9271d7a62e4a5"
            ]
        ]
    },
    {
        "id": "2ecb46ec465f3a11",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Tunnel IP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.tunip",
        "payloadType": "global",
        "x": 2470,
        "y": 3600,
        "wires": [
            [
                "5635c4cc49824c04"
            ]
        ]
    },
    {
        "id": "5635c4cc49824c04",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Tunnel IP",
        "label": "Tunnel IP",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2700,
        "y": 3600,
        "wires": [
            [
                "71e2bcf77d069c8e"
            ]
        ]
    },
    {
        "id": "71e2bcf77d069c8e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "set Tunnel",
        "rules": [
            {
                "t": "set",
                "p": "settings.tunip",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 3600,
        "wires": [
            []
        ]
    },
    {
        "id": "4cbca64d40e28578",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "5",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3150,
        "y": 3040,
        "wires": [
            [
                "e5b15ef8662e723b",
                "0eeb16760c96d1fa"
            ]
        ]
    },
    {
        "id": "cdf1aaaf980ac998",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Portstart TCP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.portstart_tcp",
        "payloadType": "global",
        "x": 2480,
        "y": 3480,
        "wires": [
            [
                "d508b43091f81d07"
            ]
        ]
    },
    {
        "id": "d508b43091f81d07",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Portstart TCP",
        "label": "Portstart TCP",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2720,
        "y": 3480,
        "wires": [
            [
                "361d78ea269b5bbd"
            ]
        ]
    },
    {
        "id": "361d78ea269b5bbd",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "set Portstart TCP",
        "rules": [
            {
                "t": "set",
                "p": "settings.portstart_tcp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "3cb48bb52bd5e53f",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "set Portend TCP",
        "rules": [
            {
                "t": "set",
                "p": "settings.portend_tcp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 3540,
        "wires": [
            []
        ]
    },
    {
        "id": "ce3c8a12ea185160",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Portend TCP",
        "label": "Portend TCP",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2710,
        "y": 3540,
        "wires": [
            [
                "3cb48bb52bd5e53f"
            ]
        ]
    },
    {
        "id": "73b256567fa9437e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Portend TCP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.portend_tcp",
        "payloadType": "global",
        "x": 2480,
        "y": 3540,
        "wires": [
            [
                "ce3c8a12ea185160"
            ]
        ]
    },
    {
        "id": "0861bf2c01e827fb",
        "type": "OS",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "",
        "x": 3650,
        "y": 3020,
        "wires": [
            [
                "ae0409453c6b420f"
            ]
        ]
    },
    {
        "id": "ae0409453c6b420f",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "WIndows?",
        "property": "payload.platform",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "win32",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3830,
        "y": 3020,
        "wires": [
            [
                "f71130d672ef9830"
            ]
        ]
    },
    {
        "id": "97790ba38317b165",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "VLC",
        "x": 4810,
        "y": 820,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c94c6e15b8ce6ac5",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "name": "vlc 8888",
        "func": "let path = `\\\"${global.get(\"device.vlc_path\")}\\\" udp://@127.0.0.1:8888`;\nmsg.payload = path;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4620,
        "y": 820,
        "wires": [
            [
                "97790ba38317b165"
            ]
        ]
    },
    {
        "id": "b48d83349f462275",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "name": "",
        "group": "7954d85ae8701623",
        "order": 5,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "VLC",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4430,
        "y": 820,
        "wires": [
            [
                "c94c6e15b8ce6ac5"
            ]
        ]
    },
    {
        "id": "3e90d102d97d90d1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "kill cmd",
        "func": "let quit_ffplay = \"taskkill /T /F /IM ffplay.exe\";\nif(global.get(\"platform\") === \"linux\"){\n    quit_ffplay = \"pkill ffplay\";\n    msg.payload = quit_ffplay;\n    return msg;\n}\nmsg.payload = quit_ffplay;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 700,
        "wires": [
            [
                "ec867dfd3be3e114"
            ]
        ]
    },
    {
        "id": "1de26d5def9ca4f5",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "kill cmd",
        "func": "let quit_ffplay = \"taskkill /T /F /IM ffplay.exe\";\nmsg.payload = quit_ffplay;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 660,
        "wires": [
            [
                "ec867dfd3be3e114"
            ]
        ]
    },
    {
        "id": "ec867dfd3be3e114",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "kill ffplay",
        "x": 2560,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "226d23b60515dc29",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.firewall",
        "payloadType": "global",
        "x": 2500,
        "y": 3660,
        "wires": [
            [
                "8ce724b0fdbe7f04"
            ]
        ]
    },
    {
        "id": "8ce724b0fdbe7f04",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Firewall",
        "label": "Firewall",
        "tooltip": "",
        "place": "Select option",
        "group": "91cddc460b9c86f1",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Firewall enabled",
                "value": true,
                "type": "bool"
            },
            {
                "label": "Firewall disabled",
                "value": false,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2700,
        "y": 3660,
        "wires": [
            [
                "5cb8fd575bd887c8"
            ]
        ]
    },
    {
        "id": "5cb8fd575bd887c8",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "set Firewall",
        "rules": [
            {
                "t": "set",
                "p": "settings.firewall",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 3660,
        "wires": [
            []
        ]
    },
    {
        "id": "af0afe1e86d6e2ce",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "079e67d7c1e3e99d",
        "name": "ffplay title setter",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1560,
        "wires": []
    },
    {
        "id": "fc107bad9688d742",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "0d9e815c3c9d7d4a",
        "name": "",
        "url": "/config",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "74e7eb9fa07e7e53"
            ]
        ]
    },
    {
        "id": "cc29196277550f51",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "0d9e815c3c9d7d4a",
        "name": "return config object",
        "func": "let payload = JSON.parse(msg.payload);\npayload.selected = global.get(\"device.fft_url\");\npayload.receivers = global.get(\"receivers\")\npayload.rx_sr = global.get(\"device.rx.sr\");\npayload.rx_freq = Number(global.get(\"device.rx.frequency\"))*1000;\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1800,
        "wires": [
            [
                "b828f6a6.47d708"
            ]
        ]
    },
    {
        "id": "fd4311919bb382bd",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "9f151e324008585b",
        "name": "",
        "filename": "settings/settings.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1580,
        "y": 80,
        "wires": [
            [
                "3b59a3e0f9422294"
            ]
        ]
    },
    {
        "id": "74e7eb9fa07e7e53",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "0d9e815c3c9d7d4a",
        "name": "",
        "filename": "settings/spectrum.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 220,
        "y": 1760,
        "wires": [
            [
                "cc29196277550f51"
            ]
        ]
    },
    {
        "id": "ba71cda151f629ae",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "filename": "settings/channels.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3240,
        "y": 620,
        "wires": [
            [
                "09f981f156e98728"
            ]
        ]
    },
    {
        "id": "a14cd65fe7fac722",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "",
        "filename": "settings/device.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 650,
        "y": 2200,
        "wires": [
            [
                "b800a9f107cb3124"
            ]
        ]
    },
    {
        "id": "b9e877b123e7e841",
        "type": "comment",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "stream.mode must be set, or else digital mode setting reboots pluto",
        "info": "",
        "x": 1100,
        "y": 2200,
        "wires": []
    },
    {
        "id": "350b02626581dd9b",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.video_device_linux",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3500,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "4fe9cd48590dddd9",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.audio_device_linux",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3500,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "2da73cb53fcec181",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "label": "Audio device linux",
        "tooltip": "",
        "group": "88af1ac84b7217bd",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 3310,
        "y": 800,
        "wires": [
            [
                "4fe9cd48590dddd9"
            ]
        ]
    },
    {
        "id": "79ca0ff5d731c280",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "label": "Video device linux",
        "tooltip": "",
        "group": "88af1ac84b7217bd",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 3310,
        "y": 840,
        "wires": [
            [
                "350b02626581dd9b"
            ]
        ]
    },
    {
        "id": "5422df2970623734",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "WIndows?",
        "property": "payload.platform",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "win32",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3090,
        "y": 980,
        "wires": [
            [
                "6fdf3a4e90a1a7d1"
            ]
        ]
    },
    {
        "id": "6fdf3a4e90a1a7d1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "do stuff",
        "func": "let path = global.get(\"device.ffmpeg_path\");\nglobal.set(\"device_array\", []);\nmsg.payload = `${path} -list_devices true -f dshow -i dummy`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3260,
        "y": 880,
        "wires": [
            [
                "81e222ea9f35567c"
            ]
        ]
    },
    {
        "id": "5c9a646ff82923e6",
        "type": "OS",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "x": 3050,
        "y": 920,
        "wires": [
            [
                "5422df2970623734"
            ]
        ]
    },
    {
        "id": "1eba27791287fb18",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d95cd044385c2ba5",
        "name": "only pass non longmynd channels",
        "func": "if (global.get(\"receivers\").length >= msg.payload.channel) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 2000,
        "wires": [
            [
                "515e9264fb253fbc"
            ]
        ]
    },
    {
        "id": "463481925ac847f1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "079e67d7c1e3e99d",
        "name": "only pass if last channel",
        "func": "if (global.get(\"receivers\").length < msg.payload.channel) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1520,
        "wires": [
            [
                "2a5a3cc2d63b2942",
                "2c6310aae8f397fd",
                "8764be884d895f57"
            ]
        ]
    },
    {
        "id": "eea6578b7b1c97c9",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Remote Tunnel",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.remtunnel",
        "payloadType": "global",
        "x": 2480,
        "y": 3720,
        "wires": [
            [
                "4bcbcb9cfd193fed"
            ]
        ]
    },
    {
        "id": "4bcbcb9cfd193fed",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Remote Tunnel IP",
        "label": "Remote Tunnel IP (internal encoder sends the stream to this IP on port 8282)",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2730,
        "y": 3720,
        "wires": [
            [
                "7a479b074b745c8f"
            ]
        ]
    },
    {
        "id": "7a479b074b745c8f",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Remote Tunnel",
        "rules": [
            {
                "t": "set",
                "p": "settings.remtunnel",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 3720,
        "wires": [
            []
        ]
    },
    {
        "id": "ad59cd30b3cc7fcc",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Remote Tunnel Port",
        "rules": [
            {
                "t": "set",
                "p": "settings.remtunport",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 3780,
        "wires": [
            []
        ]
    },
    {
        "id": "107deb095943505f",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Remote Tunnel Port",
        "label": "Remote Tunnel Port",
        "tooltip": "",
        "group": "91cddc460b9c86f1",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2740,
        "y": 3780,
        "wires": [
            [
                "ad59cd30b3cc7fcc"
            ]
        ]
    },
    {
        "id": "12e13fa8933eafa7",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Remote Tunnel Port",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.remtunport",
        "payloadType": "global",
        "x": 2500,
        "y": 3780,
        "wires": [
            [
                "107deb095943505f"
            ]
        ]
    },
    {
        "id": "1c303a9ac462db5c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "1473030260740438",
        "name": "Calculate bitrate function",
        "func": "if (msg.payload) {\n    global.set(\"bitratechange\", false);\n    let sr = parseInt(global.get(\"device.tx.dvbs2.sr\")) / 1000;\n    global.set(\"settings.SR\", sr);\n    let audioBitRate = parseInt(global.get(\"settings.ABITRATE\"));\n    let videoBitRate = 0;\n    let fec = global.get(\"device.tx.dvbs2.fec\");\n    let modulation = global.get(\"device.tx.dvbs2.constel\");\n    // ALL THE CALCULATIONS ARE GONE!!! XD\n    let codec = global.get(\"settings.CODEC\");\n    let TSBitRate = global.get(\"device.tx.dvbs2.ts.bitrate\") / 1000;\n    //Decrease TSBitRate for GSE to 88% because of the IP-Header (internal encoder)\n    let streamout = global.get(\"device.tx.stream.mode\");\n    if (streamout == \"dvbs2-gse\")\n        TSBitRate = (TSBitRate * 0.88)\n\n    if (sr > 20 && sr < 36)\n        videoBitRate = (TSBitRate * 0.50) - audioBitRate;\n    if (sr > 35 && sr < 67)\n        videoBitRate = (TSBitRate * 0.56) - audioBitRate;\n    if (sr > 66 && sr < 126)\n        videoBitRate = (TSBitRate * 0.66) - audioBitRate;\n    if (sr > 125 && sr < 251)\n        videoBitRate = (TSBitRate * 0.75) - audioBitRate;\n    if (sr > 250 && sr < 334)\n        videoBitRate = (TSBitRate * 0.81) - audioBitRate;\n    if (sr > 333 && sr < 501)\n        videoBitRate = (TSBitRate * 0.84) - audioBitRate;\n    if (sr > 500 && sr < 1001)\n        videoBitRate = (TSBitRate * 0.87) - audioBitRate;\n    if (sr > 1000 && sr < 1501)\n        videoBitRate = (TSBitRate * 0.88) - audioBitRate;\n    if (sr > 1500 && sr < 3001)\n        videoBitRate = (TSBitRate * 0.88) - audioBitRate;\n    switch (modulation) {\n        case \"qpsk\":\n            if (fec === \"1/4\") videoBitRate = (videoBitRate * 0.80);\n            if (fec === \"1/3\") videoBitRate = (videoBitRate * 0.87);\n            if (fec === \"2/5\") videoBitRate = (videoBitRate * 0.91);\n            if (fec === \"1/2\") videoBitRate = (videoBitRate * 0.94);\n            if (fec === \"3/5\") videoBitRate = (videoBitRate * 0.96);\n            if (fec === \"2/3\") videoBitRate = (videoBitRate * 0.98);\n            break;\n        case \"8psk\":\n            if (fec === \"3/5\") videoBitRate = videoBitRate * 1.01;\n            if (fec === \"2/3\") videoBitRate = videoBitRate * 1.01;\n            if (fec === \"3/4\") videoBitRate = videoBitRate * 1.01;\n            if (fec === \"5/6\") videoBitRate = videoBitRate * 1.02;\n            if (fec === \"8/9\") videoBitRate = videoBitRate * 1.02;\n            if (fec === \"9/10\") videoBitRate = videoBitRate * 1.02;\n            break;\n        case \"16apsk\":\n            if (fec === \"2/3\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"3/4\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"5/6\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"8/9\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"9/10\") videoBitRate = videoBitRate * 1.03;\n            break;\n        case \"32apsk\":\n            if (fec === \"3/4\") videoBitRate = videoBitRate * 1.04;\n            if (fec === \"5/6\") videoBitRate = videoBitRate * 1.04;\n            if (fec === \"8/9\") videoBitRate = videoBitRate * 1.04;\n            if (fec === \"9/10\") videoBitRate = videoBitRate * 1.04;\n            break;\n    }\n    if (videoBitRate > 1 && videoBitRate < 61) videoBitRate = (videoBitRate * 0.5);\n    if (videoBitRate > 60 && videoBitRate < 101) videoBitRate = (videoBitRate * 0.7);\n    // if (codec === \"libvvenc\") videoBitRate = videoBitRate * 0.95;   \n    global.set(\"settings.TSBITRATE\", TSBitRate);\n    msg.payload = TSBitRate;\n    global.set(\"settings.VBITRATE\", Number(videoBitRate.toFixed(2)));\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2610,
        "y": 120,
        "wires": [
            [
                "8c336280fd0fcc92"
            ]
        ]
    },
    {
        "id": "1d6a50722e33c015",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Stream Mode",
        "func": "if(msg.restore){\n    let payload = msg.payload;\n    let topic = `${global.get(\"cmdPath\")}/tx/stream/mode`;\n    // global.set(\"bitratechange\", true);\n    msg.topic = topic;\n    msg.payload = payload;\n    // global.set(\"deviceChange\", true);\n    global.set(\"device.tx.stream.mode\", payload);\n    return msg;\n}\nlet payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/stream/mode`;\nglobal.set(\"bitratechange\", true);\n// global.set(\"stop\", true);\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.stream.mode\", payload);\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 2400,
        "wires": [
            [
                "1b8ee9dbe0155dcd",
                "2e677684d13ac6e0"
            ]
        ]
    },
    {
        "id": "7d0cac41101d2058",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "RX Mode",
        "tooltip": "",
        "place": "Select option",
        "group": "06245a91daf3c666",
        "order": 11,
        "width": "6",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "pass",
                "value": "pass",
                "type": "str"
            },
            {
                "label": "webfft",
                "value": "webfft",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2120,
        "y": 2500,
        "wires": [
            [
                "e1d2a880c9ca99a4"
            ]
        ]
    },
    {
        "id": "2b4b283274423aba",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "rx.stream.mode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rx.stream.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "restore",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 2320,
        "wires": [
            [
                "7d0cac41101d2058",
                "e1d2a880c9ca99a4"
            ]
        ]
    },
    {
        "id": "e1d2a880c9ca99a4",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send:Rx Stream Mode",
        "func": "\nlet payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/rx/stream/mode`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.rx.stream.mode\", payload);\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 2360,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "3084477086b5b8f2",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "",
        "pauseType": "delay",
        "timeout": "150",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3190,
        "y": 1420,
        "wires": [
            [
                "e5b15ef8662e723b"
            ]
        ]
    },
    {
        "id": "04e9fefc43a9ccbf",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "TS source address",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"tx/dvbs2/tssourceaddress\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3820,
        "wires": [
            [
                "850a280f13dbdd1a"
            ]
        ]
    },
    {
        "id": "4aff6b42b30f122f",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "tssourceaddress",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.tssourceaddress",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 2640,
        "wires": [
            [
                "8ee9aef755219d8b",
                "7f859a7a7ee27404",
                "db413e7b28287ab5"
            ]
        ]
    },
    {
        "id": "8ee9aef755219d8b",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "TS input override",
        "tooltip": "",
        "group": "861f885ba5c5eebc",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2150,
        "y": 3060,
        "wires": [
            [
                "2d1d2f2c5a3e44b6"
            ]
        ]
    },
    {
        "id": "2d1d2f2c5a3e44b6",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: tssourceaddress",
        "func": "let topic = `${global.get(\"cmdPath\")}/tx/dvbs2/tssourceaddress`;\nmsg.topic = topic;\nglobal.set(\"device.tx.dvbs2.tssourceaddress\", msg.payload);\nglobal.set(\"deviceChange\", true);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 2900,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "cdd0f03b36b22781",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "861f885ba5c5eebc",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "set default pluto ip and port",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2160,
        "y": 1480,
        "wires": [
            [
                "7f859a7a7ee27404"
            ]
        ]
    },
    {
        "id": "0389ceefaca26ce7",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.tx.dvbs2.tssourceaddress",
        "payloadType": "global",
        "x": 1780,
        "y": 3180,
        "wires": [
            [
                "8ee9aef755219d8b"
            ]
        ]
    },
    {
        "id": "db413e7b28287ab5",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "name": "TS input IP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 2560,
        "wires": []
    },
    {
        "id": "1b8ee9dbe0155dcd",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3300,
        "y": 1900,
        "wires": [
            [
                "e5b15ef8662e723b"
            ]
        ]
    },
    {
        "id": "e5b15ef8662e723b",
        "type": "mqtt out",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "064bde8eca01e996",
        "x": 3370,
        "y": 1560,
        "wires": []
    },
    {
        "id": "34093316d4a4742b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "RX Frequency",
        "func": "let payload = msg.freq;\nlet topic = `${global.get(\"cmdPath\")}/rx/webfft/frequency`;\nmsg.topic = topic;\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3140,
        "y": 1260,
        "wires": [
            [
                "e5b15ef8662e723b",
                "2b25acbe5bad144e"
            ]
        ]
    },
    {
        "id": "2b25acbe5bad144e",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "44bb8f59b40e58cf",
        "name": "rx spec freq",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3390,
        "y": 1260,
        "wires": []
    },
    {
        "id": "35c6cd1a805aeca5",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "tx.stream.mode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.stream.mode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "restore",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 2360,
        "wires": [
            [
                "2e677684d13ac6e0",
                "1d6a50722e33c015"
            ]
        ]
    },
    {
        "id": "c20ffdd3c22ba8da",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "mode?",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3290,
        "y": 2420,
        "wires": []
    },
    {
        "id": "0d29c855caae3889",
        "type": "ui_switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "",
        "label": "Sync rx longmynd",
        "tooltip": "",
        "group": "bd40e71dca80ef04",
        "order": 10,
        "width": "5",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2590,
        "y": 1260,
        "wires": [
            [
                "cf798b4f51cbac85"
            ]
        ]
    },
    {
        "id": "cf798b4f51cbac85",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tune_rx_freq",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2860,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "343e66e2cb1a67c3",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "",
        "property": "tune_rx_freq",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2950,
        "y": 1320,
        "wires": [
            [
                "34093316d4a4742b"
            ]
        ]
    },
    {
        "id": "2b1a75997781caab",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "audio device linux",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.audio_device_linux",
        "payloadType": "global",
        "x": 3050,
        "y": 800,
        "wires": [
            [
                "2da73cb53fcec181"
            ]
        ]
    },
    {
        "id": "88e8c5a8e4d381e5",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "video device linux",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.video_device_linux",
        "payloadType": "global",
        "x": 3070,
        "y": 840,
        "wires": [
            [
                "79ca0ff5d731c280"
            ]
        ]
    },
    {
        "id": "804a1873f1bbe26f",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "e3acc1961332372a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.001",
        "topic": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "42bc7dd8aab51b22"
            ]
        ]
    },
    {
        "id": "42bc7dd8aab51b22",
        "type": "OS",
        "z": "2ec6a7ddfe0cd173",
        "g": "e3acc1961332372a",
        "name": "",
        "x": 270,
        "y": 440,
        "wires": [
            [
                "85a46cf1a97d17bc"
            ]
        ]
    },
    {
        "id": "85a46cf1a97d17bc",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "e3acc1961332372a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "platform",
                "pt": "global",
                "to": "payload.platform",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mqtt_done",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "setup_busy",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 440,
        "wires": [
            [
                "fd4311919bb382bd"
            ]
        ]
    },
    {
        "id": "b733d75a1c79f1a2",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3740,
        "wires": [
            [
                "c8042db5402565df"
            ]
        ]
    },
    {
        "id": "850a280f13dbdd1a",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3820,
        "wires": [
            []
        ]
    },
    {
        "id": "32e18f58d4f086f8",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3780,
        "wires": [
            [
                "ba4a435e3fbcd377"
            ]
        ]
    },
    {
        "id": "76bed5f0ebc81a4c",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3700,
        "wires": [
            [
                "508bccc9de4506fc"
            ]
        ]
    },
    {
        "id": "56ad120991eb3c83",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3660,
        "wires": [
            [
                "31eb287a0ca0a45c"
            ]
        ]
    },
    {
        "id": "4dc0d6bc0972a150",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3620,
        "wires": [
            [
                "8a6e91746db5e484"
            ]
        ]
    },
    {
        "id": "a8ded79652836a82",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "Mute",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/tx/mute\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 2360,
        "wires": [
            [
                "d558ecd264feb081"
            ]
        ]
    },
    {
        "id": "d558ecd264feb081",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 310,
        "y": 2360,
        "wires": [
            [
                "6afa3d5787c3c8dd"
            ]
        ]
    },
    {
        "id": "6afa3d5787c3c8dd",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "Global: mute",
        "func": "let mute = msg.payload;\nif (mute === 0) {\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2360,
        "wires": [
            [
                "8c7733a45d32bf17"
            ]
        ]
    },
    {
        "id": "fd45eaf559f851a8",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "its me the muter of txers",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 2340,
        "wires": []
    },
    {
        "id": "6b675d160a28a287",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "group": "06245a91daf3c666",
        "order": 1,
        "width": "4",
        "height": 1,
        "name": "Modulator controls",
        "label": "<b><font size=4><font color=\"#CC0D00\"}>Modulator controls",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2730,
        "y": 240,
        "wires": []
    },
    {
        "id": "d4a8f10165e682cf",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "pid",
        "payloadType": "global",
        "x": 2250,
        "y": 520,
        "wires": [
            [
                "c4c1592e68a08ac2"
            ]
        ]
    },
    {
        "id": "7b165d480a2ae435",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "p9_color",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 1280,
        "wires": [
            [
                "a421a70d3ead9cd8"
            ]
        ]
    },
    {
        "id": "a421a70d3ead9cd8",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 350,
        "y": 1280,
        "wires": [
            [
                "6f5791e469edab55"
            ]
        ]
    },
    {
        "id": "a784bb0de8df6b05",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "",
        "props": [],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "193a32ea6df689be"
            ]
        ]
    },
    {
        "id": "193a32ea6df689be",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "button animations",
        "func": "if (global.get(\"pid\") !== undefined) {\n    // We have a active ffmpeg profile...\n    msg.start_animation = \"fa-circle-o-notch fa-spin fa-2x fa-fw\";\n    return msg;\n}\n// We have no active ffmpeg profile...\nmsg.start_animation = \"fa-circle-o-notch fa-2x\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1240,
        "wires": [
            [
                "6f5791e469edab55"
            ]
        ]
    },
    {
        "id": "72b5ad0fc32a3da9",
        "type": "ui_switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "",
        "label": "Hide ffplay console",
        "tooltip": "",
        "group": "bd5e2c07c46bb0ef",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2510,
        "y": 860,
        "wires": [
            [
                "0b5fd2d31add3324"
            ]
        ]
    },
    {
        "id": "538b8437c0ff15ad",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "channel calibration function",
        "func": "let calibrated = Boolean(msg.payload);\nif (calibrated) {\n    let tune_table = global.get(\"tune_table\");\n    global.set(\"tune_done\", false);\n    msg.payload = tune_table[26];\n    msg.options = [\n        { \"144.6MHz\": \"144600000\" },\n        { \"436MHz\": \"436000000\" },\n        { \"437MHz\": \"436999998\" },\n        { \"1242MHz\": \"1242000000\" },\n        { \"1255MHz\": \"1255000062\" },\n        { \"CH1 500/333/250/125KS\": `${tune_table[0]}` },\n        { \"CH2 125KS\": `${tune_table[1]}` },\n        { \"CH3 1000/500/333/250/125KS\": `${tune_table[2]}` },\n        { \"CH4 125KS\": `${tune_table[3]}` },\n        { \"CH5 500/333/250/125KS\": `${tune_table[4]}` },\n        { \"CH6 125KS\": `${tune_table[5]}` },\n        { \"CH7 500/333/250/125KS\": `${tune_table[6]}` },\n        { \"CH8 125KS\": `${tune_table[7]}` },\n        { \"CH9 1000/500/333/250/125KS\": `${tune_table[8]}` },\n        { \"CH10 125KS\": `${tune_table[9]}` },\n        { \"CH11 500/333/250/125KS\": `${tune_table[10]}` },\n        { \"CH12 125KS\": `${tune_table[11]}` },\n        { \"CH13 500/333/250/125KS\": `${tune_table[12]}` },\n        { \"CH14 125KS\": `${tune_table[13]}` },\n        { \"CH15 1000/500/333/250/125KS\": `${tune_table[14]}` },\n        { \"CH16 125KS\": `${tune_table[15]}` },\n        { \"CH17 500/333/250/125KS\": `${tune_table[16]}` },\n        { \"CH18 125KS\": `${tune_table[17]}` },\n        { \"CH19 333/250/125KS\": `${tune_table[18]}` },\n        { \"CH20 125KS\": `${tune_table[19]}` },\n        { \"CH21 333/250/125KS\": `${tune_table[20]}` },\n        { \"CH22 125KS\": `${tune_table[21]}` },\n        { \"CH23 333/250/125KS\": `${tune_table[22]}` },\n        { \"CH24 125KS\": `${tune_table[23]}` },\n        { \"CH25 333/250/125KS\": `${tune_table[24]}` },\n        { \"CH26 125KS\": `${tune_table[25]}` },\n        { \"CH27 333/250/125KS\": `${tune_table[26]}` },\n    ]\n    global.set(\"tune_table\", []);\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3320,
        "y": 680,
        "wires": [
            [
                "edea5b446673c7e5"
            ]
        ]
    },
    {
        "id": "edea5b446673c7e5",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "once calibrated we save our list",
        "func": "let payload = msg.options;\nmsg.payload = JSON.stringify(payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3610,
        "y": 680,
        "wires": [
            [
                "fca0dc49e0dbc8c8"
            ]
        ]
    },
    {
        "id": "fca0dc49e0dbc8c8",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "filename": "settings/channels.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3940,
        "y": 680,
        "wires": [
            [
                "231152bfc003a87e"
            ]
        ]
    },
    {
        "id": "231152bfc003a87e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Channel calibration complete!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4180,
        "y": 680,
        "wires": [
            [
                "2e0709eeb3596e1a"
            ]
        ]
    },
    {
        "id": "2e0709eeb3596e1a",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Channel calibration complete!",
        "x": 4410,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "fa8a006c0eeeb105",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "group": "861f885ba5c5eebc",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Calibrate your rx channels for pluto, wait 3 seconds",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 3510,
        "y": 440,
        "wires": [
            [
                "19af65617856761b"
            ]
        ]
    },
    {
        "id": "f9b91a99d9c45cf8",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "Send: Frequency",
        "func": "let payload = Number(msg.payload) + global.get(\"device.tx.offset\");\nlet topic = `${global.get(\"cmdPath\")}/tx/frequency`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"tune\", true);\n// global.set(\"deviceChange\", true);\n// global.set(\"device.tx.frequency\", payload);\n// global.set(\"settings.frequency\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4250,
        "y": 440,
        "wires": [
            [
                "7f4880a53860cbd8"
            ]
        ]
    },
    {
        "id": "7f4880a53860cbd8",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4460,
        "y": 440,
        "wires": [
            [
                "f7ad545acf4151b3"
            ]
        ]
    },
    {
        "id": "f7ad545acf4151b3",
        "type": "mqtt out",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "064bde8eca01e996",
        "x": 4630,
        "y": 440,
        "wires": []
    },
    {
        "id": "19af65617856761b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "Frequency table for channel calibration",
        "func": "let frequencies = [\n    2403250000,\n    2403500000,\n    2403750000,\n    2404000000,\n    2404250000,\n    2404500000,\n    2404750000,\n    2405000000,\n    2405250000,\n    2405500000,\n    2405750000,\n    2406000000,\n    2406250000,\n    2406500000,\n    2406750000,\n    2407000000,\n    2407250000,\n    2407500000,\n    2407750000,\n    2408000000,\n    2408250000,\n    2408500000,\n    2408750000,\n    2409000000,\n    2409250000,\n    2409500000,\n    2409750000\n]\nmsg.payload = frequencies;\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3870,
        "y": 440,
        "wires": [
            [
                "5423e8db27441d88"
            ]
        ]
    },
    {
        "id": "da43e8cbedf7105d",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "tune_done",
        "payloadType": "global",
        "x": 3050,
        "y": 680,
        "wires": [
            [
                "538b8437c0ff15ad"
            ]
        ]
    },
    {
        "id": "5423e8db27441d88",
        "type": "split",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4090,
        "y": 440,
        "wires": [
            [
                "f9b91a99d9c45cf8"
            ]
        ]
    },
    {
        "id": "cf6155c5314434de",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Set frequency back to before calibration",
        "func": "if (msg.tuned_freq){\n    let payload = msg.tuned_freq;\n    let topic = `${global.get(\"cmdPath\")}/tx/frequency`;\n    msg.topic = topic;\n    msg.payload = payload;\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 3060,
        "wires": [
            [
                "e5b15ef8662e723b"
            ]
        ]
    },
    {
        "id": "430d098e101f5c6c",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "553167af0b3221c1",
        "name": "",
        "property": "mute",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 1740,
        "wires": [
            [
                "11531a3595ef0f5a"
            ]
        ]
    },
    {
        "id": "7392fd205d401ef9",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "ffplay_console",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.ffplay_console",
        "payloadType": "global",
        "x": 2280,
        "y": 860,
        "wires": [
            [
                "72b5ad0fc32a3da9"
            ]
        ]
    },
    {
        "id": "0b5fd2d31add3324",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "set ffplay_console",
        "rules": [
            {
                "t": "set",
                "p": "settings.ffplay_console",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2750,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "3ba5b7893d572d90",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "9286ad1292f976c7",
        "name": "GSE init",
        "func": "let fw = global.get(\"settings.firewall\");\n// De-init state or just another mode state\nif (msg.payload !== \"dvbs2-gse\") {\n    let messages = [\n        \"-t nat -F\",\n        \"-F\"\n    ]\n    msg.payload = messages;\n    msg.init = false;\n    return msg;\n}\n\nif (msg.payload === \"dvbs2-gse\" && !fw) {\n    let messages = [\n        `add -net ${global.get(\"settings.network\")} gw ${global.get(\"settings.tunip\")}`,\n        `-t nat -F`,\n        `-F`,\n        `-A FORWARD -p udp -o gse0 -s ${global.get(\"settings.network\")} -j DROP`,\n        `-t nat -A POSTROUTING -o gse0 -j MASQUERADE`,\n        `-t nat -A POSTROUTING -o eth0 -j MASQUERADE`,\n        `-t nat -A PREROUTING -p udp -i gse0 --dport ${global.get(\"settings.portstart_udp\")}:${global.get(\"settings.portend_udp\")} -j DNAT --to-destination ${global.get(\"settings.pc1\")}:${global.get(\"settings.portstart_udp\")}-${global.get(\"settings.portend_udp\")}`,\n        `-t nat -A PREROUTING -p tcp -i gse0 --dport ${global.get(\"settings.portstart_tcp\")}:${global.get(\"settings.portend_tcp\")} -j DNAT --to-destination ${global.get(\"settings.pc2\")}:${global.get(\"settings.portstart_tcp\")}-${global.get(\"settings.portend_tcp\")}`,\n        `-t nat -A PREROUTING -p udp -i eth0 --dport 8282 -j DNAT --to-destination ${global.get(\"settings.remtunnel\")}:${global.get(\"settings.remtunport\")}`\n    ]\n\n    msg.payload = messages;\n    msg.init = true;\n    return msg;\n}\n\nif (msg.payload === \"dvbs2-gse\" && fw) {\n    let messages = [\n        `add -net ${global.get(\"settings.network\")} gw ${global.get(\"settings.tunip\")}`,\n        `-t nat -F`,\n        `-F`,\n        `-A FORWARD -p udp -o gse0 -s ${global.get(\"settings.network\")} -j DROP`,\n        `-t nat -A POSTROUTING -o gse0 -j MASQUERADE`,\n        `-t nat -A POSTROUTING -o eth0 -j MASQUERADE`,\n        `-t nat -A PREROUTING -p udp -i gse0 --dport ${global.get(\"settings.portstart_udp\")}:${global.get(\"settings.portend_udp\")} -j DNAT --to-destination ${global.get(\"settings.pc1\")}:${global.get(\"settings.portstart_udp\")}-${global.get(\"settings.portend_udp\")}`,\n        `-t nat -A PREROUTING -p tcp -i gse0 --dport ${global.get(\"settings.portstart_tcp\")}:${global.get(\"settings.portend_tcp\")} -j DNAT --to-destination ${global.get(\"settings.pc2\")}:${global.get(\"settings.portstart_tcp\")}-${global.get(\"settings.portend_tcp\")}`,\n        `-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT`, `-A INPUT -i gse0 -j DROP`,\n        `-t nat -A PREROUTING -p udp -i eth0 --dport 8282 -j DNAT --to-destination ${global.get(\"settings.remtunnel\")}:${global.get(\"settings.remtunport\")}`\n    ]\n    msg.payload = messages;\n    msg.init = true;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2440,
        "y": 3100,
        "wires": [
            [
                "7327672ce1acf181",
                "56e7df909b256eec",
                "f522633969ddbe94"
            ]
        ]
    },
    {
        "id": "7327672ce1acf181",
        "type": "split",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "9286ad1292f976c7",
        "name": "",
        "splt": "",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2590,
        "y": 3120,
        "wires": [
            [
                "e481ee2481f35f02"
            ]
        ]
    },
    {
        "id": "e481ee2481f35f02",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "9286ad1292f976c7",
        "name": "Send: iptables",
        "func": "let topic = `${global.get(\"cmdPath\")}/ip/iptables`;\nmsg.topic = topic;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 3120,
        "wires": [
            [
                "4cbca64d40e28578"
            ]
        ]
    },
    {
        "id": "56e7df909b256eec",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "9286ad1292f976c7",
        "name": "Send: tunadress",
        "func": "if(msg.init){\n    let topic = `${global.get(\"cmdPath\")}/ip/tunadress`;\n    msg.payload = `${global.get(\"settings.tunip\")}`;\n    msg.topic = topic;\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 3080,
        "wires": [
            [
                "4cbca64d40e28578"
            ]
        ]
    },
    {
        "id": "0bdcee0b1767660d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "name": "function 13",
        "func": "msg.payload = `start ${global.get(\"device.dvbs_gui_path\")}`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4550,
        "y": 960,
        "wires": [
            [
                "dc1201bc61b55d34"
            ]
        ]
    },
    {
        "id": "dc1201bc61b55d34",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "name": "path",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "device.dvbs_gui_path",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4690,
        "y": 960,
        "wires": [
            [
                "e7122ff60e30d850"
            ]
        ]
    },
    {
        "id": "f71130d672ef9830",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "check minitioune",
        "property": "device.rx.use_minitioune",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4010,
        "y": 3000,
        "wires": [
            [
                "865c9cd7fad69b04"
            ]
        ]
    },
    {
        "id": "c82484c6378aaa4e",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "d95cd044385c2ba5",
        "name": "check minitioune",
        "property": "device.rx.use_minitioune",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 2000,
        "wires": [
            [
                "515e9264fb253fbc"
            ],
            [
                "1eba27791287fb18"
            ]
        ]
    },
    {
        "id": "f118040acbbf5f44",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1530,
        "y": 2280,
        "wires": [
            [
                "5937fb0a3c880ee7"
            ]
        ]
    },
    {
        "id": "69d6d63ac36eab12",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "3bec8a3571888efd",
        "name": "",
        "url": "/setLocalRx",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1640,
        "wires": [
            [
                "b828f6a6.47d708",
                "2265f82b17bf49e1",
                "b86aad85fafa0443"
            ]
        ]
    },
    {
        "id": "2265f82b17bf49e1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "079e67d7c1e3e99d",
        "name": "function 14",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1600,
        "wires": [
            [
                "0c5fbec92e79eb41",
                "2a5a3cc2d63b2942",
                "8764be884d895f57"
            ]
        ]
    },
    {
        "id": "0c5fbec92e79eb41",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "CTRL click for RX frequency",
        "func": "let freq = Number(msg.payload.downlink) + Math.abs(global.get(\"device.rx.offset\"));\nlet sr = Number(msg.payload.SR);\nsr = sr * 1000;\nlet title = `Freq: ${freq} MHz, SR: ${sr}kS `;\nif (global.get(\"platform\") === \"linux\") title = `Freq:_${freq}_MHz,SR:_${sr}_kS/s_`;\nmsg.title = title;\nglobal.set(\"ffplay_title\", title);\nfreq = freq;\nmsg.payload = round(freq, 25000);\nreturn msg;\n\n\nfunction round(value, step) {\n    step || (step = 1.0);\n    var inv = 1.0 / step;\n    return Math.round(value * inv) / inv;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1460,
        "wires": [
            [
                "64a9de4a4bd4dab6",
                "b86aad85fafa0443"
            ]
        ]
    },
    {
        "id": "b86aad85fafa0443",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "Rx tuner onboard specturm",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 1440,
        "wires": []
    },
    {
        "id": "4a0642add9f7b983",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "RX Frequency",
        "func": "let span = []\nlet switcher = Number(msg.payload);\n\nswitch (switcher) {\n    case 35000:\n        span = [\n            560000,\n            1120000,\n            1680000,\n            2240000,\n            2800000,\n            3360000,\n            3920000,\n            4480000\n        ]\n        break;\n    case 66000:\n        span = [\n            1056000,\n            2112000,\n            3168000,\n            4224000,\n            5280000,\n            6336000,\n            7392000,\n            8448000\n        ]\n        break;\n    case 125000:\n        span = [\n            2000000,\n            4000000,\n            6000000,\n            8000000,\n            10000000,\n            12000000,\n            14000000,\n            16000000\n        ]\n        break;\n    case 250000:\n        span = [\n            4000000,\n            8000000,\n            12000000,\n            16000000,\n            20000000,\n            24000000,\n            28000000,\n            32000000\n        ]\n        break;\n    case 333000:\n        span = [\n            5328000,\n            10656000,\n            15984000,\n            21312000,\n            26640000,\n            31968000,\n            37296000,\n            42624000\n        ]\n        break;\n    case 500000:\n        span = [\n            8000000,\n            16000000,\n            24000000,\n            32000000,\n            40000000,\n            48000000,\n            56000000,\n            64000000\n        ]\n        break;\n    case 1000000:\n        span = [\n            16000000,\n            32000000,\n            48000000,\n            64000000,\n            80000000,\n            96000000,\n            112000000,\n            128000000\n        ]\n        break;\n    case 1500000:\n        span = [\n            24000000,\n            48000000,\n            72000000,\n            96000000,\n            120000000,\n            144000000,\n            168000000,\n            192000000\n        ]\n        break;\n    case 2000000:\n        span = [\n            8000000,\n            16000000,\n            24000000,\n            32000000\n        ]\n        break;\n    case 3000000:\n        span = [\n            6000000,\n            12000000,\n            18000000,\n            24000000,\n            30000000,\n            36000000,\n            42000000,\n            48000000\n        ]\n        break;\n    case 4000000:\n        span = [\n            8000000,\n            16000000,\n            24000000,\n            32000000,\n            40000000,\n            48000000,\n            56000000,\n            64000000\n        ]\n        break;\n}\n\nlet topic = `${global.get(\"cmdPath\")}/rx/webfft/frequency`;\nmsg.topic = topic;\nmsg.payload = global.get(\"device.rx.frequency\") * 1000;\nmsg.span = span;\nglobal.set(\"span_options\", span);\nglobal.set(\"change_span_options\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3000,
        "y": 1420,
        "wires": [
            [
                "3084477086b5b8f2",
                "2d85a16a42027727"
            ]
        ]
    },
    {
        "id": "f522633969ddbe94",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "9286ad1292f976c7",
        "name": "Send route ",
        "func": "let topic = `${global.get(\"cmdPath\")}/ip/route`;\nmsg.topic = topic;\nmsg.payload = `add -net ${global.get(\"settings.network\")} gw ${global.get(\"settings.tunip\")}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2770,
        "y": 3040,
        "wires": [
            [
                "4cbca64d40e28578"
            ]
        ]
    },
    {
        "id": "0eeb16760c96d1fa",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "GSE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3260,
        "y": 3120,
        "wires": []
    },
    {
        "id": "2d85a16a42027727",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "44bb8f59b40e58cf",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 1520,
        "wires": []
    },
    {
        "id": "38932643615d50c9",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "9286ad1292f976c7",
        "name": "Send GSE init new",
        "func": "let fw = global.get(\"settings.firewall\");\n\nif (msg.payload !== \"dvbs2-gse\") {\n\n   let payload1 = `-t nat -F`;\n   let payload2 = `-F`;\n   let payload3 = `del -net ${global.get(\"settings.network\")}`;\n\n   let message1 = {};\n   let message2 = {};\n   let message3 = {};\n\n   message1.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message2.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message3.topic = `${global.get(\"cmdPath\")}/ip/route`;\n\n   message1.payload = payload1;\n   message2.payload = payload2;\n   message3.payload = payload3;\n\n   return [[message1, message2, message3]];\n}\n\n\nif (msg.payload === \"dvbs2-gse\" && !fw) {\n   let payload0 = `add -net ${global.get(\"settings.network\")} gw ${global.get(\"settings.tunip\")}`;\n   let payload1 = `-t nat -F`;\n   let payload2 = `-F`;\n   let payload3 = `-A FORWARD -p udp -o gse0 -s ${global.get(\"settings.network\")} -j DROP`;\n   let payload4 = `-t nat -A POSTROUTING -o gse0 -j MASQUERADE`;\n   let payload5 = `-t nat -A POSTROUTING -o eth0 -j MASQUERADE`;\n   let payload6 = `-t nat -A PREROUTING -p udp -i gse0 --dport ${global.get(\"settings.portstart_udp\")}:${global.get(\"settings.portend_udp\")} -j DNAT --to-destination ${global.get(\"settings.pc1\")}:${global.get(\"settings.portstart_udp\")}-${global.get(\"settings.portend_udp\")}`;\n   let payload7 = `-t nat -A PREROUTING -p tcp -i gse0 --dport ${global.get(\"settings.portstart_tcp\")}:${global.get(\"settings.portend_tcp\")} -j DNAT --to-destination ${global.get(\"settings.pc2\")}:${global.get(\"settings.portstart_tcp\")}-${global.get(\"settings.portend_tcp\")}`;\n   let payload8 = `${global.get(\"settings.tunip\")}`;\n   let payload9 = `-t nat -A PREROUTING -p udp -i eth0 --dport 8282 -j DNAT --to-destination ${global.get(\"settings.remtunnel\")}:${global.get(\"settings.remtunport\")}`;\n\n   let message0 = {};\n   let message1 = {};\n   let message2 = {};\n   let message3 = {};\n   let message4 = {};\n   let message5 = {};\n   let message6 = {};\n   let message7 = {};\n   let message8 = {};\n   let message9 = {};\n\n   message0.topic = `${global.get(\"cmdPath\")}/ip/route`;\n   message1.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message2.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message3.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message4.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message5.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message6.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message7.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message8.topic = `${global.get(\"cmdPath\")}/ip/tunadress`;\n   message9.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n\n   message0.payload = payload0;\n   message1.payload = payload1;\n   message2.payload = payload2;\n   message3.payload = payload3;\n   message4.payload = payload4;\n   message5.payload = payload5;\n   message6.payload = payload6;\n   message7.payload = payload7;\n   message8.payload = payload8;\n   message9.payload = payload9;\n\n   return [[message0, message1, message2, message3, message4, message5, message6, message7, message8, message9]];\n}\n\n\nif (msg.payload === \"dvbs2-gse\" && fw) {\n   let payload0 = `add -net ${global.get(\"settings.network\")} gw ${global.get(\"settings.tunip\")}`;\n   let payload1 = `-t nat -F`;\n   let payload2 = `-F`;\n   let payload3 = `-A FORWARD -p udp -o gse0 -s ${global.get(\"settings.network\")} -j DROP`;\n   let payload4 = `-t nat -A POSTROUTING -o gse0 -j MASQUERADE`;\n   let payload5 = `-t nat -A POSTROUTING -o eth0 -j MASQUERADE`;\n   let payload6 = `-t nat -A PREROUTING -p udp -i gse0 --dport ${global.get(\"settings.portstart_udp\")}:${global.get(\"settings.portend_udp\")} -j DNAT --to-destination ${global.get(\"settings.pc1\")}:${global.get(\"settings.portstart_udp\")}-${global.get(\"settings.portend_udp\")}`;\n   let payload7 = `-t nat -A PREROUTING -p tcp -i gse0 --dport ${global.get(\"settings.portstart_tcp\")}:${global.get(\"settings.portend_tcp\")} -j DNAT --to-destination ${global.get(\"settings.pc2\")}:${global.get(\"settings.portstart_tcp\")}-${global.get(\"settings.portend_tcp\")}`;\n   let payload8 = `${global.get(\"settings.tunip\")}`;\n   let payload9 = `-t nat -A PREROUTING -p udp -i eth0 --dport 8282 -j DNAT --to-destination ${global.get(\"settings.remtunnel\")}:${global.get(\"settings.remtunport\")}`;\n   let payload10 = `-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT`;\n   let payload11 = `-A INPUT -i gse0 -j DROP`;\n\n\n   let message0 = {};\n   let message1 = {};\n   let message2 = {};\n   let message3 = {};\n   let message4 = {};\n   let message5 = {};\n   let message6 = {};\n   let message7 = {};\n   let message8 = {};\n   let message9 = {};\n   let message10 = {};\n   let message11 = {};\n\n   message0.topic = `${global.get(\"cmdPath\")}/ip/route`;\n   message1.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message2.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message3.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message4.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message5.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message6.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message7.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message8.topic = `${global.get(\"cmdPath\")}/ip/tunadress`;\n   message9.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message10.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n   message11.topic = `${global.get(\"cmdPath\")}/ip/iptables`;\n\n   message0.payload = payload0;\n   message1.payload = payload1;\n   message2.payload = payload2;\n   message3.payload = payload3;\n   message4.payload = payload4;\n   message5.payload = payload5;\n   message6.payload = payload6;\n   message7.payload = payload7;\n   message8.payload = payload8;\n   message9.payload = payload9;\n   message10.payload = payload10;\n   message11.payload = payload11;\n\n   return [[message0, message1, message2, message3, message4, message5, message6, message7, message8, message9, message10, message11]];\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 3120,
        "wires": [
            [
                "4cbca64d40e28578"
            ]
        ]
    },
    {
        "id": "38ad92b4a70e6127",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "Calculate bitrate function",
        "func": "if (msg.payload) {\n    global.set(\"bitratechange\", false);\n    let sr = parseInt(global.get(\"device.tx.dvbs2.sr\")) / 1000;\n    global.set(\"settings.SR\", sr);\n    let audioBitRate = parseInt(global.get(\"settings.ABITRATE\"));\n    let videoBitRate = 0;\n    let fec = global.get(\"device.tx.dvbs2.fec\");\n    let modulation = global.get(\"device.tx.dvbs2.constel\");\n    // ALL THE CALCULATIONS ARE GONE!!! XD\n    let codec = global.get(\"settings.CODEC\");\n    let TSBitRate = global.get(\"device.tx.dvbs2.ts.bitrate\") / 1000;\n    //Decrease TSBitRate for GSE to 88% because of the IP-Header (internal encoder)\n    let streamout = global.get(\"device.tx.stream.mode\");\n    if (streamout == \"dvbs2-gse\")\n        TSBitRate = (TSBitRate * 0.88)\n\n    if (sr > 20 && sr < 36)\n        videoBitRate = (TSBitRate * 0.50) - audioBitRate;\n    if (sr > 35 && sr < 67)\n        videoBitRate = (TSBitRate * 0.56) - audioBitRate;\n    if (sr > 66 && sr < 126)\n        videoBitRate = (TSBitRate * 0.66) - audioBitRate;\n    if (sr > 125 && sr < 251)\n        videoBitRate = (TSBitRate * 0.75) - audioBitRate;\n    if (sr > 250 && sr < 334)\n        videoBitRate = (TSBitRate * 0.81) - audioBitRate;\n    if (sr > 333 && sr < 501)\n        videoBitRate = (TSBitRate * 0.84) - audioBitRate;\n    if (sr > 500 && sr < 1001)\n        videoBitRate = (TSBitRate * 0.87) - audioBitRate;\n    if (sr > 1000 && sr < 1501)\n        videoBitRate = (TSBitRate * 0.88) - audioBitRate;\n    if (sr > 1500 && sr < 4001)\n        videoBitRate = (TSBitRate * 0.88) - audioBitRate;\n    switch (modulation) {\n        case \"qpsk\":\n            if (fec === \"1/4\") videoBitRate = (videoBitRate * 0.80);\n            if (fec === \"1/3\") videoBitRate = (videoBitRate * 0.87);\n            if (fec === \"2/5\") videoBitRate = (videoBitRate * 0.91);\n            if (fec === \"1/2\") videoBitRate = (videoBitRate * 0.94);\n            if (fec === \"3/5\") videoBitRate = (videoBitRate * 0.96);\n            if (fec === \"2/3\") videoBitRate = (videoBitRate * 0.98);\n            break;\n        case \"8psk\":\n            if (fec === \"3/5\") videoBitRate = videoBitRate * 1.01;\n            if (fec === \"2/3\") videoBitRate = videoBitRate * 1.01;\n            if (fec === \"3/4\") videoBitRate = videoBitRate * 1.01;\n            if (fec === \"5/6\") videoBitRate = videoBitRate * 1.02;\n            if (fec === \"8/9\") videoBitRate = videoBitRate * 1.02;\n            if (fec === \"9/10\") videoBitRate = videoBitRate * 1.02;\n            break;\n        case \"16apsk\":\n            if (fec === \"2/3\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"3/4\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"5/6\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"8/9\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"9/10\") videoBitRate = videoBitRate * 1.03;\n            break;\n        case \"32apsk\":\n            if (fec === \"3/4\") videoBitRate = videoBitRate * 1.04;\n            if (fec === \"5/6\") videoBitRate = videoBitRate * 1.04;\n            if (fec === \"8/9\") videoBitRate = videoBitRate * 1.04;\n            if (fec === \"9/10\") videoBitRate = videoBitRate * 1.04;\n            break;\n    }\n    if (videoBitRate > 1 && videoBitRate < 61) videoBitRate = (videoBitRate * 0.5);\n    if (videoBitRate > 60 && videoBitRate < 101) videoBitRate = (videoBitRate * 0.7);\n    // if (codec === \"libvvenc\") videoBitRate = videoBitRate * 0.95;   \n    global.set(\"settings.TSBITRATE\", TSBitRate);\n    msg.payload = TSBitRate;\n    global.set(\"settings.VBITRATE\", Number(videoBitRate.toFixed(2)));\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2610,
        "y": 60,
        "wires": [
            [
                "8c336280fd0fcc92"
            ]
        ]
    },
    {
        "id": "3b0281ba1b0a84e3",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "name": "inject",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 3730,
        "y": 2740,
        "wires": [
            [
                "e12018f859597dbe"
            ]
        ]
    },
    {
        "id": "e12018f859597dbe",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "name": "",
        "filename": "settings/receivers.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3920,
        "y": 2740,
        "wires": [
            [
                "7d3344c38f4145d9"
            ]
        ]
    },
    {
        "id": "7d3344c38f4145d9",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "name": "receivers",
        "func": "let receiverSettings = JSON.parse(msg.payload);\nmsg.payload = receiverSettings;\nglobal.set(\"receivers\", receiverSettings);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "47d25b72b324c7b6",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "6a8835db32d9f8ed",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "tx_time",
        "payloadType": "global",
        "x": 3740,
        "y": 1280,
        "wires": [
            [
                "d4c9f72959210bb4"
            ]
        ]
    },
    {
        "id": "d4c9f72959210bb4",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "6a8835db32d9f8ed",
        "name": "Count time",
        "func": "let txTime = msg.payload;\nif (txTime === 0) return msg;\nlet now = Date.now();\nlet time = Math.round((now - txTime) / 1000);\nmsg.payload = time;\nif (time % 600 === 0) {\n    if (time !== 0) {\n        msg.notify = `You been txing for ${time/600*10}mins, remember to preserve satellite resources :)`\n        return msg;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3910,
        "y": 1280,
        "wires": [
            [
                "1c72db672d937ce0",
                "aa5484e4337c7485"
            ]
        ]
    },
    {
        "id": "1c72db672d937ce0",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "6a8835db32d9f8ed",
        "group": "06245a91daf3c666",
        "order": 2,
        "width": "2",
        "height": 1,
        "name": "",
        "label": "On air",
        "format": "<b><font size=4><font color=\"#E54C0B\"}>{{msg.payload}}s",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 4050,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f477395f8ca8b572",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "6a8835db32d9f8ed",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 4510,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "1e1b426c252bac24",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6a8835db32d9f8ed",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "notify",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4320,
        "y": 1280,
        "wires": [
            [
                "f477395f8ca8b572"
            ]
        ]
    },
    {
        "id": "aa5484e4337c7485",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "6a8835db32d9f8ed",
        "name": "",
        "property": "notify",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 4170,
        "y": 1280,
        "wires": [
            [
                "1e1b426c252bac24"
            ]
        ]
    },
    {
        "id": "f132495fecc36548",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "50b9700a9a4f731c",
        "name": "save state",
        "func": "let fft_url = msg.payload\nglobal.set(\"device.fft_url\", fft_url);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4530,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "d46af93abcd001aa",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "50b9700a9a4f731c",
        "name": "spectrumSettings",
        "func": "let spectrumSettings = JSON.parse(msg.payload);\nmsg.payload = spectrumSettings;\nglobal.set(\"fft\", spectrumSettings);\nlet array = [];\nfor (var key in spectrumSettings) {\n   let obj = {\n      [`${key}`]: `${spectrumSettings[key]}`\n   };\n   array.push(obj);\n}\nmsg.options = array;\nmsg.payload = msg.fft_url;\nreturn msg;\n\n// msg.options = [\"1/4\", \"1/3\", \"2/5\", \"1/2\", \"3/5\", \"2/3\", \"3/4\", \"4/5\", \"5/6\", \"8/9\", \"9/10\"];\n//  msg.options = [\n//         { \"144.6MHz\": \"144600000\" },",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4190,
        "y": 2640,
        "wires": [
            [
                "5a94e29921a8893f"
            ]
        ]
    },
    {
        "id": "63d3cb318a61e47d",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "50b9700a9a4f731c",
        "name": "",
        "props": [
            {
                "p": "fft_url",
                "v": "device.fft_url",
                "vt": "global"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 3710,
        "y": 2640,
        "wires": [
            [
                "d03c46be6294064a"
            ]
        ]
    },
    {
        "id": "5a94e29921a8893f",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "50b9700a9a4f731c",
        "name": "FFT",
        "label": "FFT URL",
        "tooltip": "",
        "place": "Select option",
        "group": "2275ce4aba6ae57e",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 4350,
        "y": 2640,
        "wires": [
            [
                "f132495fecc36548"
            ]
        ]
    },
    {
        "id": "d03c46be6294064a",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "50b9700a9a4f731c",
        "name": "",
        "filename": "settings/spectrum.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3880,
        "y": 2640,
        "wires": [
            [
                "d46af93abcd001aa"
            ]
        ]
    },
    {
        "id": "42ec474e.43e4c8",
        "type": "subflow:15d7457.fcac4bb",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "",
        "env": [
            {
                "name": "flowId",
                "value": "27bb1861e8b5803b",
                "type": "str"
            }
        ],
        "x": 4800,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "e16e75f65f1a42b2",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.2",
        "topic": "",
        "x": 3710,
        "y": 1380,
        "wires": [
            [
                "18d44df70262aa37"
            ]
        ]
    },
    {
        "id": "387cd20cdde7b2fa",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "use_chat",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4550,
        "y": 1380,
        "wires": [
            [
                "42ec474e.43e4c8"
            ]
        ]
    },
    {
        "id": "d715fd10ad04ca6e",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "read dashboard settings",
        "func": "let dashboard = JSON.parse(msg.payload);\nmsg.payload = dashboard.use_chat;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4330,
        "y": 1380,
        "wires": [
            [
                "387cd20cdde7b2fa"
            ]
        ]
    },
    {
        "id": "18d44df70262aa37",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "",
        "filename": "settings/dashboard.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3950,
        "y": 1380,
        "wires": [
            [
                "d715fd10ad04ca6e",
                "83b62f5224016f4c",
                "b460c8e9f7e52b65"
            ]
        ]
    },
    {
        "id": "83b62f5224016f4c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "read dashboard settings",
        "func": "let dashboard = JSON.parse(msg.payload);\nmsg.payload = dashboard.use_longmynd;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4330,
        "y": 1460,
        "wires": [
            [
                "5538dd0dd8c2d484"
            ]
        ]
    },
    {
        "id": "5538dd0dd8c2d484",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "use_longmynd",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4570,
        "y": 1460,
        "wires": [
            [
                "6be46c0407607ba9"
            ]
        ]
    },
    {
        "id": "6be46c0407607ba9",
        "type": "subflow:15d7457.fcac4bb",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "",
        "env": [
            {
                "name": "flowId",
                "value": "d7c58eb9e7b65abb",
                "type": "str"
            }
        ],
        "x": 4800,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "b460c8e9f7e52b65",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "read dashboard settings",
        "func": "let dashboard = JSON.parse(msg.payload);\nmsg.payload = dashboard.use_switch;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4330,
        "y": 1420,
        "wires": [
            [
                "ba93cd72c45535cd"
            ]
        ]
    },
    {
        "id": "ba93cd72c45535cd",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "use_switch",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4560,
        "y": 1420,
        "wires": [
            [
                "d7d044e9b570db55"
            ]
        ]
    },
    {
        "id": "d7d044e9b570db55",
        "type": "subflow:15d7457.fcac4bb",
        "z": "2ec6a7ddfe0cd173",
        "g": "a01b8f8a522d73dd",
        "name": "",
        "env": [
            {
                "name": "flowId",
                "value": "30d0afc93dfb235a",
                "type": "str"
            }
        ],
        "x": 4800,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "9dc824c56f4f3a2c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let tiounePath = msg.payload\nglobal.set(\"device.dvbs_gui_path\", tiounePath);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "93f563206f98cde4",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "dvbs_gui_path",
        "tooltip": "",
        "group": "2275ce4aba6ae57e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4500,
        "y": 2160,
        "wires": [
            [
                "9dc824c56f4f3a2c"
            ]
        ]
    },
    {
        "id": "a53750444a663bac",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "dvbs_gui_path",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.dvbs_gui_path;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 2160,
        "wires": [
            [
                "93f563206f98cde4"
            ]
        ]
    },
    {
        "id": "06596bd1203529e7",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "inject",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 3710,
        "y": 1920,
        "wires": [
            [
                "3aadcd5b16a568f8"
            ]
        ]
    },
    {
        "id": "3aadcd5b16a568f8",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "filename": "settings/device.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3930,
        "y": 1920,
        "wires": [
            [
                "a53750444a663bac",
                "ad88d2145d494f9b",
                "382c0ba4ac25e933",
                "05d216119b33b43c",
                "21bcf98d22dabf77",
                "55f7b77a67cc54df",
                "81633328a5ead7be",
                "87560b970ae3d1ca",
                "517a1391985bff60",
                "3b2bfc1de615d1c2",
                "f410cc2d0716c94e",
                "9077d20ca65ab2fd",
                "d8696aeccbf8391b",
                "9fc2b2b1712c4ac3"
            ]
        ]
    },
    {
        "id": "e4d49de5ef76b48c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let tiounePath = msg.payload\nglobal.set(\"device.vlc_path\", tiounePath);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "973c10af4dbfb52e",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "vlc_path",
        "tooltip": "",
        "group": "2275ce4aba6ae57e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4480,
        "y": 1880,
        "wires": [
            [
                "e4d49de5ef76b48c"
            ]
        ]
    },
    {
        "id": "ad88d2145d494f9b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "vlc_path",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.vlc_path;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 1880,
        "wires": [
            [
                "973c10af4dbfb52e"
            ]
        ]
    },
    {
        "id": "30437f33c9972f90",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let ffmpeg_path = msg.payload\nglobal.set(\"device.ffmpeg_path\", ffmpeg_path);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "c5f093958cc5103e",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "ffmpeg_path",
        "tooltip": "",
        "group": "28123a21c50f54af",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4490,
        "y": 1920,
        "wires": [
            [
                "30437f33c9972f90"
            ]
        ]
    },
    {
        "id": "21bcf98d22dabf77",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "ffmpeg_path",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.ffmpeg_path;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 1920,
        "wires": [
            [
                "c5f093958cc5103e"
            ]
        ]
    },
    {
        "id": "77d1845d8d7e97dd",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let ffplay_path = msg.payload\nglobal.set(\"device.ffplay_path\", ffplay_path);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "7c666d4b66bdb1c1",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "ffplay_path",
        "tooltip": "",
        "group": "28123a21c50f54af",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4490,
        "y": 1960,
        "wires": [
            [
                "77d1845d8d7e97dd"
            ]
        ]
    },
    {
        "id": "382c0ba4ac25e933",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "ffplay_path",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.ffplay_path;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 1960,
        "wires": [
            [
                "7c666d4b66bdb1c1"
            ]
        ]
    },
    {
        "id": "a65e0da8e66d8647",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let ffprobe_path = msg.payload\nglobal.set(\"device.ffprobe_path\", ffprobe_path);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "08bb407e7555f53c",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "ffprobe_path",
        "tooltip": "",
        "group": "28123a21c50f54af",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4490,
        "y": 2000,
        "wires": [
            [
                "a65e0da8e66d8647"
            ]
        ]
    },
    {
        "id": "05d216119b33b43c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "ffprobe_path",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.ffprobe_path;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4230,
        "y": 2000,
        "wires": [
            [
                "08bb407e7555f53c"
            ]
        ]
    },
    {
        "id": "4cea289b661afb2e",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let tiounePath = msg.payload\nglobal.set(\"device.sig_report_suffux\", tiounePath);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "f67aefa381b6dc8a",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "Signal report suffix",
        "tooltip": "",
        "group": "2275ce4aba6ae57e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4510,
        "y": 2080,
        "wires": [
            [
                "4cea289b661afb2e"
            ]
        ]
    },
    {
        "id": "55f7b77a67cc54df",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "dvbs_gui_path",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.sig_report_suffux;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 2080,
        "wires": [
            [
                "f67aefa381b6dc8a"
            ]
        ]
    },
    {
        "id": "587ba7dcecad6d47",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let ffplay_path_linux = msg.payload\nglobal.set(\"device.ffplay_path_linux\", ffplay_path_linux);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "8c3e78c6704e92a2",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "ffplay_path_linux",
        "tooltip": "",
        "group": "28123a21c50f54af",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4510,
        "y": 2200,
        "wires": [
            [
                "587ba7dcecad6d47"
            ]
        ]
    },
    {
        "id": "517a1391985bff60",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "ffplay_path_linux",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.ffplay_path_linux;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4250,
        "y": 2200,
        "wires": [
            [
                "8c3e78c6704e92a2"
            ]
        ]
    },
    {
        "id": "bdad9791244eab3b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let ffprobe_path_linux = msg.payload\nglobal.set(\"device.ffprobe_path_linux\", ffprobe_path_linux);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "21b402fbd4675dcf",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "ffprobe_path_linux",
        "tooltip": "",
        "group": "28123a21c50f54af",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4510,
        "y": 2240,
        "wires": [
            [
                "bdad9791244eab3b"
            ]
        ]
    },
    {
        "id": "87560b970ae3d1ca",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "ffprobe_path_linux",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.ffprobe_path_linux;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4250,
        "y": 2240,
        "wires": [
            [
                "21b402fbd4675dcf"
            ]
        ]
    },
    {
        "id": "46a46f85dadd76f6",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let ffmpeg_path_linux = msg.payload\nglobal.set(\"device.ffmpeg_path_linux\", ffmpeg_path_linux);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "2427bded041bffae",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "ffmpeg_path_linux",
        "tooltip": "",
        "group": "28123a21c50f54af",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4510,
        "y": 2280,
        "wires": [
            [
                "46a46f85dadd76f6"
            ]
        ]
    },
    {
        "id": "81633328a5ead7be",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "ffmpeg_path_linux",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.ffmpeg_path_linux;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4250,
        "y": 2280,
        "wires": [
            [
                "2427bded041bffae"
            ]
        ]
    },
    {
        "id": "3b2bfc1de615d1c2",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "set tuner ts ip address",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.rx.tsip;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4260,
        "y": 2320,
        "wires": [
            [
                "e48b23e1d46a182a"
            ]
        ]
    },
    {
        "id": "e48b23e1d46a182a",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "TS RX stream IP",
        "tooltip": "",
        "group": "6140f866127cd620",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4510,
        "y": 2320,
        "wires": [
            [
                "1b33b2ee0e91bf0a"
            ]
        ]
    },
    {
        "id": "1b33b2ee0e91bf0a",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let tsip = msg.payload\nglobal.set(\"device.rx.tsip\", tsip);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "f410cc2d0716c94e",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "set tuner config ip address",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.rx.configIP;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4280,
        "y": 2360,
        "wires": [
            [
                "42fadc716a7bbdd3"
            ]
        ]
    },
    {
        "id": "42fadc716a7bbdd3",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "rx config for device control",
        "tooltip": "",
        "group": "b774f32781d086fb",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4530,
        "y": 2360,
        "wires": [
            [
                "95edb2da87d8257d"
            ]
        ]
    },
    {
        "id": "95edb2da87d8257d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let configIP = msg.payload\nglobal.set(\"device.rx.configIP\", configIP);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "fa64203cbbfc748d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let tiounePath = msg.payload\nglobal.set(\"device.minitioune_path\", tiounePath);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "f59601c8ef54fb30",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "minitioune path",
        "tooltip": "",
        "group": "b774f32781d086fb",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4500,
        "y": 2120,
        "wires": [
            [
                "fa64203cbbfc748d"
            ]
        ]
    },
    {
        "id": "9077d20ca65ab2fd",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "minitiounePath",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.minitioune_path;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 2120,
        "wires": [
            [
                "f59601c8ef54fb30"
            ]
        ]
    },
    {
        "id": "264f78c58101c550",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let vlc_path_linux = msg.payload\nglobal.set(\"device.vlc_path_linux\", vlc_path_linux);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4730,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "bcea6a9dea321503",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "vlc_path_linux",
        "tooltip": "",
        "group": "2275ce4aba6ae57e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4500,
        "y": 2040,
        "wires": [
            [
                "264f78c58101c550"
            ]
        ]
    },
    {
        "id": "d8696aeccbf8391b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "vlc_path_linux",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.vlc_path_linux;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 2040,
        "wires": [
            [
                "bcea6a9dea321503"
            ]
        ]
    },
    {
        "id": "9fc2b2b1712c4ac3",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "set host url",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.hosting_url;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3890,
        "y": 2400,
        "wires": [
            [
                "cf620cc1430c2ec5"
            ]
        ]
    },
    {
        "id": "cf620cc1430c2ec5",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "",
        "label": "hosting url(please forward ports 9001 and 7681 to this server from your local network)",
        "tooltip": "",
        "group": "2275ce4aba6ae57e",
        "order": 2,
        "width": "0",
        "height": "0",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4280,
        "y": 2400,
        "wires": [
            [
                "e63faf17ba00a395"
            ]
        ]
    },
    {
        "id": "e63faf17ba00a395",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "a70e8b8a362b3c9d",
        "name": "save state",
        "func": "let hosting_url = msg.payload\nglobal.set(\"device.hosting_url\", hosting_url);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4710,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "e9c772547c5ee64e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "68ebf17055b62392",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 3710,
        "y": 2840,
        "wires": [
            [
                "0f8ccbb1c38e5852"
            ]
        ]
    },
    {
        "id": "72e2801309ab6835",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "68ebf17055b62392",
        "name": "read dashboard settings",
        "func": "let dashboard = JSON.parse(msg.payload);\nmsg.payload = dashboard.ffplay_left;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 2840,
        "wires": [
            [
                "fcd4072301b187df"
            ]
        ]
    },
    {
        "id": "fcd4072301b187df",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "68ebf17055b62392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ffplay_left",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4440,
        "y": 2840,
        "wires": [
            []
        ]
    },
    {
        "id": "0f8ccbb1c38e5852",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "68ebf17055b62392",
        "name": "",
        "filename": "settings/dashboard.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3910,
        "y": 2840,
        "wires": [
            [
                "72e2801309ab6835",
                "99e9d49edd3bd44a"
            ]
        ]
    },
    {
        "id": "99e9d49edd3bd44a",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "68ebf17055b62392",
        "name": "read dashboard settings",
        "func": "let dashboard = JSON.parse(msg.payload);\nmsg.payload = dashboard.ffplay_top;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 2880,
        "wires": [
            [
                "66edc2f79dcda9bc"
            ]
        ]
    },
    {
        "id": "66edc2f79dcda9bc",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "68ebf17055b62392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ffplay_top",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4440,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "7f3d237a25e7a435",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.audio_codec",
        "payloadType": "global",
        "x": 4640,
        "y": 1560,
        "wires": [
            [
                "68abb4393d028775"
            ]
        ]
    },
    {
        "id": "68abb4393d028775",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "AUDIO codec",
        "label": "AUDIO codec",
        "tooltip": "",
        "place": "Select option",
        "group": "88af1ac84b7217bd",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "AAC",
                "value": "aac",
                "type": "str"
            },
            {
                "label": "AAC+",
                "value": "libfdk_aac",
                "type": "str"
            },
            {
                "label": "AC3",
                "value": "ac3",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 4900,
        "y": 1560,
        "wires": [
            [
                "06b559ab4aca15cf"
            ]
        ]
    },
    {
        "id": "06b559ab4aca15cf",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "set AUDIO codec",
        "rules": [
            {
                "t": "set",
                "p": "settings.audio_codec",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5130,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "6f532c25947db01e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.input_choice",
        "payloadType": "global",
        "x": 4640,
        "y": 1615.5908203125,
        "wires": [
            [
                "2e0d409b4b551cdb"
            ]
        ]
    },
    {
        "id": "2e0d409b4b551cdb",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "INPUT choice",
        "label": "INPUT choice",
        "tooltip": "",
        "place": "Select option",
        "group": "88af1ac84b7217bd",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "DSHOW",
                "value": "dshow",
                "type": "str"
            },
            {
                "label": "UDP",
                "value": "udp",
                "type": "str"
            },
            {
                "label": "RTMP",
                "value": "rtmp",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 4900,
        "y": 1615.5908203125,
        "wires": [
            [
                "a7a765ba72c31ee8"
            ]
        ]
    },
    {
        "id": "a7a765ba72c31ee8",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "set INPUT choice",
        "rules": [
            {
                "t": "set",
                "p": "settings.input_choice",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5130,
        "y": 1615.5908203125,
        "wires": [
            []
        ]
    },
    {
        "id": "7a6a3cfb847eed62",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.udp_ip_port",
        "payloadType": "global",
        "x": 4640,
        "y": 1671.818359375,
        "wires": [
            [
                "d155c2f4a4a95ddf"
            ]
        ]
    },
    {
        "id": "d155c2f4a4a95ddf",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "UDP ip:port",
        "label": "UDP ip:port",
        "tooltip": "",
        "group": "bd5e2c07c46bb0ef",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4861.765625,
        "y": 1671.181640625,
        "wires": [
            [
                "4b0e4ceac0843b6c"
            ]
        ]
    },
    {
        "id": "4b0e4ceac0843b6c",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "set udp ip:port",
        "rules": [
            {
                "t": "set",
                "p": "settings.udp_ip_port",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5101.765625,
        "y": 1671.181640625,
        "wires": [
            []
        ]
    },
    {
        "id": "bb9f89e948bdda86",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.rtmp_ip_port",
        "payloadType": "global",
        "x": 4640,
        "y": 1727.4091796875,
        "wires": [
            [
                "17889543320f7239"
            ]
        ]
    },
    {
        "id": "17889543320f7239",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "RTMP ip:port",
        "label": "RTMP ip:port",
        "tooltip": "",
        "group": "bd5e2c07c46bb0ef",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4890,
        "y": 1727.4091796875,
        "wires": [
            [
                "793fd51eda4da3b4"
            ]
        ]
    },
    {
        "id": "793fd51eda4da3b4",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "set rtmp ip:port",
        "rules": [
            {
                "t": "set",
                "p": "settings.rtmp_ip_port",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5120,
        "y": 1727.4091796875,
        "wires": [
            []
        ]
    },
    {
        "id": "976add8cdc661885",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "settings.audio_sample_rate",
        "payloadType": "global",
        "x": 4660,
        "y": 1783,
        "wires": [
            [
                "afc105ffdbfd6b67"
            ]
        ]
    },
    {
        "id": "afc105ffdbfd6b67",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "AUDIO SR",
        "label": "Audio sample rate",
        "tooltip": "",
        "place": "Select option",
        "group": "8bd7855b29878c5b",
        "order": 8,
        "width": "6",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "8 kHz",
                "value": "8000",
                "type": "str"
            },
            {
                "label": "11.025 kHz",
                "value": "11025",
                "type": "str"
            },
            {
                "label": "16 kHz",
                "value": "16000",
                "type": "str"
            },
            {
                "label": "22.05 kHz",
                "value": "22050",
                "type": "str"
            },
            {
                "label": "44.1 kHz",
                "value": "44100",
                "type": "str"
            },
            {
                "label": "48 kHz",
                "value": "48000",
                "type": "str"
            },
            {
                "label": "88.2 kHz",
                "value": "88200",
                "type": "str"
            },
            {
                "label": "96 kHz",
                "value": "96000",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 4890,
        "y": 1783,
        "wires": [
            [
                "edaef66bea244028"
            ]
        ]
    },
    {
        "id": "edaef66bea244028",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "set AUDIO SR",
        "rules": [
            {
                "t": "set",
                "p": "settings.audio_sample_rate",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5120,
        "y": 1783,
        "wires": [
            []
        ]
    },
    {
        "id": "1476c7ae3ee7429f",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.audio_delay",
        "payloadType": "global",
        "x": 3778.67578125,
        "y": 1563,
        "wires": [
            [
                "bda9d0fa12b73a7b"
            ]
        ]
    },
    {
        "id": "bda9d0fa12b73a7b",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "Audio delay",
        "label": "Audio delay in seconds",
        "tooltip": "",
        "group": "bd5e2c07c46bb0ef",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4008.67578125,
        "y": 1563,
        "wires": [
            [
                "9707e10f88d44a13"
            ]
        ]
    },
    {
        "id": "9707e10f88d44a13",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "set audio delay",
        "rules": [
            {
                "t": "set",
                "p": "settings.audio_delay",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4238.67578125,
        "y": 1563,
        "wires": [
            []
        ]
    },
    {
        "id": "e4f4bb8ab484614c",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.thread_queue",
        "payloadType": "global",
        "x": 3788.67578125,
        "y": 1603,
        "wires": [
            [
                "268823098bee16e3"
            ]
        ]
    },
    {
        "id": "268823098bee16e3",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "Thread queue",
        "label": "Thread queue",
        "tooltip": "",
        "group": "bd5e2c07c46bb0ef",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4018.67578125,
        "y": 1603,
        "wires": [
            [
                "7de98b3ad530b9ed"
            ]
        ]
    },
    {
        "id": "7de98b3ad530b9ed",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "set thread queue",
        "rules": [
            {
                "t": "set",
                "p": "settings.thread_queue",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4248.67578125,
        "y": 1603,
        "wires": [
            []
        ]
    },
    {
        "id": "adec478022684111",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.rt_buffer",
        "payloadType": "global",
        "x": 3768.67578125,
        "y": 1723,
        "wires": [
            [
                "3867abc64be57709"
            ]
        ]
    },
    {
        "id": "3867abc64be57709",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "RT buffer",
        "label": "RT buffer",
        "tooltip": "",
        "group": "bd5e2c07c46bb0ef",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4018.67578125,
        "y": 1723,
        "wires": [
            [
                "5742c2b6848b86ca"
            ]
        ]
    },
    {
        "id": "5742c2b6848b86ca",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "set rt buffer",
        "rules": [
            {
                "t": "set",
                "p": "settings.rt_buffer",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4248.67578125,
        "y": 1723,
        "wires": [
            []
        ]
    },
    {
        "id": "b0cd2e5a31c4cd6b",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.fifo_size",
        "payloadType": "global",
        "x": 3768.67578125,
        "y": 1763,
        "wires": [
            [
                "4d3826e743c485db"
            ]
        ]
    },
    {
        "id": "4d3826e743c485db",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "FIFO size",
        "label": "FIFO size",
        "tooltip": "",
        "group": "bd5e2c07c46bb0ef",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4018.67578125,
        "y": 1763,
        "wires": [
            [
                "c79482819129c76e"
            ]
        ]
    },
    {
        "id": "c79482819129c76e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "16b2433f74b66b9a",
        "name": "set FIFO size",
        "rules": [
            {
                "t": "set",
                "p": "settings.fifo_size",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4248.67578125,
        "y": 1763,
        "wires": [
            []
        ]
    },
    {
        "id": "7a8137e70ed5fb2b",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Callsign",
        "x": 600,
        "y": 200,
        "wires": [
            [
                "e5e82c410614ac58"
            ]
        ]
    },
    {
        "id": "33c3427b6f2eba85",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "set call sign",
        "func": "msg.topic = `cmd/pluto/call`;\nglobal.set(\"setup_busy\", false);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 140,
        "wires": [
            [
                "f9918b65a647c1e1"
            ]
        ]
    },
    {
        "id": "02f7103302a82356",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "first run",
        "property": "first_run",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "f86b01b311946b8c"
            ],
            [
                "8d24e6025fe47ef5"
            ]
        ]
    },
    {
        "id": "f8e15444b3a32973",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Pluto IP",
        "x": 600,
        "y": 140,
        "wires": [
            [
                "701b4659bc7d55d4"
            ]
        ]
    },
    {
        "id": "f86b01b311946b8c",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please enter pluto IP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "setup_busy",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "f8e15444b3a32973"
            ]
        ]
    },
    {
        "id": "f9918b65a647c1e1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "setup pluto.json",
        "func": "let broker = {\n    \"action\": \"connect\",\n    \"broker\": {\n        \"broker\": msg.broker,\n        \"port\": 1883,\n        \"username\": \"root\",\n        \"password\": \"analog\"\n    },\n    \"topic\": msg.topic,\n    \"payload\": msg.payload\n}\nglobal.set(\"first_run\", false);\nmsg.payload = broker;\nmsg.filename = \"settings/pluto.json\";\nmsg.action = broker.action;\nmsg.broker = broker.broker;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 140,
        "wires": [
            [
                "cbb3d29b1d836219",
                "223c50087c6a3388"
            ]
        ]
    },
    {
        "id": "cbb3d29b1d836219",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1320,
        "y": 140,
        "wires": [
            [
                "5802767bfd215d2b",
                "cdc147736509f758"
            ]
        ]
    },
    {
        "id": "4dce4a7940b4c36d",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "",
        "filename": "settings/setup.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 630,
        "y": 80,
        "wires": [
            [
                "916ef06cc52d52e2"
            ]
        ]
    },
    {
        "id": "916ef06cc52d52e2",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "json",
        "func": "let file = JSON.parse(msg.payload);\nglobal.set(\"first_run\", file.first_run)\nmsg.payload = file.first_run;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 80,
        "wires": [
            [
                "02f7103302a82356"
            ]
        ]
    },
    {
        "id": "4fb1058936a12cd1",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "broker",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please enter callsign",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 200,
        "wires": [
            [
                "7a8137e70ed5fb2b"
            ]
        ]
    },
    {
        "id": "5802767bfd215d2b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "setup.json path",
        "func": "let setup = {\n    first_run: false\n}\nmsg.payload = JSON.stringify(setup);\nmsg.filename = \"settings/setup.json\";\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 80,
        "wires": [
            [
                "d1ad7660a13218b1"
            ]
        ]
    },
    {
        "id": "d1ad7660a13218b1",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1320,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "223c50087c6a3388",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "Set call message",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "42b2f3084f79ec8f"
            ]
        ]
    },
    {
        "id": "42b2f3084f79ec8f",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "broker",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "action",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "callsign",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 260,
        "wires": [
            [
                "25874e1909171caa",
                "07279ec1e0bf1661"
            ]
        ]
    },
    {
        "id": "07279ec1e0bf1661",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "Replay topic",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 400,
        "wires": []
    },
    {
        "id": "f4ad9554731575c3",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "7fd6bfdcbfc713bb"
            ]
        ]
    },
    {
        "id": "701b4659bc7d55d4",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "Cancelled?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Cancel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 140,
        "wires": [
            [
                "f86b01b311946b8c"
            ],
            [
                "4fb1058936a12cd1"
            ]
        ]
    },
    {
        "id": "e5e82c410614ac58",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "Cancelled?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Cancel",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 200,
        "wires": [
            [
                "f86b01b311946b8c"
            ],
            [
                "33c3427b6f2eba85"
            ]
        ]
    },
    {
        "id": "7fd6bfdcbfc713bb",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "mqtt setup?",
        "property": "mqtt_done",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "6f5ef4ad92a31857"
            ]
        ]
    },
    {
        "id": "6f5ef4ad92a31857",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "1d8e778f40edcc21",
        "name": "setup busy?",
        "property": "setup_busy",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "4dce4a7940b4c36d"
            ]
        ]
    },
    {
        "id": "24ba1c8ca7aea429",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 3860,
        "wires": [
            [
                "8bb744f5177e71ff"
            ]
        ]
    },
    {
        "id": "9f35c0e151e986ea",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "fw version",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"callsign\")+ \"/system/version\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 3860,
        "wires": [
            [
                "24ba1c8ca7aea429"
            ]
        ]
    },
    {
        "id": "8bb744f5177e71ff",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fw_version",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 3860,
        "wires": [
            []
        ]
    },
    {
        "id": "2eb9a7d4d6079e45",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Longmynd TS IP",
        "tooltip": "",
        "group": "a4a37989805c1f8e",
        "order": 6,
        "width": "5",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2130,
        "y": 3100,
        "wires": [
            [
                "947313bf5f0e22d1"
            ]
        ]
    },
    {
        "id": "947313bf5f0e22d1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: longmynd tsip",
        "func": "let topic = `cmd/longmynd/tsip`;\nmsg.topic = topic;\nglobal.set(\"device.rx.tsip_host\", msg.payload);\nglobal.set(\"deviceChange\", true);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 2940,
        "wires": [
            [
                "1b8ee9dbe0155dcd"
            ]
        ]
    },
    {
        "id": "3845b79a049ba0b1",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "tsip_host",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rx.tsip_host",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 2680,
        "wires": [
            [
                "2eb9a7d4d6079e45",
                "777171c7ce6ecdb1",
                "947313bf5f0e22d1"
            ]
        ]
    },
    {
        "id": "777171c7ce6ecdb1",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "name": "ts",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2070,
        "y": 3240,
        "wires": []
    },
    {
        "id": "498aacb4ed3dc458",
        "type": "delay",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2360,
        "y": 280,
        "wires": [
            [
                "b2786302ea5b87d8"
            ]
        ]
    },
    {
        "id": "a1c31abd4376d5f1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "ffmpeg command builder",
        "func": "let ffmpegPID = global.get(\"pid\");\nlet fec =\n    global.get(\"device.tx.dvbs2.fecmode\") === \"variable\"\n        ? global.get(\"device.tx.dvbs2.fec\")\n        : global.get(\"settings.FEC\");\n\nlet vbr = global.get(\"device.tx.dvbs2.fecmode\") === \"variable\" ? \"1\" : \"0\";\n\nif (ffmpegPID === \"\" || ffmpegPID === undefined) {\n    let videoBitrate = global.get(\"settings.VBITRATE\");\n    let tsRate = global.get(\"settings.TSBITRATE\");\n    let codec = global.get(\"settings.CODEC\");\n    let input = global.get(\"settings.input_choice\");\n    let hWEncoderSettings = `-r ${global.get(\n        \"settings.FPS\"\n    )} -preset slow -rc-lookahead 10 -no-scenecut 1 -zerolatency 1 -b_ref_mode 0 -bf 0`;\n    let shapingString = `-minrate ${global.get(\n        \"settings.VBITRATE\"\n    )}k -maxrate ${global.get(\"settings.VBITRATE\")}k`;\n\n    switch (codec) {\n        case \"libx264\":\n            //codec = `libx264 -r ${global.get(\"settings.FPS\")} ${shapingString}`;\n            codec = `libx264 -r ${global.get(\n                \"settings.FPS\"\n            )} ${shapingString} -x264-params rc-lookahead=10:no-scenecut=1`;\n            break;\n        case \"libx265\":\n            // codec = `libx265 -x265-params b-adapt=1 `;\n            codec = `libx265 -r ${global.get(\"settings.FPS\")} ${shapingString}`;\n            break;\n        case \"libvvenc\":\n            let vvcBitRate = videoBitrate * 800; // to Mega-ish\n            //codec = `libvvenc -preset faster -r ${global.get(\"settings.FPS\")} -vvenc-params bitrate=${vvcBitRate}`;\n            codec = `libvvenc -preset faster -r ${global.get(\n                \"settings.FPS\"\n            )} -vvenc-params bitrate=${vvcBitRate}:framerate=${global.get(\n                \"settings.FPS\"\n            )}:size=${global.get(\"settings.IMAGESIZE\")}`;\n            break;\n        case \"libaom-av1\":\n            codec = `libaom-av1 -crf 30 -usage realtime ${shapingString}`;\n            break;\n        case \"h264_nvenc\":\n            codec = `h264_nvenc ${hWEncoderSettings} ${shapingString}`;\n            break;\n        case \"hevc_nvenc\":\n            codec = `hevc_nvenc ${hWEncoderSettings} ${shapingString}`;\n            break;\n    }\n\n    let offset = global.get(\"settings.audio_delay\");\n    /* These need to be stored in json and get GUI inputs */\n    let thread_queue = global.get(\"settings.thread_queue\");\n    let rt_buffer = global.get(\"settings.rt_buffer\");\n    let symbol_rate = global.get(\"settings.SR\");\n    let buffer_factor = symbol_rate < 66 ? 3 : 1;\n    let buffer_size = videoBitrate * buffer_factor;\n    let video_pid = 256;\n    let mpegts_start_pid = 256;\n    let audio_pid = 257;\n    //let keyframe_interval = global.get(\"settings.keyframe_interval\");\n    let keyframe_interval = global.get(\"settings.FPS\") * 5;\n    let max_delay = symbol_rate < 36 ? 2000 : 1000;\n    let max_interleave_delta = symbol_rate < 36 ? 0 : 4;\n    let pcr_period = 20;\n    let pat_period = 0.4;\n    let mpegts_service_id = 4095;\n    let mpegts_transport_stream_id = 4095;\n    let mpegts_pmt_start_pid = 4095;\n    let mpegts_original_network_id = 1;\n    let service_provider = \"DATV-RED\";\n    let fifo_size = global.get(\"settings.fifo_size\");\n    /*\n          This is the big ffmpeg variable string\n          do note the space ' ' at the end of each line...\n      */\n    switch (input) {\n        case \"dshow\":\n            input = `-f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M -i \\\"video=${global.get(\n                \"settings.video_device\"\n            )}\\\" -f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M -i \\\"audio=${global.get(\n                \"settings.audio_device\"\n            )}\\\" `;\n            break;\n        case \"udp\":\n            input = `-i udp://${global.get(\n                \"settings.udp_ip_port\"\n            )} -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M `;\n            break;\n        case \"rtmp\":\n            input = `-f flv -listen 1 -i rtmp://${global.get(\n                \"settings.rtmp_ip_port\"\n            )}/live/aaaa -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M `;\n            break;\n    }\n\n    let path = global.get(\"device.ffmpeg_path\");\n    if (global.get(\"platform\") === \"linux\")\n        path = global.get(\"device.ffmpeg_path_linux\");\n    let str =\n        `${path} ` +\n        `-itsoffset ${offset} ` +\n        //`-f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M ` +\n        //`-i \\\"video=${global.get(\"settings.video_device\")}\\\" ` +\n        //`-f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M ` +\n        //`-i \\\"audio=${global.get(\"settings.audio_device\")}\\\" ` +\n        `${input}` +\n        `-ar ${global.get(\"settings.audio_sample_rate\")} ` +\n        `-vcodec ${codec} ` +\n        `-s ${global.get(\"settings.IMAGESIZE\")} ` +\n        `-b:v ${global.get(\"settings.VBITRATE\")}K ` +\n        `-bufsize ${buffer_size}K -g ${keyframe_interval} ` +\n        //`-acodec libfdk_aac ` +\n        `-acodec ${global.get(\"settings.audio_codec\")} ` +\n        `-ac ${global.get(\"settings.AUDIO\")} ` +\n        `-b:a ${global.get(\"settings.ABITRATE\")}k ` +\n        `-f mpegts ` +\n        `${global.get(\"settings.null_packets\") ? `-muxrate ${tsRate}K` : ``} ` +\n        // `-muxpreload 0 -muxdelay 0 ` +\n        `-streamid 0:${video_pid} ` +\n        `-streamid 1:${audio_pid} ` +\n        `-max_delay ${max_delay}K ` +\n        `-max_interleave_delta ${max_interleave_delta}M ` +\n        `-pcr_period ${pcr_period} ` +\n        `-pat_period ${pat_period} ` +\n        // `-mpegts_service_id ${mpegts_service_id} ` +\n        // `-metadata:s:v:0 TITLE=\\\"${service_provider}\\\" ` +\n        `-mpegts_original_network_id ${mpegts_original_network_id} ` +\n        `-mpegts_transport_stream_id ${mpegts_transport_stream_id} ` +\n        `-mpegts_pmt_start_pid ${mpegts_pmt_start_pid} ` +\n        `-mpegts_start_pid ${mpegts_start_pid} ` +\n        `-metadata service_name=${global.get(\"callsign\")} ` +\n        `-metadata service_provider=${service_provider} ` +\n        `-af aresample=async=1 ` +\n        `\\\"udp://${global.get(\n            \"device.tx.dvbs2.tssourceaddress\"\n        )}?pkt_size=1316&overrun_nonfatal=1&fifo_size=${fifo_size}M\\\"`;\n    // Loopback for local testing without txing...\n    // `\\\"udp://230.0.0.10:9999?pkt_size=1316&overrun_nonfatal=1&fifo_size=${fifo_size}M\\\"`;\n\n    msg.payload = str;\n    global.set(\"ffmpeg_cmd\", msg.payload);\n    return msg;\n}\n\n// let ffmpegPID = global.get(\"pid\");\n// let fec = global.get(\"device.tx.dvbs2.fecmode\") === \"variable\" ? global.get(\"device.tx.dvbs2.fec\") : global.get(\"settings.FEC\");\n// let vbr = global.get(\"device.tx.dvbs2.fecmode\") === \"variable\" ? \"1\" : \"0\";\n// if (ffmpegPID === \"\" || ffmpegPID === undefined) {\n//     /* \n//         In here be dragons...\n//      */\n//     let videoBitrate = global.get(\"settings.VBITRATE\");\n//     let tsRate = global.get(\"settings.TSBITRATE\");\n//     let codec = global.get(\"settings.CODEC\")\n//     let input = global.get(\"settings.input_choice\")\n//     let hWEncoderSettings = `-r ${global.get(\"settings.FPS\")} -rc-lookahead 10 -no-scenecut 1 -zerolatency 1 -b_ref_mode 0 -bf 0`;\n//     let shapingString = `-minrate ${global.get(\"settings.VBITRATE\")}k -maxrate ${global.get(\"settings.VBITRATE\")}k`;\n//     switch (codec) {\n//         case 'libx264':\n//             codec = `libx264 -r ${global.get(\"settings.FPS\")} ${shapingString}`;\n//             break;\n//         case 'libx265':\n//             // codec = `libx265 -x265-params b-adapt=1 `;\n//             codec = `libx265 -r ${global.get(\"settings.FPS\")} ${shapingString}`;\n//             break;\n//         case 'libvvenc':\n//             let vvcBitRate = (videoBitrate * 800); // to Mega-ish\n//             codec = `libvvenc -preset faster -r ${global.get(\"settings.FPS\")} -vvenc-params bitrate=${vvcBitRate}:framerate=${global.get(\"settings.FPS\")}:size=${global.get(\"settings.IMAGESIZE\")}`;\n//             //codec = `libvvenc -preset faster -r ${global.get(\"settings.FPS\")} -vvenc-params bitrate=${vvcBitRate}`;\n//             break;\n//         case 'libaom-av1':\n//             codec = `libaom-av1 -crf 30 -usage realtime ${shapingString}`;\n//             break;\n//         case 'h264_nvenc':\n//             codec = `h264_nvenc ${hWEncoderSettings} ${shapingString}`;\n//             break;\n//         case 'hevc_nvenc':\n//             codec = `hevc_nvenc ${hWEncoderSettings} ${shapingString}`;\n//             break;\n//     }\n//     let offset = global.get(\"settings.audio_delay\");\n//     /* These need to be stored in json and get GUI inputs */\n//     let thread_queue = global.get(\"settings.thread_queue\");\n//     let rt_buffer = global.get(\"settings.rt_buffer\");\n//     let symbol_rate = global.get(\"settings.SR\");\n//     let buffer_factor = symbol_rate < 66 ? 3 : 1;\n//     let buffer_size = videoBitrate * buffer_factor;\n//     let video_pid = 256;\n//     let mpegts_start_pid = 256;\n//     let audio_pid = 257;\n//     let keyframe_interval = global.get(\"settings.keyframe_interval\");\n//     let max_delay = symbol_rate < 36 ? 2000 : 1000;\n//     let max_interleave_delta = symbol_rate < 36 ? 0 : 4;\n//     let pcr_period = 20;\n//     let pat_period = 0.4;\n//     let mpegts_service_id = 4095;\n//     let mpegts_transport_stream_id = 4095;\n//     let mpegts_pmt_start_pid = 4095;\n//     let mpegts_original_network_id = 1;\n//     let service_provider = \"DATV-RED\";\n//     let fifo_size = global.get(\"settings.fifo_size\");\n//     /* \n//         This is the big ffmpeg variable string\n//         do note the space ' ' at the end of each line...\n//     */\n//     // if (global.get(\"platform\") === \"linux\")  we need to be able to use video loop back and audio\n//     switch (input) {\n//         case 'dshow':\n//             input = `-f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M -i \\\"video=${global.get(\"settings.video_device\")}\\\" -f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M -i \\\"audio=${global.get(\"settings.audio_device\")}\\\" `;\n//             break;\n//         case 'udp':\n//             input = `-i udp://${global.get(\"settings.udp_ip_port\")} -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M `;\n//             break;\n//         case 'rtmp':\n//             input = `-f flv -listen 1 -i rtmp://${global.get(\"settings.rtmp_ip_port\")}/live/aaaa -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M `;\n//             break;\n//     }\n//     let path = global.get(\"device.ffmpeg_path\");\n//     if (global.get(\"platform\") === \"linux\") path = global.get(\"device.ffmpeg_path_linux\");\n//     let str =\n//         `${path} ` +\n//         `-itsoffset ${offset} ` +\n//         //`-f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M ` +\n//         //`-i \\\"video=${global.get(\"settings.video_device\")}\\\" ` +\n//         //`-f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M ` +\n//         //`-i \\\"audio=${global.get(\"settings.audio_device\")}\\\" ` +\n//         `${input}` +\n//         `-ar ${global.get(\"settings.audio_sample_rate\")} ` +\n//         `-vcodec ${codec} ` +\n//         `-s ${global.get(\"settings.IMAGESIZE\")} ` +\n//         `-b:v ${global.get(\"settings.VBITRATE\")}K ` +\n//         `-bufsize ${buffer_size}K -g ${keyframe_interval} ` +\n//         //`-acodec libfdk_aac ` +\n//         `-acodec ${global.get(\"settings.audio_codec\")} ` +\n//         `-ac ${global.get(\"settings.AUDIO\")} ` +\n//         `-b:a ${global.get(\"settings.ABITRATE\")}k ` +\n//         `-f mpegts ` +\n//         `-muxrate ${tsRate}K ` +\n//         `-streamid 0:${video_pid} ` +\n//         `-streamid 1:${audio_pid} ` +\n//         `-max_delay ${max_delay}K ` +\n//         `-max_interleave_delta ${max_interleave_delta}M ` +\n//         `-pcr_period ${pcr_period} ` +\n//         `-pat_period ${pat_period} ` +\n//         // `-mpegts_service_id ${mpegts_service_id} ` +\n//         // `-metadata:s:v:0 TITLE=\\\"${service_provider}\\\" ` +\n//         `-mpegts_original_network_id ${mpegts_original_network_id} ` +\n//         `-mpegts_transport_stream_id ${mpegts_transport_stream_id} ` +\n//         `-mpegts_pmt_start_pid ${mpegts_pmt_start_pid} ` +\n//         `-mpegts_start_pid ${mpegts_start_pid} ` +\n//         `-metadata service_name=${global.get(\"callsign\")} ` +\n//         `-metadata service_provider=${service_provider} ` +\n//         `-af aresample=async=1 ` +\n//         `\\\"udp://${global.get(\"device.tx.dvbs2.tssourceaddress\")}?pkt_size=1316&overrun_nonfatal=1&fifo_size=${fifo_size}M\\\"`;\n//     // Loopback for local testing without txing...\n//     // `\\\"udp://230.0.0.10:9999?pkt_size=1316&overrun_nonfatal=1&fifo_size=${fifo_size}M\\\"`;\n\n\n//     msg.payload = str;\n//     global.set(\"ffmpeg_cmd\", msg.payload);\n//     return msg;\n// }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1260,
        "wires": [
            [
                "870adb347b148820"
            ]
        ]
    },
    {
        "id": "11030f0dbe456eb3",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "name": "Null packets",
        "rules": [
            {
                "t": "set",
                "p": "settings.null_packets",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "06eac23599ba4d63",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "name": "Use null packets \"-muxrate\"",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.null_packets",
        "payloadType": "global",
        "x": 1440,
        "y": 580,
        "wires": [
            [
                "99d8f740effd901b"
            ]
        ]
    },
    {
        "id": "99d8f740effd901b",
        "type": "ui_switch",
        "z": "2ec6a7ddfe0cd173",
        "name": "",
        "label": "Use null packets \"-muxrate\"",
        "tooltip": "",
        "group": "bd5e2c07c46bb0ef",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1720,
        "y": 580,
        "wires": [
            [
                "11030f0dbe456eb3"
            ]
        ]
    },
    {
        "id": "03f8ae8f0673a768",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "restore object",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 2360,
        "wires": []
    },
    {
        "id": "41882693fba06080",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2200,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "1e0841f1.ac68fe",
        "type": "http in",
        "z": "9d964f25dcc4d750",
        "g": "2406e32417780de0",
        "name": "",
        "url": "/spektrum",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "c6e41b39dc0902c3"
            ]
        ]
    },
    {
        "id": "d2c0bc2a.05a02",
        "type": "http response",
        "z": "9d964f25dcc4d750",
        "g": "2406e32417780de0",
        "name": "",
        "x": 1090,
        "y": 80,
        "wires": []
    },
    {
        "id": "f3b55ea2.f4d51",
        "type": "template",
        "z": "9d964f25dcc4d750",
        "g": "2406e32417780de0",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n<meta charset=\"utf-8\">\n<meta name=\"author\" content=\"Jeppe Ledet-Pedersen\">\n<meta name=\"author\" content=\"Ohan Smit\">\n<title>Spectrum Plot</title>\n<link rel=\"stylesheet\" href=\"/pluto_spectrum/style.css\">\n\n<script>\n    var pluto_url = \"{{pluto}}\";\n    var callsign = \"{{callsign}}\";\n    var hosting_url = \"{{hosting_url}}\";\n    var localPage = false;\n    </script>\n    <script src=\"/mqtt_min.js\"></script>\n    <script src=\"/pluto_spectrum/colormap.js\"></script>\n    <script src=\"/pluto_spectrum/spectrum.js\"></script>\n    <script src=\"/pluto_spectrum/mqtt.js\"></script>\n    <script src=\"/pluto_spectrum/script.js\"></script>\n\n<canvas id=\"waterfall\"></canvas>\n<div class=\"status\">\n    <div id=\"log\"></div>\n</div>        \n\n",
        "output": "str",
        "x": 830,
        "y": 80,
        "wires": [
            [
                "d2c0bc2a.05a02"
            ]
        ]
    },
    {
        "id": "470e4d8abf29a205",
        "type": "mqtt out",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "064bde8eca01e996",
        "x": 1410,
        "y": 620,
        "wires": []
    },
    {
        "id": "b47b8870b7c9bd24",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "webfft ON",
        "func": "let payload = \"webfft\";\nlet topic = `${global.get(\"cmdPath\")}/rx/stream/mode`;\nmsg.topic = topic\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 500,
        "wires": [
            [
                "77dc98e0de74c888"
            ]
        ]
    },
    {
        "id": "bb77722b6c2658e8",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "config once",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "webfft",
        "payloadType": "str",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "b47b8870b7c9bd24"
            ]
        ]
    },
    {
        "id": "77dc98e0de74c888",
        "type": "mqtt out",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "064bde8eca01e996",
        "x": 530,
        "y": 500,
        "wires": []
    },
    {
        "id": "aa44e5106814ab9f",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "Gain :",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/rx/gain`;\nmsg.topic = topic\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 600,
        "wires": [
            [
                "470e4d8abf29a205"
            ]
        ]
    },
    {
        "id": "30794624a6a04c15",
        "type": "ui_slider",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "label": "Rx {{value | number:2}}  MHz",
        "tooltip": "",
        "group": "bd40e71dca80ef04",
        "order": 9,
        "width": "10",
        "height": "1",
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "60",
        "max": "6000",
        "step": "0.25",
        "className": "",
        "x": 810,
        "y": 540,
        "wires": [
            [
                "7d69601736a74273"
            ]
        ]
    },
    {
        "id": "0a9fe9e2623385cb",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "symbol rate",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/rx/webfft/span`;\nmsg.topic = topic\nmsg.payload = payload\n// global.set(\"sr_bug\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 700,
        "wires": [
            [
                "8be1ad29d1e86276"
            ]
        ]
    },
    {
        "id": "3ba43ff973399e13",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 540,
        "wires": [
            [
                "b82cad0a3cddc877",
                "bff2bb43c29c79e5",
                "e688634a9f60c746",
                "a6254b8eb8807472"
            ]
        ]
    },
    {
        "id": "b82cad0a3cddc877",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "rx gain",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\") + \"/rx/gain\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 600,
        "wires": [
            [
                "f72c1ae9d1dc7d89"
            ]
        ]
    },
    {
        "id": "f72c1ae9d1dc7d89",
        "type": "mqtt in",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 490,
        "y": 600,
        "wires": [
            [
                "6adfe6d609aeb90a"
            ]
        ]
    },
    {
        "id": "7d69601736a74273",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "Frequency",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/rx/webfft/frequency`;\nmsg.topic = topic;\nmsg.payload = (payload * 1000000);\nmsg.rx_freq = (payload * 1000);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 540,
        "wires": [
            [
                "5493fb3252e35009",
                "470e4d8abf29a205"
            ]
        ]
    },
    {
        "id": "12159992489b0591",
        "type": "mqtt in",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 490,
        "y": 540,
        "wires": [
            [
                "4497dbfe8502fab3"
            ]
        ]
    },
    {
        "id": "bff2bb43c29c79e5",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "rx frequency ",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\") + \"/rx/webfft/frequency\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 540,
        "wires": [
            [
                "12159992489b0591"
            ]
        ]
    },
    {
        "id": "2131639cdf6f62a5",
        "type": "ui_iframe",
        "z": "9d964f25dcc4d750",
        "g": "2406e32417780de0",
        "group": "bd40e71dca80ef04",
        "name": "Local spectrum",
        "order": 2,
        "width": "22",
        "height": "5",
        "url": "/spektrum",
        "origin": "*",
        "scale": 100,
        "x": 1060,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e688634a9f60c746",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "rx span",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"callsign\") + \"/rx/webfft/span\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 660,
        "wires": [
            [
                "818602f620560caa"
            ]
        ]
    },
    {
        "id": "818602f620560caa",
        "type": "mqtt in",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 490,
        "y": 660,
        "wires": [
            [
                "ed827f68456e01f6"
            ]
        ]
    },
    {
        "id": "6adfe6d609aeb90a",
        "type": "ui_slider",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "Rx gain slider",
        "label": "Gain {{value | number:2}} dB",
        "tooltip": "",
        "group": "bd40e71dca80ef04",
        "order": 5,
        "width": "5",
        "height": "1",
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "65",
        "step": "1",
        "className": "",
        "x": 660,
        "y": 600,
        "wires": [
            [
                "05155ef717c0fb68"
            ]
        ]
    },
    {
        "id": "5493fb3252e35009",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device.rx.frequency",
                "pt": "global",
                "to": "rx_freq",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "4497dbfe8502fab3",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "function 10",
        "func": "let payload = msg.payload;\nmsg.payload = (payload / 1000000);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 540,
        "wires": [
            [
                "30794624a6a04c15"
            ]
        ]
    },
    {
        "id": "98c8f2e2679a3123",
        "type": "comment",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "info": "We need to add spectrum controls",
        "x": 1290,
        "y": 480,
        "wires": []
    },
    {
        "id": "a6254b8eb8807472",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "set minimum span for tx",
        "func": "let payload = 0;\nswitch (Number(global.get(\"device.tx.dvbs2.sr\"))) {\n    case 35000:\n        payload = 560_000;\n        break;\n    case 66000:\n        payload = 1056_000;\n        break;\n    case 125000:\n        payload = 2_000_000;\n        break;\n    case 250000:\n        payload = 4_000_000;\n        break;\n    case 333000:\n        payload = 5_328_000;\n        break;\n    case 500000:\n        payload = 8_000_000;\n        break;\n    case 1000000:\n        payload = 16_000_000;\n        break;\n    case 1500000:\n        payload = 24_000_000;\n        break;\n    case 2000000:\n        payload = 8_000_000;\n        break;\n    case 3000000:\n        payload = 6_000_000;\n        break;\n    case 4000000:\n        payload = 8_000_000;\n        break;\n}\n\n\nlet topic = `${global.get(\"cmdPath\")}/rx/webfft/minSpan`;\nmsg.topic = topic\nglobal.set(\"span_min\", payload);\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 660,
        "wires": [
            [
                "470e4d8abf29a205"
            ]
        ]
    },
    {
        "id": "53d85ccc1ca38e73",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "set state",
        "func": "let topic = `${global.get(\"cmdPath\")}/rx/webfft/min_db`;\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1000,
        "wires": [
            [
                "6860085513c10a64"
            ]
        ]
    },
    {
        "id": "6860085513c10a64",
        "type": "mqtt out",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "064bde8eca01e996",
        "x": 1290,
        "y": 1240,
        "wires": []
    },
    {
        "id": "5e009d852e836e3b",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "set state",
        "func": "let topic = `${global.get(\"cmdPath\")}/rx/webfft/max_db`;\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1060,
        "wires": [
            [
                "6860085513c10a64"
            ]
        ]
    },
    {
        "id": "c4b45eae95987a16",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 150,
        "y": 760,
        "wires": [
            [
                "db57ce0d38f95c32",
                "9cfb443df5cb5da9"
            ]
        ]
    },
    {
        "id": "c0a747bc908afade",
        "type": "mqtt in",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 470,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "db57ce0d38f95c32",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "max",
        "func": "msg.action = \"subscribe\"\nlet topic = `${global.get(\"cmdPath\")}/rx/webfft/max_db`;\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 820,
        "wires": [
            [
                "c0a747bc908afade"
            ]
        ]
    },
    {
        "id": "9cfb443df5cb5da9",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "min",
        "func": "msg.action = \"subscribe\"\nlet topic = `${global.get(\"cmdPath\")}/rx/webfft/min_db`;\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 760,
        "wires": [
            [
                "de2e4421edba4493"
            ]
        ]
    },
    {
        "id": "de2e4421edba4493",
        "type": "mqtt in",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 470,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "1abba09f50e1a73c",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "set state min",
        "func": "let topic = `${global.get(\"cmdPath\")}/rx/webfft/min_db`;\nmsg.topic = topic;\nmsg.payload = global.get(\"settings.spectrum.min_db\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1220,
        "wires": [
            [
                "6860085513c10a64",
                "c27c4949eee35a7e"
            ]
        ]
    },
    {
        "id": "97ea4ec5dc95813b",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "set state max",
        "func": "let topic = `${global.get(\"cmdPath\")}/rx/webfft/max_db`;\nmsg.topic = topic;\nmsg.payload = global.get(\"settings.spectrum.max_db\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1260,
        "wires": [
            [
                "6860085513c10a64",
                "c27c4949eee35a7e"
            ]
        ]
    },
    {
        "id": "f51752e8606fb64c",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "1abba09f50e1a73c",
                "97ea4ec5dc95813b",
                "8b5dc62e18f85b99",
                "8123e129750f95b0"
            ]
        ]
    },
    {
        "id": "0e96496b235b3fe0",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.spectrum.min_db",
        "payloadType": "global",
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "9af1f8975e61cc08"
            ]
        ]
    },
    {
        "id": "c98f9bfdc4eab524",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.spectrum.min_db",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1000,
        "wires": [
            [
                "53d85ccc1ca38e73"
            ]
        ]
    },
    {
        "id": "9f6a4873cc3768b5",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.spectrum.max_db",
        "payloadType": "global",
        "x": 260,
        "y": 1060,
        "wires": [
            [
                "f5eef0dfd7e39ee3"
            ]
        ]
    },
    {
        "id": "4536019d942cbd41",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.spectrum.max_db",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1060,
        "wires": [
            [
                "5e009d852e836e3b"
            ]
        ]
    },
    {
        "id": "9af1f8975e61cc08",
        "type": "ui_slider",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "min",
        "label": "Min {{value | number:2}}",
        "tooltip": "",
        "group": "bd40e71dca80ef04",
        "order": 3,
        "width": "5",
        "height": "1",
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "1000",
        "step": "2",
        "className": "",
        "x": 570,
        "y": 1000,
        "wires": [
            [
                "c98f9bfdc4eab524"
            ]
        ]
    },
    {
        "id": "f5eef0dfd7e39ee3",
        "type": "ui_slider",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "max",
        "label": "Max {{value | number:2}}",
        "tooltip": "",
        "group": "bd40e71dca80ef04",
        "order": 4,
        "width": "5",
        "height": "1",
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "1000",
        "step": "2",
        "className": "",
        "x": 570,
        "y": 1060,
        "wires": [
            [
                "4536019d942cbd41"
            ]
        ]
    },
    {
        "id": "860f19a6077ccf7a",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "RX Frequency",
        "func": "let topic = `${global.get(\"cmdPath\")}/rx/webfft/frequency`;\nmsg.topic = topic;\nmsg.payload = global.get(\"device.rx.frequency\") * 1000;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 740,
        "wires": [
            [
                "8142d24399193d99"
            ]
        ]
    },
    {
        "id": "8142d24399193d99",
        "type": "delay",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "8be1ad29d1e86276"
            ]
        ]
    },
    {
        "id": "07b220183ff77006",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.spectrum.averaging",
        "payloadType": "global",
        "x": 270,
        "y": 1120,
        "wires": [
            [
                "4a2dcbac0d2b3e30"
            ]
        ]
    },
    {
        "id": "7328fadc376b984b",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.spectrum.averaging",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1120,
        "wires": [
            [
                "6ffcd71ddb97f2dd"
            ]
        ]
    },
    {
        "id": "90ab66a37fc92ccc",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.spectrum.gain",
        "payloadType": "global",
        "x": 220,
        "y": 700,
        "wires": [
            [
                "6adfe6d609aeb90a"
            ]
        ]
    },
    {
        "id": "05155ef717c0fb68",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.spectrum.gain",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 600,
        "wires": [
            [
                "aa44e5106814ab9f"
            ]
        ]
    },
    {
        "id": "c27c4949eee35a7e",
        "type": "debug",
        "z": "9d964f25dcc4d750",
        "d": true,
        "g": "f06e928c83c73984",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1280,
        "wires": []
    },
    {
        "id": "8b5dc62e18f85b99",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "set avg",
        "func": "let topic = `${global.get(\"cmdPath\")}/rx/webfft/avg`;\nmsg.topic = topic;\nmsg.payload = global.get(\"settings.spectrum.averaging\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1300,
        "wires": [
            [
                "6860085513c10a64",
                "c27c4949eee35a7e"
            ]
        ]
    },
    {
        "id": "6ffcd71ddb97f2dd",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "set state",
        "func": "let topic = `${global.get(\"cmdPath\")}/rx/webfft/avg`;\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1120,
        "wires": [
            [
                "6860085513c10a64"
            ]
        ]
    },
    {
        "id": "4a2dcbac0d2b3e30",
        "type": "ui_numeric",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "label": "fft averaging",
        "tooltip": "",
        "group": "bd40e71dca80ef04",
        "order": 7,
        "width": "5",
        "height": "1",
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "step": "1",
        "className": "",
        "x": 590,
        "y": 1120,
        "wires": [
            [
                "7328fadc376b984b"
            ]
        ]
    },
    {
        "id": "8123e129750f95b0",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "set signal_threshold",
        "func": "let topic = `${global.get(\"cmdPath\")}/rx/webfft/signal_threshold`;\nmsg.topic = topic;\nmsg.payload = global.get(\"settings.spectrum.signal_threshold\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1340,
        "wires": [
            [
                "6860085513c10a64"
            ]
        ]
    },
    {
        "id": "03727daaaf94f10a",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.spectrum.signal_threshold",
        "payloadType": "global",
        "x": 290,
        "y": 1160,
        "wires": [
            [
                "b20d795a08271867"
            ]
        ]
    },
    {
        "id": "6ba4f27abdc0a2d7",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.spectrum.signal_threshold",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 1160,
        "wires": [
            [
                "95acf832281a1027"
            ]
        ]
    },
    {
        "id": "95acf832281a1027",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "set state",
        "func": "let topic = `${global.get(\"cmdPath\")}/rx/webfft/signal_threshold`;\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1160,
        "wires": [
            [
                "6860085513c10a64"
            ]
        ]
    },
    {
        "id": "b20d795a08271867",
        "type": "ui_numeric",
        "z": "9d964f25dcc4d750",
        "g": "f06e928c83c73984",
        "name": "",
        "label": "signal threshold",
        "tooltip": "",
        "group": "bd40e71dca80ef04",
        "order": 6,
        "width": "5",
        "height": "1",
        "wrap": false,
        "passthru": false,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 600,
        "y": 1160,
        "wires": [
            [
                "6ba4f27abdc0a2d7"
            ]
        ]
    },
    {
        "id": "8be1ad29d1e86276",
        "type": "delay",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1220,
        "y": 700,
        "wires": [
            [
                "470e4d8abf29a205"
            ]
        ]
    },
    {
        "id": "ed827f68456e01f6",
        "type": "ui_dropdown",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "label": "Span",
        "tooltip": "",
        "place": "Select option",
        "group": "bd40e71dca80ef04",
        "order": 11,
        "width": "5",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 630,
        "y": 660,
        "wires": [
            [
                "0a9fe9e2623385cb",
                "860f19a6077ccf7a"
            ]
        ]
    },
    {
        "id": "0d2cd9e73e204cef",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "change_span_options",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "span_options",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "span_min",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 900,
        "wires": [
            [
                "f9e2e71dd4f166ca",
                "0a9fe9e2623385cb",
                "ed827f68456e01f6"
            ]
        ]
    },
    {
        "id": "f3e27e7da4f03be6",
        "type": "inject",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 900,
        "wires": [
            [
                "0b50c351304db3b5"
            ]
        ]
    },
    {
        "id": "f9e2e71dd4f166ca",
        "type": "debug",
        "z": "9d964f25dcc4d750",
        "d": true,
        "g": "97ecf1ac9459a777",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 900,
        "wires": []
    },
    {
        "id": "0b50c351304db3b5",
        "type": "switch",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "property": "change_span_options",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 900,
        "wires": [
            [
                "0c34bd3ef0714d28"
            ]
        ]
    },
    {
        "id": "0c34bd3ef0714d28",
        "type": "delay",
        "z": "9d964f25dcc4d750",
        "g": "97ecf1ac9459a777",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 900,
        "wires": [
            [
                "0d2cd9e73e204cef"
            ]
        ]
    },
    {
        "id": "026128c195db1eef",
        "type": "file in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "filename": "web/pluto_spectrum/style.css",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 560,
        "y": 180,
        "wires": [
            [
                "3c45a7075be468c5"
            ]
        ]
    },
    {
        "id": "627cec867371bde2",
        "type": "http in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "url": "/pluto_spectrum/style.css",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 180,
        "wires": [
            [
                "026128c195db1eef"
            ]
        ]
    },
    {
        "id": "3c45a7075be468c5",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/css",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 180,
        "wires": [
            [
                "d2c0bc2a.05a02"
            ]
        ]
    },
    {
        "id": "b64eeea466d6cd08",
        "type": "file in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "filename": "web/pluto_spectrum/spectrum.js",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "eecde73600e53333"
            ]
        ]
    },
    {
        "id": "966872edde445388",
        "type": "http in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "url": "/pluto_spectrum/spectrum.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "b64eeea466d6cd08"
            ]
        ]
    },
    {
        "id": "eecde73600e53333",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/javascript",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 220,
        "wires": [
            [
                "d2c0bc2a.05a02"
            ]
        ]
    },
    {
        "id": "dc26a162f73df5e8",
        "type": "file in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "filename": "web/pluto_spectrum/colormap.js",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 570,
        "y": 260,
        "wires": [
            [
                "1f4aee22e5bdb8cb"
            ]
        ]
    },
    {
        "id": "6312034bd95423a1",
        "type": "http in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "url": "/pluto_spectrum/colormap.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 260,
        "wires": [
            [
                "dc26a162f73df5e8"
            ]
        ]
    },
    {
        "id": "1f4aee22e5bdb8cb",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/javascript",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 260,
        "wires": [
            [
                "d2c0bc2a.05a02"
            ]
        ]
    },
    {
        "id": "adf66d2e6169af92",
        "type": "file in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "filename": "web/pluto_spectrum/mqtt.js",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 560,
        "y": 300,
        "wires": [
            [
                "12183c5ef3ad71e6"
            ]
        ]
    },
    {
        "id": "a29f718da4699db4",
        "type": "http in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "url": "/pluto_spectrum/mqtt.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "adf66d2e6169af92"
            ]
        ]
    },
    {
        "id": "12183c5ef3ad71e6",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/javascript",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 300,
        "wires": [
            [
                "d2c0bc2a.05a02"
            ]
        ]
    },
    {
        "id": "647b655c9e80836a",
        "type": "http in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "url": "/pluto_spectrum/script.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 340,
        "wires": [
            [
                "edb6738c089743d7"
            ]
        ]
    },
    {
        "id": "edb6738c089743d7",
        "type": "file in",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "",
        "filename": "web/pluto_spectrum/script.js",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 560,
        "y": 340,
        "wires": [
            [
                "0dd67a65a9a17989"
            ]
        ]
    },
    {
        "id": "0dd67a65a9a17989",
        "type": "change",
        "z": "9d964f25dcc4d750",
        "g": "de3615657f5f8b75",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/javascript",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 340,
        "wires": [
            [
                "d2c0bc2a.05a02"
            ]
        ]
    },
    {
        "id": "c6e41b39dc0902c3",
        "type": "function",
        "z": "9d964f25dcc4d750",
        "g": "2406e32417780de0",
        "name": "set pluto, callsign and hosting_url",
        "func": "msg.pluto = global.get(\"broker_address\");\nmsg.callsign = global.get(\"callsign\");\nmsg.hosting_url = global.get(\"device.hosting_url\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 80,
        "wires": [
            [
                "f3b55ea2.f4d51"
            ]
        ]
    },
    {
        "id": "ee10e75eb6c917e8",
        "type": "http response",
        "z": "34bd429848bdfd07",
        "g": "9c7cb0f498a9f7e2",
        "name": "",
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "02f3e9ac818c03e0",
        "type": "file in",
        "z": "34bd429848bdfd07",
        "g": "2a6eb2e492bee274",
        "name": "",
        "filename": "web/pluto_spectrum/vendor/mqtt.min.js",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "819d5b65838d0f8c"
            ]
        ]
    },
    {
        "id": "51d2c788419a360e",
        "type": "http in",
        "z": "34bd429848bdfd07",
        "g": "2a6eb2e492bee274",
        "name": "",
        "url": "/mqtt_min.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "02f3e9ac818c03e0"
            ]
        ]
    },
    {
        "id": "819d5b65838d0f8c",
        "type": "change",
        "z": "34bd429848bdfd07",
        "g": "2a6eb2e492bee274",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/javascript",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 240,
        "wires": [
            [
                "ee10e75eb6c917e8"
            ]
        ]
    },
    {
        "id": "8a1fb5a4ffa544fd",
        "type": "ui_iframe",
        "z": "34bd429848bdfd07",
        "g": "9c7cb0f498a9f7e2",
        "group": "bd40e71dca80ef04",
        "name": "Constellation",
        "order": 1,
        "width": "5",
        "height": "5",
        "url": "/constel3",
        "origin": "",
        "scale": "100",
        "x": 970,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "966f8abcef78816c",
        "type": "change",
        "z": "34bd429848bdfd07",
        "g": "9c7cb0f498a9f7e2",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/javascript",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 60,
        "wires": [
            [
                "ee10e75eb6c917e8"
            ]
        ]
    },
    {
        "id": "692cfca16036ea93",
        "type": "file in",
        "z": "34bd429848bdfd07",
        "g": "9c7cb0f498a9f7e2",
        "name": "",
        "filename": "web/constel/constellation.js",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 60,
        "wires": [
            [
                "966f8abcef78816c"
            ]
        ]
    },
    {
        "id": "dd2992c2880bcc1f",
        "type": "http in",
        "z": "34bd429848bdfd07",
        "g": "9c7cb0f498a9f7e2",
        "name": "",
        "url": "/constel/script.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "692cfca16036ea93"
            ]
        ]
    },
    {
        "id": "35ee7231ba2e92d3",
        "type": "template",
        "z": "34bd429848bdfd07",
        "g": "9c7cb0f498a9f7e2",
        "name": "Constellation HTML and JS",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<meta charset=\"utf-8\">\n<meta name=\"author\" content=\"Ohan Smit\">\n<title>Constel Plot v3</title>\n<script src=\"/mqtt_min.js\"></script>\n<script>\n    var pluto_url = \"{{pluto}}\";\n    var call_sign = \"{{callsign}}\";\n    var hosting_url = \"{{hosting_url}}\";\n    var localPage = false;\n</script>\n<canvas id=\"graph\" style=\"height: 245px;width: 245px\"></canvas>\n<script src=\"/constel/script.js\"></script>\n",
        "output": "str",
        "x": 720,
        "y": 120,
        "wires": [
            [
                "ee10e75eb6c917e8"
            ]
        ]
    },
    {
        "id": "6fbbca7ba1ed3157",
        "type": "http in",
        "z": "34bd429848bdfd07",
        "g": "9c7cb0f498a9f7e2",
        "name": "",
        "url": "/constel3",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "3fcda18d3f907163"
            ]
        ]
    },
    {
        "id": "3fcda18d3f907163",
        "type": "function",
        "z": "34bd429848bdfd07",
        "g": "9c7cb0f498a9f7e2",
        "name": "set pluto, callsign and hosting_url",
        "func": "msg.pluto = global.get(\"broker_address\");\nmsg.callsign = global.get(\"callsign\");\nmsg.hosting_url = global.get(\"device.hosting_url\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 120,
        "wires": [
            [
                "35ee7231ba2e92d3"
            ]
        ]
    },
    {
        "id": "4c448d00f7a9bc91",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "Frequency",
        "func": "run = msg.payload\ntopic = \"cmd/longmynd/frequency\"\nmsg.topic = topic\nmsg.payload = run\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 160,
        "wires": [
            [
                "092f35ea1c391fe9"
            ]
        ]
    },
    {
        "id": "092f35ea1c391fe9",
        "type": "mqtt out",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "064bde8eca01e996",
        "x": 1290,
        "y": 160,
        "wires": []
    },
    {
        "id": "757e04c57fef3f65",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "SymbolRate",
        "func": "run = msg.payload\ntopic = \"cmd/longmynd/sr\"\nmsg.topic = topic\nmsg.payload = run\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 120,
        "wires": [
            [
                "092f35ea1c391fe9"
            ]
        ]
    },
    {
        "id": "7ef5df84abcea6ef",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "1a1b56533b7099e6",
                "3bbc8686923145ef"
            ]
        ]
    },
    {
        "id": "80df44d523cf6fb3",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "Frequency",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/carrier_frequency\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 400,
        "wires": [
            [
                "7ef5df84abcea6ef"
            ]
        ]
    },
    {
        "id": "5aeaf491922457b1",
        "type": "inject",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 880,
        "wires": [
            [
                "80df44d523cf6fb3",
                "c08bc51a894d262e",
                "fbadbc406f2250f8",
                "c445724468e5eee3",
                "7eac445141314da4",
                "9d2607d0b067c8a5",
                "ef1c70fe71ed1e99",
                "65e7265f536b7371",
                "3f3a177e7fd8606a",
                "e4550b0658e8dda9",
                "c976ace452d1059f",
                "aa18fe6dd4ac0299",
                "8b83d336adb14855",
                "0e66d5d1d53eb868",
                "6a472a91f5b893b8",
                "cd41c1f3c4201336",
                "a90f9c1c2af87afa",
                "410d95bdc81fa714",
                "28bb27b4e9707d84"
            ]
        ]
    },
    {
        "id": "7eb0336efb127684",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 460,
        "wires": [
            [
                "4e342c0c8303aa44",
                "c85d70eeb6386caa"
            ]
        ]
    },
    {
        "id": "c08bc51a894d262e",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX Symbolrate",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/symbolrate\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 460,
        "wires": [
            [
                "7eb0336efb127684"
            ]
        ]
    },
    {
        "id": "3ee83309b7c60ce6",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 540,
        "wires": [
            [
                "397dacd9b7a65182"
            ]
        ]
    },
    {
        "id": "fbadbc406f2250f8",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "Provider Name",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/provider_name\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 540,
        "wires": [
            [
                "3ee83309b7c60ce6"
            ]
        ]
    },
    {
        "id": "e26186773e77c7d7",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 600,
        "wires": [
            [
                "f6ef465dd5037ab9",
                "92f28d11dced1f70"
            ]
        ]
    },
    {
        "id": "c445724468e5eee3",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX ServiceName",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/service_name\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 600,
        "wires": [
            [
                "e26186773e77c7d7"
            ]
        ]
    },
    {
        "id": "7b716cd2051f3dfd",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 660,
        "wires": [
            [
                "f273b41f331e91e0",
                "5fd27bc7e53bf26e"
            ]
        ]
    },
    {
        "id": "7eac445141314da4",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX Mer",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/mer\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 660,
        "wires": [
            [
                "7b716cd2051f3dfd"
            ]
        ]
    },
    {
        "id": "6ed10429f1f77968",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 720,
        "wires": [
            [
                "9ccafb64a91eebb9",
                "cc4ddaef1b0abcbe"
            ]
        ]
    },
    {
        "id": "9d2607d0b067c8a5",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX State",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/rx_state\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 720,
        "wires": [
            [
                "6ed10429f1f77968"
            ]
        ]
    },
    {
        "id": "fd75ce73f90f3897",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 780,
        "wires": [
            [
                "6addcc9fb4c8dafa",
                "ceed3238855470f9",
                "63789b768da8586e",
                "2f94fc61ece80fe5"
            ]
        ]
    },
    {
        "id": "ef1c70fe71ed1e99",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX Fec",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/fec\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 780,
        "wires": [
            [
                "fd75ce73f90f3897"
            ]
        ]
    },
    {
        "id": "b95afb21d173822f",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1040,
        "wires": [
            [
                "58e863a2f2c3bca5",
                "0bc834734cec7b86",
                "c7d5d5429530b8d7"
            ]
        ]
    },
    {
        "id": "65e7265f536b7371",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX Modulation",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/modulation\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1040,
        "wires": [
            [
                "b95afb21d173822f"
            ]
        ]
    },
    {
        "id": "3bceae7c6947f3d7",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX SWPort",
        "func": "let run = msg.payload\nlet topic = \"cmd/longmynd/swport\"\nmsg.topic = topic\nmsg.payload = run\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "092f35ea1c391fe9"
            ]
        ]
    },
    {
        "id": "62587bd01f2eddd4",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "214b7bfa90308e80",
                "fd656b16d19f7012"
            ]
        ]
    },
    {
        "id": "3f3a177e7fd8606a",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX Margin db",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/margin_db\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1120,
        "wires": [
            [
                "62587bd01f2eddd4"
            ]
        ]
    },
    {
        "id": "9a0b2140b7c832bf",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "ON",
        "func": "let run = msg.payload\nlet topic = `${global.get(\"cmdPath\")}/system/longmynd`\nmsg.topic = topic\nmsg.payload = run\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 280,
        "wires": [
            [
                "092f35ea1c391fe9"
            ]
        ]
    },
    {
        "id": "59fbaa99f555654c",
        "type": "inject",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rx_port",
        "payloadType": "flow",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "978d405470af5b94"
            ]
        ]
    },
    {
        "id": "e4550b0658e8dda9",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX Short Frame",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/short_frame\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1180,
        "wires": [
            [
                "1facaa16d95af5bd"
            ]
        ]
    },
    {
        "id": "c976ace452d1059f",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX Pilots",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/pilots\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1240,
        "wires": [
            [
                "55ed3e51ca0bc354"
            ]
        ]
    },
    {
        "id": "1facaa16d95af5bd",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1180,
        "wires": [
            [
                "7099c8e1196a7139"
            ]
        ]
    },
    {
        "id": "55ed3e51ca0bc354",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1240,
        "wires": [
            [
                "e7953b157ef05c17"
            ]
        ]
    },
    {
        "id": "0bc834734cec7b86",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "constellation_mode",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "8b56d8d464463ef0",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "QPSK_Min_C/N",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1/4",
                "fromt": "str",
                "to": "-2.4",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1/3",
                "fromt": "str",
                "to": "-1.2",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2/5",
                "fromt": "str",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1/2",
                "fromt": "str",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3/5",
                "fromt": "str",
                "to": "2.2",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2/3",
                "fromt": "str",
                "to": "3.1",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3/4",
                "fromt": "str",
                "to": "4",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4/5",
                "fromt": "str",
                "to": "4.6",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5/6",
                "fromt": "str",
                "to": "5.2",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "8/9",
                "fromt": "str",
                "to": "6.2",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9/10",
                "fromt": "str",
                "to": "6.5",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "none",
                "fromt": "str",
                "to": "- -",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 860,
        "wires": [
            [
                "9649b83dcc440ec3"
            ]
        ]
    },
    {
        "id": "80528ea20d50cd4a",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "8PSK_Min_C/N",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3/5",
                "fromt": "str",
                "to": "5.5",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2/3",
                "fromt": "str",
                "to": "6.6",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3/4",
                "fromt": "str",
                "to": "7.9",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5/6",
                "fromt": "str",
                "to": "9.4",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "8/9",
                "fromt": "str",
                "to": "10.6",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9/10",
                "fromt": "str",
                "to": "11",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "none",
                "fromt": "str",
                "to": "- - - -",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 900,
        "wires": [
            [
                "9649b83dcc440ec3"
            ]
        ]
    },
    {
        "id": "6addcc9fb4c8dafa",
        "type": "switch",
        "z": "d7c58eb9e7b65abb",
        "name": "switch C/N tables",
        "property": "constellation_mode",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "QPSK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "8PSK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "16APSK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "32APSK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "none",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 870,
        "y": 860,
        "wires": [
            [
                "8b56d8d464463ef0"
            ],
            [
                "80528ea20d50cd4a"
            ],
            [
                "1183c0833fda3d74"
            ],
            [
                "a5d239c45dea85e1"
            ],
            [
                "c74f6eb9ad0470b8"
            ]
        ]
    },
    {
        "id": "1183c0833fda3d74",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "16APSK_Min_C/N",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2/3",
                "fromt": "str",
                "to": "9",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3/4",
                "fromt": "str",
                "to": "10.2",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4/5",
                "fromt": "str",
                "to": "11",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5/6",
                "fromt": "str",
                "to": "11.6",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "8/9",
                "fromt": "str",
                "to": "12.9",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9/10",
                "fromt": "str",
                "to": "13.1",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "none",
                "fromt": "str",
                "to": "- - - -",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 940,
        "wires": [
            [
                "9649b83dcc440ec3"
            ]
        ]
    },
    {
        "id": "a5d239c45dea85e1",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "32APSK_Min_C/N",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3/4",
                "fromt": "str",
                "to": "12.6",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4/5",
                "fromt": "str",
                "to": "13.6",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5/6",
                "fromt": "str",
                "to": "14.3",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "8/9",
                "fromt": "str",
                "to": "15.7",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9/10",
                "fromt": "str",
                "to": "16.1",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "none",
                "fromt": "str",
                "to": "- - - -",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 980,
        "wires": [
            [
                "9649b83dcc440ec3"
            ]
        ]
    },
    {
        "id": "c74f6eb9ad0470b8",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "None",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "none",
                "fromt": "str",
                "to": "- -",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 1020,
        "wires": [
            [
                "9649b83dcc440ec3"
            ]
        ]
    },
    {
        "id": "aa18fe6dd4ac0299",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "LDPC Errors",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/longmynd/ldpc_errors\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1300,
        "wires": [
            [
                "f3a9382bc4aea5a2"
            ]
        ]
    },
    {
        "id": "f3a9382bc4aea5a2",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1300,
        "wires": [
            [
                "41116104860cd283"
            ]
        ]
    },
    {
        "id": "978d405470af5b94",
        "type": "ui_switch",
        "z": "d7c58eb9e7b65abb",
        "name": "Tuner port selection",
        "label": "Tuner port",
        "tooltip": "",
        "group": "65d91b75202c3b55",
        "order": 8,
        "width": "4",
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "0",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "1",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 370,
        "y": 220,
        "wires": [
            [
                "3bceae7c6947f3d7",
                "88197c215268c6d0"
            ]
        ]
    },
    {
        "id": "f46d32abeabe83a5",
        "type": "ui_switch",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "label": "Tuner on/off",
        "tooltip": "",
        "group": "65d91b75202c3b55",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 750,
        "y": 280,
        "wires": [
            [
                "9a0b2140b7c832bf"
            ]
        ]
    },
    {
        "id": "213cb71b680727f9",
        "type": "ui_dropdown",
        "z": "d7c58eb9e7b65abb",
        "name": "Set RX Symbol Rate",
        "label": "Symbol Rate",
        "tooltip": "",
        "place": "",
        "group": "a4a37989805c1f8e",
        "order": 5,
        "width": "5",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "35 Ks",
                "value": 35,
                "type": "num"
            },
            {
                "label": "66 Ks",
                "value": 66,
                "type": "num"
            },
            {
                "label": "125 Ks",
                "value": 125,
                "type": "num"
            },
            {
                "label": "250 Ks",
                "value": 250,
                "type": "num"
            },
            {
                "label": "333 Ks",
                "value": 333,
                "type": "num"
            },
            {
                "label": "500 Ks",
                "value": 500,
                "type": "num"
            },
            {
                "label": "1 Ms",
                "value": 1000,
                "type": "num"
            },
            {
                "label": "1.5 Ms/s",
                "value": 1500,
                "type": "num"
            },
            {
                "label": "2 Ms",
                "value": 2000,
                "type": "num"
            },
            {
                "label": "3 Ms",
                "value": 3000,
                "type": "num"
            },
            {
                "label": "4 Ms",
                "value": 4000,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 780,
        "y": 100,
        "wires": [
            [
                "757e04c57fef3f65"
            ]
        ]
    },
    {
        "id": "1eb7d3a28526dc87",
        "type": "ui_dropdown",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "label": "Set Frequency",
        "tooltip": "",
        "place": "",
        "group": "a4a37989805c1f8e",
        "order": 4,
        "width": "5",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 760,
        "y": 160,
        "wires": [
            [
                "4c448d00f7a9bc91"
            ]
        ]
    },
    {
        "id": "1a1b56533b7099e6",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "65d91b75202c3b55",
        "order": 11,
        "width": "4",
        "height": 1,
        "name": "RX Actual Frequency",
        "label": "Frequency",
        "format": "  {{value | number:0}}  MHz",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 880,
        "y": 400,
        "wires": []
    },
    {
        "id": "4e342c0c8303aa44",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "65d91b75202c3b55",
        "order": 15,
        "width": 3,
        "height": 1,
        "name": "RX Symbol Rate",
        "label": "",
        "format": "SR {{msg.payload}} kS/s",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 860,
        "y": 460,
        "wires": []
    },
    {
        "id": "cc295c934bb4be42",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "a4a37989805c1f8e",
        "order": 3,
        "width": "6",
        "height": 1,
        "name": "RX provider Name",
        "label": "Provider",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#ffffff",
        "x": 1330,
        "y": 540,
        "wires": []
    },
    {
        "id": "f6ef465dd5037ab9",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "a4a37989805c1f8e",
        "order": 2,
        "width": "6",
        "height": 1,
        "name": "RX Service Name",
        "label": "Service Name :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#ffffff",
        "x": 870,
        "y": 600,
        "wires": []
    },
    {
        "id": "ceed3238855470f9",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "65d91b75202c3b55",
        "order": 17,
        "width": "2",
        "height": 1,
        "name": "RX Actual Fec",
        "label": "",
        "format": "FEC  {{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 860,
        "y": 780,
        "wires": []
    },
    {
        "id": "58e863a2f2c3bca5",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "65d91b75202c3b55",
        "order": 16,
        "width": "3",
        "height": 1,
        "name": "RX Modulation",
        "label": "",
        "format": "MOD {{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 880,
        "y": 1040,
        "wires": []
    },
    {
        "id": "cd6d6d2557a4a7de",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "65d91b75202c3b55",
        "order": 19,
        "width": "3",
        "height": 1,
        "name": "Display_min_C/N",
        "label": "Min C/N :",
        "format": "{{msg.payload}} dB",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 1790,
        "y": 940,
        "wires": []
    },
    {
        "id": "017e750722d50fa5",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "65d91b75202c3b55",
        "order": 10,
        "width": "4",
        "height": 1,
        "name": "TS Out",
        "label": "TS Out :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 860,
        "y": 1360,
        "wires": []
    },
    {
        "id": "5fd27bc7e53bf26e",
        "type": "ui_gauge",
        "z": "d7c58eb9e7b65abb",
        "name": "Gauge - MER",
        "group": "a4a37989805c1f8e",
        "order": 8,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "MER",
        "label": "dB",
        "format": "{{value}}",
        "min": "-5.0",
        "max": "15.0",
        "colors": [
            "#ca3838",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 860,
        "y": 660,
        "wires": []
    },
    {
        "id": "fe32f9d88f4a500f",
        "type": "ui_gauge",
        "z": "d7c58eb9e7b65abb",
        "name": "Gauge - Margin",
        "group": "a4a37989805c1f8e",
        "order": 12,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Margin",
        "label": "dB",
        "format": "{{value}}",
        "min": "-5",
        "max": "10",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#00ff00"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 1180,
        "wires": []
    },
    {
        "id": "41116104860cd283",
        "type": "ui_gauge",
        "z": "d7c58eb9e7b65abb",
        "name": "Gauge - LDPC Errors",
        "group": "a4a37989805c1f8e",
        "order": 9,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "LDPC Errors",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "3000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 900,
        "y": 1300,
        "wires": []
    },
    {
        "id": "8b83d336adb14855",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "Get TSIP_OUT",
        "func": "let tsip_out = global.get(\"device.rx.tsip\");\nmsg.payload = tsip_out;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1360,
        "wires": [
            [
                "017e750722d50fa5"
            ]
        ]
    },
    {
        "id": "9ccafb64a91eebb9",
        "type": "ui_led",
        "z": "d7c58eb9e7b65abb",
        "order": 3,
        "group": "65d91b75202c3b55",
        "width": "2",
        "height": 1,
        "label": "Carrier",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "Hunting",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "demod_s2",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "Carrier lock",
        "x": 850,
        "y": 720,
        "wires": []
    },
    {
        "id": "e7953b157ef05c17",
        "type": "ui_led",
        "z": "d7c58eb9e7b65abb",
        "order": 4,
        "group": "65d91b75202c3b55",
        "width": "2",
        "height": 1,
        "label": "Pilots",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "RX Pilots",
        "x": 860,
        "y": 1260,
        "wires": []
    },
    {
        "id": "7099c8e1196a7139",
        "type": "ui_led",
        "z": "d7c58eb9e7b65abb",
        "order": 5,
        "group": "65d91b75202c3b55",
        "width": "3",
        "height": 1,
        "label": "Short Frame",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "RX Short Frame",
        "x": 880,
        "y": 1200,
        "wires": []
    },
    {
        "id": "0e66d5d1d53eb868",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "Null packets",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/longmynd/ts_null\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "c4309a90c3787cc3"
            ]
        ]
    },
    {
        "id": "c4309a90c3787cc3",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1420,
        "wires": [
            [
                "a47fbb74d9f716d7"
            ]
        ]
    },
    {
        "id": "8d2e2e03337cd6ed",
        "type": "ui_gauge",
        "z": "d7c58eb9e7b65abb",
        "name": "Gauge - Null packets",
        "group": "a4a37989805c1f8e",
        "order": 10,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Null packets",
        "label": "",
        "format": "{{value}} %",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "25",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 1060,
        "y": 1420,
        "wires": []
    },
    {
        "id": "6a472a91f5b893b8",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "Null packets",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/longmynd/bch_errors\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1480,
        "wires": [
            [
                "6b4f4caadbd1eef3"
            ]
        ]
    },
    {
        "id": "6b4f4caadbd1eef3",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1480,
        "wires": [
            [
                "3bbe3be39cb3acad"
            ]
        ]
    },
    {
        "id": "77ed502a1d9da528",
        "type": "ui_gauge",
        "z": "d7c58eb9e7b65abb",
        "name": "Gauge - BCH errors ",
        "group": "a4a37989805c1f8e",
        "order": 11,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "BCH errors ",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "25",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 1060,
        "y": 1480,
        "wires": []
    },
    {
        "id": "023a87237f50095c",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "65d91b75202c3b55",
        "order": 1,
        "width": "3",
        "height": 1,
        "name": "Rx controls",
        "label": "<b><font size=4><font color=\"#CC0D00\"}>RX Longmynd",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1330,
        "y": 400,
        "wires": []
    },
    {
        "id": "a47fbb74d9f716d7",
        "type": "smooth",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "10",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 860,
        "y": 1420,
        "wires": [
            [
                "8d2e2e03337cd6ed"
            ]
        ]
    },
    {
        "id": "3bbc8686923145ef",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "freq",
        "rules": [
            {
                "t": "set",
                "p": "freq",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 360,
        "wires": [
            [
                "b1b3884a0fc662c0"
            ]
        ]
    },
    {
        "id": "c85d70eeb6386caa",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "sr",
        "rules": [
            {
                "t": "set",
                "p": "sr",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "50cc94d7164c1a3d",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "provider",
        "rules": [
            {
                "t": "set",
                "p": "provider",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rx_provider",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "92f28d11dced1f70",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "service",
        "rules": [
            {
                "t": "set",
                "p": "service",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rx_service",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "f273b41f331e91e0",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "mer",
        "rules": [
            {
                "t": "set",
                "p": "mer",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "63789b768da8586e",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "fec",
        "rules": [
            {
                "t": "set",
                "p": "fec",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "c7d5d5429530b8d7",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "mod",
        "rules": [
            {
                "t": "set",
                "p": "mod",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "214b7bfa90308e80",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "margin",
        "rules": [
            {
                "t": "set",
                "p": "margin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "2f94fc61ece80fe5",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "FEC to percent",
        "func": "let numbers = msg.payload.split(\"/\");\nlet top = numbers[0]\nlet bottom = numbers[1]\n\nmsg.payload = Number(top/bottom*100).toFixed(1);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 780,
        "wires": [
            [
                "8a6332d6de097ac7",
                "65ae32fd188ce551"
            ]
        ]
    },
    {
        "id": "8a6332d6de097ac7",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "d": true,
        "group": "65d91b75202c3b55",
        "order": 18,
        "width": 3,
        "height": 1,
        "name": "RX Actual Fec",
        "label": "",
        "format": "FEC {{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 1400,
        "y": 760,
        "wires": []
    },
    {
        "id": "65ae32fd188ce551",
        "type": "ui_chart",
        "z": "d7c58eb9e7b65abb",
        "d": true,
        "name": "",
        "group": "65d91b75202c3b55",
        "order": 20,
        "width": "16",
        "height": "3",
        "label": "FEC",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "25",
        "ymax": "90",
        "removeOlder": "30",
        "removeOlderPoints": "30",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1370,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "3bbe3be39cb3acad",
        "type": "smooth",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "10",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 860,
        "y": 1480,
        "wires": [
            [
                "77ed502a1d9da528"
            ]
        ]
    },
    {
        "id": "cc4ddaef1b0abcbe",
        "type": "switch",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "demod_s2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "demod_s2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 720,
        "wires": [
            [
                "2d5cefd5dd394252"
            ],
            [
                "221278234561429f"
            ]
        ]
    },
    {
        "id": "2d5cefd5dd394252",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rx_time",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "rx_locked",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 660,
        "wires": [
            [
                "a4801cf476e76cec"
            ]
        ]
    },
    {
        "id": "221278234561429f",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "rx timer",
        "func": "if(!global.get(\"rx_locked\")){\n    global.set(\"rx_locked\", true);\n    let now = Date.now();\n    global.set(\"rx_time\", now); \n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "92e743f7fa12eef8",
        "type": "inject",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "ab828a5dc2d55ada"
            ]
        ]
    },
    {
        "id": "ab828a5dc2d55ada",
        "type": "file in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "filename": "settings/channels.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 420,
        "y": 60,
        "wires": [
            [
                "51a832f2b02817b3"
            ]
        ]
    },
    {
        "id": "51a832f2b02817b3",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "send channel options",
        "func": "let payload = msg.payload;\nmsg.payload = global.get(\"device.tx.frequency\");\nmsg.options = JSON.parse(payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 60,
        "wires": [
            [
                "1eb7d3a28526dc87"
            ]
        ]
    },
    {
        "id": "9850f6ec613dd67d",
        "type": "inject",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "f46d32abeabe83a5",
                "9a0b2140b7c832bf"
            ]
        ]
    },
    {
        "id": "f0a96e21b1852116",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "a4a37989805c1f8e",
        "order": 1,
        "width": "3",
        "height": 1,
        "name": "Rx controls",
        "label": "<b><font size=4><font color=\"#CC0D00\"}>RX Longmynd",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1330,
        "y": 360,
        "wires": []
    },
    {
        "id": "397dacd9b7a65182",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "Truncate long provider names",
        "func": "let provider = truncate(msg.payload, 26);\nmsg.payload = provider;\nreturn msg;\n\nfunction truncate(str, n) {\n    return (str.length > n) ? str.slice(0, n - 1) : str;\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 540,
        "wires": [
            [
                "cc295c934bb4be42",
                "50cc94d7164c1a3d"
            ]
        ]
    },
    {
        "id": "ddcdf74a1e7fe17b",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rx_port",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 260,
        "wires": [
            [
                "7b3cab5a067f0a35"
            ]
        ]
    },
    {
        "id": "9649b83dcc440ec3",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "min_cn",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 940,
        "wires": [
            [
                "cd6d6d2557a4a7de"
            ]
        ]
    },
    {
        "id": "fd656b16d19f7012",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "calc D rating",
        "func": "let cn = Number(flow.get(\"min_cn\"));\nlet mer = Number(flow.get(\"mer\"));\nlet dRating = (mer - cn).toFixed(1);\nflow.set(\"d_rating\", dRating)\nmsg.payload = dRating;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1140,
        "wires": [
            [
                "fe32f9d88f4a500f"
            ]
        ]
    },
    {
        "id": "fedb4b781ede71ba",
        "type": "inject",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rx_time",
        "payloadType": "global",
        "x": 1320,
        "y": 40,
        "wires": [
            [
                "0ef0c870b966b6a8"
            ]
        ]
    },
    {
        "id": "0ef0c870b966b6a8",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "Count time",
        "func": "let txTime = msg.payload;\nif (txTime === 0) return msg;\nlet now = Date.now();\nmsg.payload = Math.round((now - txTime)/1000);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 40,
        "wires": [
            [
                "52752582e58d6348"
            ]
        ]
    },
    {
        "id": "52752582e58d6348",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "group": "65d91b75202c3b55",
        "order": 6,
        "width": 3,
        "height": 1,
        "name": "Rx time",
        "label": "Rx time",
        "format": "<font color=\"#33cc33\"}>{{msg.payload}}s",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1660,
        "y": 40,
        "wires": []
    },
    {
        "id": "b479daca5e94725e",
        "type": "inject",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 1310,
        "y": 80,
        "wires": [
            [
                "4de21ed20e4b931f"
            ]
        ]
    },
    {
        "id": "4de21ed20e4b931f",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rx_locked",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f6e02394155b93b8",
        "type": "debug",
        "z": "d7c58eb9e7b65abb",
        "g": "c070d9c6c2a6ac1b",
        "name": "Signal Report",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1720,
        "wires": []
    },
    {
        "id": "da68bec334fc010b",
        "type": "ui_button",
        "z": "d7c58eb9e7b65abb",
        "g": "c070d9c6c2a6ac1b",
        "name": "SignalReport",
        "group": "65d91b75202c3b55",
        "order": 23,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "SignalReport",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 1660,
        "wires": [
            [
                "8b74e5e219711233"
            ]
        ]
    },
    {
        "id": "32bc79c700bb824b",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "g": "c070d9c6c2a6ac1b",
        "name": "generate signal report",
        "func": "let freq = (Number(flow.get(\"freq\")) * 1000 + Math.abs(Number(global.get('device.rx.offset')))) / 1e6;\nlet provider = `\"${flow.get(\"provider\")}\"`;\nlet v_buff = flow.get(\"video_buffer\");\nlet a_buff = flow.get(\"audio_buffer\");\nlet delay = flow.get(\"transmission_delay\");\nif (global.get(\"platform\") === \"linux\") provider = flow.get(\"provider\");\nlet video = `${v_buff > 100000 ? \"\" : v_buff !== 0 ? `video: ${v_buff}ms` : \"\"}`;\nlet audio = `${a_buff > 100000 ? \"\" : a_buff !== 0 ? `, audio: ${a_buff}ms` : \"\"}`;\nlet tx_delay = `${delay > 0 ? `, tx delay, ${delay}ms ` : \"\"}`;\nlet analysis_string = \"\";\nif (video !== \"\" || audio !== \"\" || tx_delay !== \"\") analysis_string=  `Buffer delays, ${video}${audio}${tx_delay} `;\nlet sigreport = `SigReport: ${flow.get(\"service\")}/${provider} - D${flow.get(\"d_rating\")} - ${flow.get(\"constellation_mode\")} ${flow.get(\"fec\")} (${flow.get(\"mer\")} dB) - ${flow.get(\"sr\")}kS ${freq}${analysis_string} - ${global.get(\"device.sig_report_suffux\")}`;\nlet clipboard = `echo ${sigreport}| clip`;\nif (global.get(\"platform\") === \"linux\") clipboard = `echo \\\"${sigreport}\\\" | xclip -sel clip`\nmsg.payload = clipboard;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1660,
        "wires": [
            [
                "2d249c596e884cd8",
                "f6e02394155b93b8"
            ]
        ]
    },
    {
        "id": "2d249c596e884cd8",
        "type": "exec",
        "z": "d7c58eb9e7b65abb",
        "g": "c070d9c6c2a6ac1b",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "copy to clipboard",
        "x": 870,
        "y": 1660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8b74e5e219711233",
        "type": "OS",
        "z": "d7c58eb9e7b65abb",
        "g": "c070d9c6c2a6ac1b",
        "name": "",
        "x": 430,
        "y": 1660,
        "wires": [
            [
                "32bc79c700bb824b"
            ]
        ]
    },
    {
        "id": "88197c215268c6d0",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "Top",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Bottom",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 260,
        "wires": [
            [
                "ddcdf74a1e7fe17b"
            ]
        ]
    },
    {
        "id": "cd41c1f3c4201336",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "lna gain",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/longmynd/lna_gain\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1540,
        "wires": [
            [
                "041124d9f596f263"
            ]
        ]
    },
    {
        "id": "041124d9f596f263",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "a90f9c1c2af87afa",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "audiobuffer",
        "func": "msg.action = \"subscribe\"\nmsg.topic =\"dt/longmynd/audiobuffer\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1880,
        "wires": [
            [
                "4f2dbe83f0fbb265"
            ]
        ]
    },
    {
        "id": "4f2dbe83f0fbb265",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 510,
        "y": 1880,
        "wires": [
            [
                "c5ac2e82dbf465e3"
            ]
        ]
    },
    {
        "id": "410d95bdc81fa714",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "videobuffer",
        "func": "msg.action = \"subscribe\"\nmsg.topic =\"dt/longmynd/videobuffer\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1920,
        "wires": [
            [
                "cfc26d33717144bd"
            ]
        ]
    },
    {
        "id": "cfc26d33717144bd",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 510,
        "y": 1920,
        "wires": [
            [
                "32d49dfe659b035a"
            ]
        ]
    },
    {
        "id": "85960296b05e0f13",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "group": "65d91b75202c3b55",
        "order": 12,
        "width": "4",
        "height": 1,
        "name": "videobuffer",
        "label": "videobuffer",
        "format": "  {{value | number:0}}  ms",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 1250,
        "y": 1960,
        "wires": []
    },
    {
        "id": "32d49dfe659b035a",
        "type": "calculator",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "mult",
        "constant": "1",
        "round": false,
        "truncate": true,
        "decimals": 0,
        "decimals2": "2",
        "x": 720,
        "y": 1920,
        "wires": [
            [
                "b4d68204ef4121e0",
                "1e5acd6b13718ebb"
            ]
        ]
    },
    {
        "id": "c5ac2e82dbf465e3",
        "type": "calculator",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "mult",
        "constant": "1",
        "round": false,
        "truncate": true,
        "decimals": 0,
        "decimals2": "2",
        "x": 720,
        "y": 1880,
        "wires": [
            [
                "f298934c06e2694e",
                "86a761d0d89ee362"
            ]
        ]
    },
    {
        "id": "ede5df2f5091c5aa",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "group": "65d91b75202c3b55",
        "order": 13,
        "width": "5",
        "height": 1,
        "name": "audiobuffer",
        "label": "audiobuffer",
        "format": "  {{value | number:0}}  ms",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 1250,
        "y": 1840,
        "wires": []
    },
    {
        "id": "f298934c06e2694e",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "audio_buffer",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "b4d68204ef4121e0",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "video_buffer",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "27b3329bfce21726",
        "type": "smooth",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "10",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 1100,
        "y": 1840,
        "wires": [
            [
                "ede5df2f5091c5aa"
            ]
        ]
    },
    {
        "id": "3c63daae2a5e8e99",
        "type": "smooth",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "10",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 1100,
        "y": 1960,
        "wires": [
            [
                "85960296b05e0f13"
            ]
        ]
    },
    {
        "id": "4c790f5e192986cc",
        "type": "inject",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rx_lnb",
        "payloadType": "flow",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "122840fbc31dee84"
            ]
        ]
    },
    {
        "id": "a8b516e736a38f89",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "name": "RX LNB",
        "func": "msg.topic = \"cmd/longmynd/polar\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "092f35ea1c391fe9",
                "b85b260f4efb9e6d"
            ]
        ]
    },
    {
        "id": "122840fbc31dee84",
        "type": "ui_dropdown",
        "z": "d7c58eb9e7b65abb",
        "name": "LNB mode",
        "label": "LNB mode",
        "tooltip": "",
        "place": "Select option",
        "group": "65d91b75202c3b55",
        "order": 7,
        "width": "4",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "No Voltage",
                "value": "n",
                "type": "str"
            },
            {
                "label": "Vertical 12V",
                "value": "v",
                "type": "str"
            },
            {
                "label": "Horizontal 18V",
                "value": "h",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "a8b516e736a38f89"
            ]
        ]
    },
    {
        "id": "b85b260f4efb9e6d",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rx_lnb",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "28bb27b4e9707d84",
        "type": "function",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "transmission delay",
        "func": "msg.action = \"subscribe\"\nmsg.topic =\"dt/longmynd/transdelay\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1960,
        "wires": [
            [
                "175d46a089ea6ba5"
            ]
        ]
    },
    {
        "id": "175d46a089ea6ba5",
        "type": "mqtt in",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 510,
        "y": 1960,
        "wires": [
            [
                "9575b4e1e6fa27ea"
            ]
        ]
    },
    {
        "id": "9575b4e1e6fa27ea",
        "type": "calculator",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "mult",
        "constant": "1",
        "round": false,
        "truncate": true,
        "decimals": 0,
        "decimals2": "2",
        "x": 720,
        "y": 1960,
        "wires": [
            [
                "a331c7113bb6fa38"
            ]
        ]
    },
    {
        "id": "0a2e232f723d91c4",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "transmission_delay",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "d50ebc8190dac5c2",
        "type": "smooth",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "10",
        "round": "",
        "mult": "single",
        "reduce": false,
        "x": 1200,
        "y": 2020,
        "wires": [
            [
                "6f8a9a80f62fe1e9"
            ]
        ]
    },
    {
        "id": "41d02716c7ee4788",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "group": "65d91b75202c3b55",
        "order": 14,
        "width": "3",
        "height": 1,
        "name": "tx delay",
        "label": "tx delay",
        "format": "{{value | number:0}} ms",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 1220,
        "y": 2160,
        "wires": []
    },
    {
        "id": "da95ef82cdeaed72",
        "type": "inject",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 910,
        "y": 2080,
        "wires": [
            [
                "0a2e232f723d91c4",
                "d50ebc8190dac5c2"
            ]
        ]
    },
    {
        "id": "7b3cab5a067f0a35",
        "type": "ui_text",
        "z": "d7c58eb9e7b65abb",
        "d": true,
        "group": "65d91b75202c3b55",
        "order": 9,
        "width": 2,
        "height": 1,
        "name": "Tuner port",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#008080",
        "x": 1510,
        "y": 260,
        "wires": []
    },
    {
        "id": "0dd1ad16dedd4d28",
        "type": "inject",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "transmission_delay",
        "payloadType": "flow",
        "x": 1030,
        "y": 2160,
        "wires": [
            [
                "41d02716c7ee4788"
            ]
        ]
    },
    {
        "id": "6f8a9a80f62fe1e9",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "transmission_delay",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "a331c7113bb6fa38",
        "type": "rbe",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "func": "rbe",
        "gap": "5",
        "start": "",
        "inout": "in",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 2000,
        "wires": [
            [
                "d50ebc8190dac5c2"
            ]
        ]
    },
    {
        "id": "a4801cf476e76cec",
        "type": "delay",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1530,
        "y": 660,
        "wires": [
            [
                "480dfb31c83e4f89"
            ]
        ]
    },
    {
        "id": "480dfb31c83e4f89",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "transmission_delay",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "86a761d0d89ee362",
        "type": "rbe",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "func": "rbe",
        "gap": "5",
        "start": "",
        "inout": "in",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 1840,
        "wires": [
            [
                "27b3329bfce21726"
            ]
        ]
    },
    {
        "id": "1e5acd6b13718ebb",
        "type": "rbe",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "",
        "func": "rbe",
        "gap": "5",
        "start": "",
        "inout": "in",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 970,
        "y": 1960,
        "wires": [
            [
                "3c63daae2a5e8e99"
            ]
        ]
    },
    {
        "id": "b1b3884a0fc662c0",
        "type": "rbe",
        "z": "d7c58eb9e7b65abb",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1080,
        "y": 420,
        "wires": [
            [
                "6925ed56180918ca"
            ]
        ]
    },
    {
        "id": "6925ed56180918ca",
        "type": "change",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "reset avg",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2020,
        "wires": [
            [
                "d50ebc8190dac5c2",
                "3c63daae2a5e8e99",
                "27b3329bfce21726",
                "097842d26da1c238"
            ]
        ]
    },
    {
        "id": "097842d26da1c238",
        "type": "debug",
        "z": "d7c58eb9e7b65abb",
        "g": "a5269925ed64322c",
        "name": "reset",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 2140,
        "wires": []
    },
    {
        "id": "01cd46f702ab295a",
        "type": "http in",
        "z": "e2c54979685d14cb",
        "g": "9b97da84f20d2dc4",
        "name": "",
        "url": "/spektrum_test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 690,
        "y": 80,
        "wires": [
            [
                "2acadfcfdd128dd9"
            ]
        ]
    },
    {
        "id": "f7591f90facf0e0b",
        "type": "http response",
        "z": "e2c54979685d14cb",
        "g": "9b97da84f20d2dc4",
        "name": "",
        "x": 1030,
        "y": 80,
        "wires": []
    },
    {
        "id": "2acadfcfdd128dd9",
        "type": "template",
        "z": "e2c54979685d14cb",
        "g": "9b97da84f20d2dc4",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html lang=\"en\">\n<meta charset=\"utf-8\">\n<meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\">\n<title>QO-100 / Es'hail-2 Wideband Spectrum Monitor</title>\n<meta content=\"QO-100 / Es'hail-2 Wideband Spectrum Monitor - by BATC & AMSAT-UK\" name=\"description\">\n<meta content=\"BATC & AMSAT-UK\" name=\"author\">\n<link rel=\"stylesheet\" href=\"/internet_spectrum/style.css\">\n<script src=\"/internet_spectrum/websocket.js\"></script>\n<script> \n    var localPage = false;\n</script>\n<script async src=\"/internet_spectrum/script.js\"></script>\n<body class=\"bg-dark\">\n    <div id=\"content\" role=\"main\">\n        <div class=\"row\">\n            <div id=\"fft-col\" class=\"col-xl-12\">\n                <canvas id=\"c\"></canvas>\n                <div id=\"under-canvas\">\n                    <span style=\"color: white;float: left;\">Shift (333KS) / ALT (250KS) + click channel bars or click signal</span>\n                        <label style=\"color: white;padding: 3px\" for=\"fft-speed-select\">FFT</label>\n                        <select id=\"fft-speed-select\">\n                            <option value=\"fft\" selected=\"selected\">Slow\n                            <option value=\"fft_fast\">Fast\n                        </select>\n                        <label style=\"color: white;padding: 3px\" for=\"fft-colour-select\">SP</label><input\n                            type=\"color\" id=\"fft-colour-select\" value=\"$(fft_colour)\"><label\n                            style=\"color: white;padding: 3px\" for=\"band-colour-select\">CH</label><input\n                            type=\"color\" id=\"band-colour-select\" value=\"$(band_colour)\"><select\n                            id=\"background-colour-select\">\n                            <option value=\"black\" selected=\"selected\">Black\n                            <option value=\"white\">White\n                        </select>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n</html>",
        "output": "str",
        "x": 870,
        "y": 80,
        "wires": [
            [
                "f7591f90facf0e0b"
            ]
        ]
    },
    {
        "id": "bbf9e870bbb3141b",
        "type": "ui_iframe",
        "z": "e2c54979685d14cb",
        "g": "9b97da84f20d2dc4",
        "group": "235bdacf6041386f",
        "name": "spectrum iframe",
        "order": 2,
        "width": "18",
        "height": "10",
        "url": "/spektrum_test",
        "origin": "*",
        "scale": "100",
        "x": 1180,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "40362380a38ea4c4",
        "type": "file in",
        "z": "e2c54979685d14cb",
        "g": "97fae7a46f8ffe23",
        "name": "",
        "filename": "web/internet_spectrum/style.css",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 200,
        "wires": [
            [
                "c265fbc2639366a2"
            ]
        ]
    },
    {
        "id": "5a1f6104e1ceca1d",
        "type": "http in",
        "z": "e2c54979685d14cb",
        "g": "97fae7a46f8ffe23",
        "name": "",
        "url": "/internet_spectrum/style.css",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "40362380a38ea4c4"
            ]
        ]
    },
    {
        "id": "c265fbc2639366a2",
        "type": "change",
        "z": "e2c54979685d14cb",
        "g": "97fae7a46f8ffe23",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/css",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 200,
        "wires": [
            [
                "f7591f90facf0e0b"
            ]
        ]
    },
    {
        "id": "a96d8fa6d1a40a14",
        "type": "file in",
        "z": "e2c54979685d14cb",
        "g": "97fae7a46f8ffe23",
        "name": "",
        "filename": "web/internet_spectrum/script.js",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 280,
        "wires": [
            [
                "496ca8b3595b7b48"
            ]
        ]
    },
    {
        "id": "0cafa97494de79ac",
        "type": "http in",
        "z": "e2c54979685d14cb",
        "g": "97fae7a46f8ffe23",
        "name": "",
        "url": "/internet_spectrum/script.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "a96d8fa6d1a40a14"
            ]
        ]
    },
    {
        "id": "496ca8b3595b7b48",
        "type": "change",
        "z": "e2c54979685d14cb",
        "g": "97fae7a46f8ffe23",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/javascript",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 280,
        "wires": [
            [
                "f7591f90facf0e0b"
            ]
        ]
    },
    {
        "id": "0a1fe3cce13a2b95",
        "type": "file in",
        "z": "e2c54979685d14cb",
        "g": "97fae7a46f8ffe23",
        "name": "",
        "filename": "web/internet_spectrum/websocket.js",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "2a3dc125f08d620e"
            ]
        ]
    },
    {
        "id": "6fcf19edb84cb384",
        "type": "http in",
        "z": "e2c54979685d14cb",
        "g": "97fae7a46f8ffe23",
        "name": "",
        "url": "/internet_spectrum/websocket.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "0a1fe3cce13a2b95"
            ]
        ]
    },
    {
        "id": "2a3dc125f08d620e",
        "type": "change",
        "z": "e2c54979685d14cb",
        "g": "97fae7a46f8ffe23",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/javascript",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 340,
        "wires": [
            [
                "f7591f90facf0e0b"
            ]
        ]
    },
    {
        "id": "390ac0996bfbf3e8",
        "type": "ui_form",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "label": "Minitioune receiver",
        "group": "b774f32781d086fb",
        "order": 6,
        "width": "13",
        "height": "6",
        "options": [
            {
                "label": "ip_address",
                "value": "ip_address",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "port",
                "value": "port",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "offset",
                "value": "offset",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "rx_socket",
                "value": "rx_socket",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "lnb_volts",
                "value": "lnb_volts",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "lnb_22khz",
                "value": "lnb_22khz",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "dvb_mode",
                "value": "dvb_mode",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "wide_scan",
                "value": "wide_scan",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "low_sr",
                "value": "low_sr",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ip_address": "",
            "port": "",
            "offset": "",
            "rx_socket": "",
            "lnb_volts": "",
            "lnb_22khz": "",
            "dvb_mode": "",
            "wide_scan": "",
            "low_sr": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "6f0dfc4da4e5adba"
            ]
        ]
    },
    {
        "id": "583e05834ada403d",
        "type": "file in",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "filename": "settings/receivers.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 700,
        "y": 100,
        "wires": [
            [
                "56dc16b9e1976cab"
            ]
        ]
    },
    {
        "id": "56dc16b9e1976cab",
        "type": "function",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "add receiver",
        "func": "let receivers = JSON.parse(msg.payload);\nreceivers.push(msg.form);\nglobal.set(\"receivers\", receivers);\nmsg.payload = receivers;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 100,
        "wires": [
            [
                "1e70a3d6fd597ab5"
            ]
        ]
    },
    {
        "id": "6f0dfc4da4e5adba",
        "type": "change",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "form",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "form.type",
                "pt": "msg",
                "to": "Minitioune",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 100,
        "wires": [
            [
                "583e05834ada403d"
            ]
        ]
    },
    {
        "id": "735e31a90de36b9a",
        "type": "debug",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "add minitiouner",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 100,
        "wires": []
    },
    {
        "id": "1e70a3d6fd597ab5",
        "type": "file",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "filename": "settings/receivers.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1160,
        "y": 100,
        "wires": [
            [
                "735e31a90de36b9a",
                "8822bec48f5c42d6"
            ]
        ]
    },
    {
        "id": "d1aea45a350e8689",
        "type": "inject",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "8822bec48f5c42d6"
            ]
        ]
    },
    {
        "id": "8822bec48f5c42d6",
        "type": "file in",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "filename": "settings/receivers.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 670,
        "y": 180,
        "wires": [
            [
                "282aef0db727d395"
            ]
        ]
    },
    {
        "id": "ae1646fbdd5d8b9c",
        "type": "ui_list",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "group": "b774f32781d086fb",
        "name": "",
        "order": 6,
        "width": "26",
        "height": "6",
        "lineType": "two",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "8ebc9dd6c04d47a7"
            ]
        ]
    },
    {
        "id": "282aef0db727d395",
        "type": "function",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "create list from JSON",
        "func": "let receivers = JSON.parse(msg.payload);\nlet array = [];\nfor (let index = 0; index < receivers.length; index++) {\n    const element = receivers[index];\n    \n    let obj = {\n        \"title\": `CH${index+1} -> ${element.type} - IP: ${element.ip_address} - Port: ${element.port} - Offset: ${element.offset} kHz - Socket: ${element.rx_socket}`,\n        \"icon_name\": \"fa-podcast\"\n    }\n    array.push(obj);\n}\nmsg.payload = array;\nreturn msg;\n\n\n// payloadarray\n// Array of objects containing following properties:\n// title - title of the item,\n// description - description of the item. Optional if line type is Single-line or action type is menu,\n// menu - list of menu items (optional),\n// icon - URL of icon (optional),\n// icon_name - font icon name (optional).\n// icon_unicode - alternative to icon name - uses text characters (optional).\n// isChecked - boolean, set the item checked or on (optional).",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 180,
        "wires": [
            [
                "ae1646fbdd5d8b9c"
            ]
        ]
    },
    {
        "id": "a51c17448cbde903",
        "type": "ui_form",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "label": "Winterhill receiver",
        "group": "b774f32781d086fb",
        "order": 6,
        "width": "13",
        "height": "6",
        "options": [
            {
                "label": "ip_address",
                "value": "ip_address",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "port",
                "value": "port",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "offset",
                "value": "offset",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "rx_socket",
                "value": "rx_socket",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "lnb_volts",
                "value": "lnb_volts",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "lnb_22khz",
                "value": "lnb_22khz",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ip_address": "",
            "port": "",
            "offset": "",
            "rx_socket": "",
            "lnb_volts": "",
            "lnb_22khz": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "0d7bed971ef2d798"
            ]
        ]
    },
    {
        "id": "731a3c957fc08056",
        "type": "file in",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "filename": "settings/receivers.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 720,
        "y": 260,
        "wires": [
            [
                "4330f69a2f5fe062"
            ]
        ]
    },
    {
        "id": "4330f69a2f5fe062",
        "type": "function",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "add receiver",
        "func": "let receivers = JSON.parse(msg.payload);\nreceivers.push(msg.form);\nglobal.set(\"receivers\", receivers);\nmsg.payload = receivers;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 260,
        "wires": [
            [
                "4696f747c19341dd"
            ]
        ]
    },
    {
        "id": "0d7bed971ef2d798",
        "type": "change",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "form",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "form.type",
                "pt": "msg",
                "to": "Winterhill",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 260,
        "wires": [
            [
                "731a3c957fc08056"
            ]
        ]
    },
    {
        "id": "7409d36e4650ab84",
        "type": "debug",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "add winterhill",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 260,
        "wires": []
    },
    {
        "id": "4696f747c19341dd",
        "type": "file",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "",
        "filename": "settings/receivers.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1160,
        "y": 260,
        "wires": [
            [
                "7409d36e4650ab84",
                "8822bec48f5c42d6"
            ]
        ]
    },
    {
        "id": "8ebc9dd6c04d47a7",
        "type": "debug",
        "z": "71a32338963256e1",
        "g": "b40c8f098d8e9ccc",
        "name": "checked receivers",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 180,
        "wires": []
    },
    {
        "id": "9d1da64159907870",
        "type": "http in",
        "z": "27bb1861e8b5803b",
        "g": "850ce0dd6b054d30",
        "name": "",
        "url": "/chat",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "34ce25461d4e6d42"
            ]
        ]
    },
    {
        "id": "34ce25461d4e6d42",
        "type": "file in",
        "z": "27bb1861e8b5803b",
        "g": "850ce0dd6b054d30",
        "name": "",
        "filename": "web/chat.html",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 280,
        "y": 80,
        "wires": [
            [
                "e0101a5a9a04f1aa"
            ]
        ]
    },
    {
        "id": "e0101a5a9a04f1aa",
        "type": "http response",
        "z": "27bb1861e8b5803b",
        "g": "850ce0dd6b054d30",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "7db57965.76d468",
        "type": "ui_button",
        "z": "27bb1861e8b5803b",
        "g": "850ce0dd6b054d30",
        "name": "",
        "group": "65d91b75202c3b55",
        "order": 21,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "chat",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "chat",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 610,
        "y": 80,
        "wires": [
            [
                "ece06122.7e762"
            ]
        ]
    },
    {
        "id": "5e1f0081.6dc3c",
        "type": "ui_template",
        "z": "27bb1861e8b5803b",
        "g": "850ce0dd6b054d30",
        "group": "65d91b75202c3b55",
        "name": "window redirect",
        "order": 22,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (data == \"chat\") {\n          window.open(\"http://127.0.0.1:1880/chat\");\n        } \n        // if (data == \"GitHub\") {\n        //   //window.open(\"https://github.com/node-red\");\n        //   window.location.href = \"https://github.com/node-red\";\n        // } \n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ece06122.7e762",
        "type": "trigger",
        "z": "27bb1861e8b5803b",
        "g": "850ce0dd6b054d30",
        "name": "reset msg",
        "op1": "",
        "op2": "empty",
        "op1type": "pay",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 780,
        "y": 80,
        "wires": [
            [
                "5e1f0081.6dc3c"
            ]
        ]
    },
    {
        "id": "a8596f60466f8cf4",
        "type": "ui_switch",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "",
        "label": "AMP",
        "tooltip": "",
        "group": "7954d85ae8701623",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 690,
        "y": 600,
        "wires": [
            [
                "7dae242b8566df9b",
                "60df7c8dc6d1de55",
                "4169371e544b9666"
            ]
        ]
    },
    {
        "id": "f36ea5478cd26f4c",
        "type": "http request",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "http toggle request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 280,
        "wires": [
            [
                "8e6e379dd23ad541"
            ]
        ]
    },
    {
        "id": "4a2877dc5a808a1b",
        "type": "ui_toast",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1430,
        "y": 660,
        "wires": []
    },
    {
        "id": "8e6e379dd23ad541",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "parse tasmota http response",
        "func": "let message = msg.payload;\nlet indexOfInterest = message.indexOf(\">O\");\nlet state = message.slice(indexOfInterest + 1, indexOfInterest + 4);\nstate = state.includes('<') ? state.slice(0, -1) : state;\nmsg.button_state = state === \"ON\" ? true : false;\nmsg.payload = `Amp switched ${state}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 340,
        "wires": [
            [
                "f90b10e6825765f0"
            ]
        ]
    },
    {
        "id": "7dae242b8566df9b",
        "type": "change",
        "z": "30d0afc93dfb235a",
        "d": true,
        "g": "936b15192e58877f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "use_switch",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "2d87948c62090044",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "read tasmota settings",
        "func": "let tasmota_settings = JSON.parse(msg.payload);\nif (tasmota_settings.use_switch){\n    msg.payload = tasmota_settings;\n    let url = `${tasmota_settings.tasmota_switch_url}/?m=1&o=1`;\n    msg.url = url;\n    msg.payload = true;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 220,
        "wires": [
            [
                "f36ea5478cd26f4c"
            ]
        ]
    },
    {
        "id": "3d1df83227b48c35",
        "type": "http request",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "http state request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 170,
        "y": 340,
        "wires": [
            [
                "cf17c69c227b6825"
            ]
        ]
    },
    {
        "id": "ce64bf27f1fae6be",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "read tasmota settings",
        "func": "let tasmota_settings = JSON.parse(msg.payload);\nif (tasmota_settings.use_switch){\n    msg.payload = tasmota_settings;\n    let url = `${tasmota_settings.tasmota_switch_url}/cm?cmnd=STATUS`;\n    msg.url = url;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 280,
        "wires": [
            [
                "3d1df83227b48c35"
            ]
        ]
    },
    {
        "id": "cf17c69c227b6825",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "parse http response",
        "func": "let tasmota_state = JSON.parse(msg.payload);\nif(tasmota_state.Status.Power === 1){\n    msg.payload = true;\n    return msg;\n}\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 400,
        "wires": [
            [
                "e4b9db07aee76ef2",
                "a8596f60466f8cf4"
            ]
        ]
    },
    {
        "id": "511e874b9e79d9c1",
        "type": "inject",
        "z": "30d0afc93dfb235a",
        "d": true,
        "g": "f6c11774649f8d00",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 60,
        "wires": [
            [
                "eef90d12fe67652d"
            ]
        ]
    },
    {
        "id": "f90b10e6825765f0",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "set current toggle state",
        "func": "let state = msg.button_state\nmsg.payload = state;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 400,
        "wires": [
            [
                "a8596f60466f8cf4"
            ]
        ]
    },
    {
        "id": "e4b9db07aee76ef2",
        "type": "debug",
        "z": "30d0afc93dfb235a",
        "d": true,
        "g": "4da866f299df009c",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 460,
        "wires": []
    },
    {
        "id": "eef90d12fe67652d",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "settings file path",
        "func": "msg.filename = \"settings\\\\dashboard.json\";\nif (global.get(\"platform\") === \"linux\") msg.filename = \"settings/dashboard.json\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 160,
        "wires": [
            [
                "70dc135bb18e2bd6"
            ]
        ]
    },
    {
        "id": "70dc135bb18e2bd6",
        "type": "file in",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 140,
        "y": 220,
        "wires": [
            [
                "ce64bf27f1fae6be"
            ]
        ]
    },
    {
        "id": "60df7c8dc6d1de55",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "d": true,
        "g": "f6c11774649f8d00",
        "name": "settings file path",
        "func": "if (global.get(\"platform\") === \"linux\") {\n    msg.filename = \"settings/dashboard.json\";\n    return msg;\n}\nmsg.filename = \"settings\\\\dashboard.json\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 60,
        "wires": [
            [
                "caa457b0361bf0ba"
            ]
        ]
    },
    {
        "id": "caa457b0361bf0ba",
        "type": "file in",
        "z": "30d0afc93dfb235a",
        "g": "4da866f299df009c",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 620,
        "y": 160,
        "wires": [
            [
                "2d87948c62090044"
            ]
        ]
    },
    {
        "id": "4169371e544b9666",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "send mqtt message to broker to toggle switch",
        "func": "msg.topic = `cmnd/${global.get(\"tasmota_mqtt_topic\")}/POWER`;\nmsg.state = msg.payload;\nmsg.payload = \"toggle\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 600,
        "wires": [
            [
                "857224de9710110f",
                "fabd30d9f5135abd"
            ]
        ]
    },
    {
        "id": "857224de9710110f",
        "type": "mqtt out",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "064bde8eca01e996",
        "x": 1230,
        "y": 600,
        "wires": []
    },
    {
        "id": "449f2a69fa24e7fd",
        "type": "mqtt in",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "064bde8eca01e996",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "a8596f60466f8cf4",
                "d625fe7265cbfada"
            ]
        ]
    },
    {
        "id": "ff147eec327f33fe",
        "type": "inject",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "bc7c3ea6788d2b58"
            ]
        ]
    },
    {
        "id": "bc7c3ea6788d2b58",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "power status",
        "func": "msg.action = \"subscribe\"\nmsg.topic = `stat/${global.get(\"tasmota_mqtt_topic\")}/POWER`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 600,
        "wires": [
            [
                "449f2a69fa24e7fd"
            ]
        ]
    },
    {
        "id": "fabd30d9f5135abd",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "notification",
        "func": "let payload = msg.state;\nmsg.topic = \"Tasmota switch\"\nmsg.payload = `Amp switched ${payload}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 660,
        "wires": [
            [
                "4a2877dc5a808a1b"
            ]
        ]
    },
    {
        "id": "d625fe7265cbfada",
        "type": "debug",
        "z": "30d0afc93dfb235a",
        "d": true,
        "g": "936b15192e58877f",
        "name": "Tasmota status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 680,
        "wires": []
    },
    {
        "id": "29a3c6a207d493f9",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "get state",
        "func": "msg.topic = `cmnd/${global.get(\"tasmota_mqtt_topic\")}/POWER`;\nmsg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 660,
        "wires": [
            [
                "b7d0059588d03318"
            ]
        ]
    },
    {
        "id": "b7d0059588d03318",
        "type": "mqtt out",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "064bde8eca01e996",
        "x": 430,
        "y": 660,
        "wires": []
    },
    {
        "id": "33b81b6ee3d763f8",
        "type": "inject",
        "z": "30d0afc93dfb235a",
        "g": "936b15192e58877f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "29a3c6a207d493f9"
            ]
        ]
    },
    {
        "id": "97e47e6f443015bd",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "name": "settings file path",
        "func": "msg.filename = \"settings\\\\dashboard.json\";\nif (global.get(\"platform\") === \"linux\") msg.filename = \"settings/dashboard.json\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 140,
        "wires": [
            [
                "f391b6fe49265eb0"
            ]
        ]
    },
    {
        "id": "f391b6fe49265eb0",
        "type": "file in",
        "z": "30d0afc93dfb235a",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 960,
        "y": 200,
        "wires": [
            [
                "0462039e80c24319"
            ]
        ]
    },
    {
        "id": "0462039e80c24319",
        "type": "function",
        "z": "30d0afc93dfb235a",
        "name": "read tasmota settings",
        "func": "let tasmota_settings = JSON.parse(msg.payload);\nif (tasmota_settings.tasmota_mqtt_topic){\n    global.set(\"tasmota_mqtt_topic\", tasmota_settings.tasmota_mqtt_topic)\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "df652e3147152444",
        "type": "inject",
        "z": "30d0afc93dfb235a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 970,
        "y": 80,
        "wires": [
            [
                "97e47e6f443015bd"
            ]
        ]
    }
]