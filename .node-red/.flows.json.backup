[
    {
        "id": "2ec6a7ddfe0cd173",
        "type": "tab",
        "label": "DATV Simple V2.3",
        "disabled": false,
        "info": " - V1.something\r\n   - It hath the spectrum\r\n   - I clickith and it tunith\r\n   - I clickith and it setith stuff\r\n   - more control\r\n   - refactor code\r\n   - we no longer need all the files...\r\n   - restarting pluto sets strange settings.\r\n   - So we have explicitly set certain mqtt command in a certain order\r\n   - Rx and Tx offsets\r\n   - CTRL click tunes longmynd\r\n   - Fix bugs for CTRL click\r\n   - rx has seperate endpoint on API\r\n   - uplink correction\r\n   - Channel busy, you shall not PASS!!\r\n   - add device config, \r\n   - fixed longmynd frequency and sr messages we send in KHz and KS\r\n   - spectrum watchdog only watches you when transmitting . . .\r\n   - flow dependency install script `.\\install_dependencies.bat` RUN IT!!!\r\n   - Remove FECMODE from config-tx.ini\r\n   - Set it for each static profile 1-7\r\n   - Now variable fec set lowest 1/4 for qpsk and doesn't recalculate\r\n   - Will add support for 8psk etc.\r\n   - Fixed state injectors\r\n     - restores state after pluto reboot  \r\n   - If Restore state is Orange, PRESS IT!\r\n   - Channel calibration.\r\n     - [How To](https://youtu.be/-ZdQOVg26_0)\r\n - V1.9.9\r\n   - TS analysis - just for checking that TS is okay... \r\n     - Once tuned to signal, press TS analyse to display TS info(currently just callsign pop up)...\r\n     - There is room for more information gathering here as ffpbrobe is very verbose.\r\n   - Spectrum tuning bar has got a memory\r\n   - Constellation rate calculation changes, as per DL5OCD_Michael\r\n   - Tunes minitioune software by CTRL+ALT clicking\r\n   - bugfixes\r\n   - Consume Open Tuner websocket status, not useful atm...\r\n   - Prep for GUI setup, we can enumerate all current audio and video devices using ffmpeg\r\n   - Spectrum and band color pickers => ALL THE COLOURS OF THE RAINBOW!\r\n   - latest ffmpeg build\r\n   - node red task scheduler xml, import with windows task scheduler to have it start on logon\r\n - V1.993-c(chat)\r\n   - Minitioune spawn routine improvements.\r\n     - killing node red does not kill it. . .\r\n     - instead of spawing each time we deploy changes...\r\n   - Rx top tune bar\r\n   - Tx tune bar\r\n   - Spectrum has better memory...\r\n   - Bitrate calculation changes as per DL5OCD\r\n     - Changed the function to use lookup tables\r\n   - ffplay switch, off by default.\r\n   - rebuild ffmpeg, with vvc...\r\n   - Chat added\r\n     - This prompted a reshuffle of GUI\r\n   - Planning\r\n - V1.994\r\n   - ffplay controls\r\n    - Image size\r\n    - Start up volume\r\n    - on top ? \r\n    - tx clicky bug. . .\r\n - V1.995\r\n   - calculations\r\n - V1.996\r\n   - NCO offset after SR change bug workaround\r\n   - bitrate calculations\r\n   - Beacon RX capability \r\n   - use Minitioune toggle\r\n - V2.0-beta\r\n   - TSRate calculations, be gone, used the pluto's expected TS bitrate `/device/tx/dvbs2/ts/bitrate`\r\n     - This makes the calculations very accurate\r\n       - This would be part of profile settings in future, how video rates are calculated or set\r\n   - Setup from GUI(bye config-tx.ini) \r\n     - almost there\r\n   - Try and remove all DATV-NotSoEasy files, if its an ini file its a setting...\r\n     - almost there\r\n   - No more presets, rework in progress.\r\n - V2.1\r\n   - VVC calculation adjustments\r\n   - TS rate divider should be 1000 its already in bytes...\r\n   - Track ffplay windows position\r\n   - Orgainizing things\r\n   - chagning frame changes FEC table entries\r\n     - short frame and 9/10 doesn't work\r\n     - FEC table updates based on `modulation` and `frame` type\r\n   - We have completely removed DATV-NotSoEasy\r\n     - removed static profile loading\r\n     - removed `config-tx.ini` and `DATV-TX.bat`\r\n   - Profile saver and loading\r\n     - click `SAVER` and the profile you'd like to update.\r\n     - Only saves settings related to ffmpeg\r\n   - Now we need to add input boxes for all the things we put in the `ffmpeg string builder` function\r\n - V2.2 \r\n   - Bundled exe\r\n   - New ffmpeg build `03-Nov-23`\r\n - V2.3\r\n  - Includes shared build as well ffmpeg_\r\n  - removed libx265 bench video\r\n  - call ffmpeg directly\r\n",
        "env": []
    },
    {
        "id": "ba42e703170bee84",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Pluto and callsign setup",
        "style": {
            "label": true
        },
        "nodes": [
            "644c4e9fd6d1aafc",
            "33b1db5a2a8af09d",
            "3729f57de4a75fbf",
            "b56e0ed724bfefc0",
            "0c72fe59acc5f30e",
            "6650408d269637c4",
            "0dc39dc2f82350ce",
            "f5a47dd605642e35"
        ],
        "x": 34,
        "y": 39,
        "w": 972,
        "h": 162
    },
    {
        "id": "28611a179255d92b",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Spectrum ",
        "style": {
            "label": true,
            "color": "#001f60",
            "fill": "#92d04f"
        },
        "nodes": [
            "b115e827f5958c33",
            "dcae1df31f4c48c6",
            "2d8d13aaf93f40dc",
            "2fccdd25faa09e10",
            "542c8a5bb4913303",
            "5a74b55c01f09bf7",
            "df0fb204fd14a618",
            "31f91a40fbe9635c",
            "24353fa1e84c365f",
            "0e2c3433f42c932c",
            "4de0745ac50ff8b8",
            "185cc616489b2615"
        ],
        "x": 34,
        "y": 219,
        "w": 1078,
        "h": 722
    },
    {
        "id": "4bfefaeb7f82f4c6",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "settings restorer",
        "style": {
            "label": true,
            "fill": "#ffff00"
        },
        "nodes": [
            "6b0cd6504e13d973",
            "7d6077cea86f2378",
            "b9e877b123e7e841",
            "30312ad9e7c5689b",
            "b800a9f107cb3124",
            "2b527baf8d8b1450",
            "a5d3ec26a3634e1e",
            "8c7733a45d32bf17",
            "4d60c65180806536",
            "cd7a771d4df1122f"
        ],
        "x": 1214,
        "y": 539,
        "w": 692,
        "h": 282
    },
    {
        "id": "92c95af69a0592d1",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "minitiouner manager (CTRL + CLICK)",
        "style": {
            "label": true
        },
        "nodes": [
            "93e49a0d26636e17",
            "274b304d8404d31e",
            "3a1ea47d1bb87edc",
            "25f28cc77302135e",
            "d7eb35aa7c9a4908",
            "58a19d39b1eb3028",
            "748c39ac026e286f",
            "8c74bea29b3244b0",
            "cdb49e4080a5ecb2",
            "865c9cd7fad69b04",
            "f5725b8f8885fb91",
            "c8e4e5eb867b6e88",
            "048ae9d864757a44",
            "7daf6fdd23e69a4c",
            "edf957ba7edd18f0",
            "f5b8169559eb4b73",
            "a21fb06793441a8f",
            "33ec5c8c097de479",
            "e116baee5b34f457",
            "34a5dcd51ab8d855",
            "517a7337244c67a7",
            "03deb776667356fc"
        ],
        "x": 1474,
        "y": 2559,
        "w": 2392,
        "h": 362
    },
    {
        "id": "eb1929e7f191e020",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Minitioune path",
        "style": {
            "label": true
        },
        "nodes": [
            "fa64203cbbfc748d",
            "f59601c8ef54fb30",
            "9077d20ca65ab2fd",
            "f6a666d0271a5d24",
            "63bd7ee216c6cf79"
        ],
        "x": 4234,
        "y": 919,
        "w": 1192,
        "h": 82
    },
    {
        "id": "0514d7b9722f644b",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "TS stream address",
        "style": {
            "label": true
        },
        "nodes": [
            "1aa57bcff3051b25",
            "d0d8193cbbe6f9f6",
            "3b2bfc1de615d1c2",
            "e48b23e1d46a182a",
            "1b33b2ee0e91bf0a"
        ],
        "x": 4234,
        "y": 719,
        "w": 1192,
        "h": 82
    },
    {
        "id": "faddbd496d5afa18",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Minitiouner UDP control",
        "style": {
            "label": true
        },
        "nodes": [
            "678fdf9668503af2",
            "1c92b6bf73c98823",
            "f410cc2d0716c94e",
            "42fadc716a7bbdd3",
            "95edb2da87d8257d"
        ],
        "x": 4234,
        "y": 819,
        "w": 1192,
        "h": 82
    },
    {
        "id": "6230aabbd2e27dba",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "V2 Stuff - Setup related",
        "style": {
            "label": true
        },
        "nodes": [
            "ce7363465aea09c2",
            "81e222ea9f35567c",
            "9d36e0103e48d0eb",
            "6c240bebc70161fa",
            "92680e051846903d",
            "061c529da56f288b",
            "d5144c0538d61e55",
            "6cdbc7e33d7543c1",
            "912db50690e71312",
            "52589d675ecb5bd3",
            "2d69c56629fd6ada",
            "3c7d7c35ead08295",
            "40fa6e863c8479b7",
            "3d8ee5b781b696ce"
        ],
        "x": 4014,
        "y": 479,
        "w": 1332,
        "h": 222
    },
    {
        "id": "f6218c30fc4ec8b7",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "TS analyse with ffprobe",
        "style": {
            "label": true
        },
        "nodes": [
            "6575451e79e0ad67",
            "ef4d188e14a5bed7",
            "de0df3db418f176f",
            "b61cc3d9e4fb5593",
            "a773a2941ec99d3d",
            "92f5f62ed5cadc7c",
            "428a0fc47da7621b"
        ],
        "x": 4234,
        "y": 351.5,
        "w": 1192,
        "h": 149.5
    },
    {
        "id": "4b15878090b5548b",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Channel calibration",
        "style": {
            "label": true
        },
        "nodes": [
            "40caf32a1fc66903",
            "f34bfe124eab12e8",
            "78db13f139016718",
            "7aa0b41ed418f215",
            "eb77e66d5c0acdae",
            "cffbb4b1eb45b8da",
            "538b8437c0ff15ad",
            "fca0dc49e0dbc8c8",
            "edea5b446673c7e5",
            "778857993c3190e4",
            "8879551bc103b8c4",
            "6c953890d626accb",
            "09f981f156e98728",
            "2e0709eeb3596e1a",
            "231152bfc003a87e"
        ],
        "x": 4234,
        "y": 59,
        "w": 1012,
        "h": 262
    },
    {
        "id": "1f5722b7aff1a710",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Profile Setup",
        "style": {
            "stroke": "#000000",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "f9186ed78accdb6c",
            "a0addd449f41ee70",
            "3c2665b335deadcc",
            "142bd58e14cabe24",
            "034d4cfc3008e95a",
            "1bb882ca67278b69",
            "6e2b3c9e08662125",
            "ae40a9e5bdd0d113",
            "5989fbe4c1133db2",
            "b003500f8ea3ffe1",
            "d2a7c63d9b2fe699",
            "320ab26158363e57",
            "9c6e205117c83338",
            "6bfbf0101b2cd3a4",
            "34feacf8cac79e5e",
            "8c06bae5f257a948",
            "072a53bc4325b8e2",
            "da44a9637b5774a0",
            "3db47b10f2ad0660",
            "9afe5b50e0c2e439",
            "3eb70786a69e6c70",
            "f1c89523da4ca9da",
            "1411feb53b899df2"
        ],
        "x": 2034,
        "y": 239,
        "w": 1232,
        "h": 562
    },
    {
        "id": "78b656eeda23dc5a",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "UI variable elements",
        "style": {
            "label": true
        },
        "nodes": [
            "c140f8f622e33238",
            "b2786302ea5b87d8",
            "8105dd1d410bdd4b",
            "43c746e7299a60f3",
            "23f54550ba5b6a79",
            "5d929a20d665af8d",
            "332cd73b70ec7dca",
            "b62a3f484010816e",
            "9d65ce1e866729e6",
            "8d58e07463dad267"
        ],
        "x": 1294,
        "y": 219,
        "w": 552,
        "h": 282
    },
    {
        "id": "9f151e324008585b",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Device settings loader",
        "style": {
            "label": true
        },
        "nodes": [
            "dc87a28301ce8d90",
            "d88296547a44f159",
            "3b59a3e0f9422294",
            "a49d494221eac856"
        ],
        "x": 3454,
        "y": 39,
        "w": 712,
        "h": 82
    },
    {
        "id": "359e81623396a0cb",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Device settings saver",
        "style": {
            "label": true
        },
        "nodes": [
            "3208e4f72b88b92e",
            "0c5e1df9f4cacd67",
            "c708b213a5701d8c",
            "99a4c83c076987df",
            "c76b9f49508d0e3f"
        ],
        "x": 2434,
        "y": 39,
        "w": 992,
        "h": 142
    },
    {
        "id": "1473030260740438",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Bitrate calculator",
        "style": {
            "label": true
        },
        "nodes": [
            "dd4535e1d6b65679",
            "ac482a3670a2a148",
            "8c336280fd0fcc92",
            "8751a0dd93a8ed60",
            "d791940d6fb69cd4",
            "1827c9f76c07664e"
        ],
        "x": 1154,
        "y": 39,
        "w": 1112,
        "h": 162
    },
    {
        "id": "da57b5447aa16728",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "a9ad9994f8c5db3b",
            "ec7f7985e8da8ed2",
            "9e5aaf4953afd279"
        ],
        "x": 3454,
        "y": 139,
        "w": 412,
        "h": 122
    },
    {
        "id": "158a8e642f8da366",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "ffplay settings",
        "style": {
            "label": true
        },
        "nodes": [
            "0566516b8c2f5f60",
            "4823c6eed9e03e46",
            "e29b0f596d18b958",
            "c99bca3dafb85e2c",
            "0b68cbbed95acffe",
            "ade9869b5330a585",
            "e7685ca77d90f76f",
            "17d14c187e03e78d",
            "ce957a7adc0b6602",
            "a7b99958c4999cf0",
            "cb3c608d488f8a50",
            "7a37be749116f373",
            "5aec87e336f5bf99",
            "cfdd9fffb83031de",
            "de67b561ba5031e9"
        ],
        "x": 5034,
        "y": 2039,
        "w": 592,
        "h": 402
    },
    {
        "id": "05f20235a9c45346",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "track ffplay windows position",
        "style": {
            "label": true,
            "fill": "#ffcf3f"
        },
        "nodes": [
            "26345a392c75d93d",
            "2a2a4d68c3558cc9",
            "152b6c29f84ec7c6"
        ],
        "x": 3894,
        "y": 2591.5,
        "w": 712,
        "h": 97
    },
    {
        "id": "e6bc3a23f88991a3",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "tools",
        "style": {
            "label": true,
            "fill": "#ffcf3f"
        },
        "nodes": [
            "0d83df21a3badfd8",
            "ba28f83345465e97",
            "e7122ff60e30d850",
            "bd7080b9d634eebf"
        ],
        "x": 3774,
        "y": 751.5,
        "w": 372,
        "h": 157
    },
    {
        "id": "72ddf00d98862ef3",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "ffmpeg managers",
        "style": {
            "label": true
        },
        "nodes": [
            "023820f309b020da",
            "c4c1592e68a08ac2",
            "5c8e87753e4ad083",
            "923832cf30d7070e",
            "4d9019e6505648e5",
            "0c94d661261c1f6e",
            "c326e0457b39d881",
            "f79b05ded58d1157",
            "ae8f84a8936bf21e",
            "378dce373fcfc379",
            "918410b673d9453b",
            "6e64d146147821e7",
            "71e94c828318f918",
            "c6afd7e65035c339",
            "e4fe047c88b9b919",
            "7fb0cafd2acd88b7"
        ],
        "x": 3794,
        "y": 2019,
        "w": 1192,
        "h": 422
    },
    {
        "id": "78f7e24f56d510ed",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "Profiles",
        "style": {
            "label": true,
            "fill": "#0070c0",
            "fill-opacity": "1"
        },
        "nodes": [
            "6bdd18a478266cdb",
            "e41f78ecb41096ea",
            "26d4847d4e66ef33",
            "b12e26636bc4a755",
            "4ecaf72037fc5448",
            "321917da5c241be6",
            "37c0f70c56da77c5",
            "863b303484773cde",
            "6f5791e469edab55",
            "932baa0f165b71a2",
            "dd252f1ac7e17f8a",
            "6c2ed6b6c40e42db",
            "29f59051e6cbe148",
            "380f24164e357a8f",
            "66d128c2a339f3cb",
            "aed175dfbecd5c12",
            "a6736166225853ff",
            "0024149327ace021",
            "870adb347b148820",
            "da2d9235ea59d48e",
            "0e9c3a491a2a469e",
            "59cffb16faf16e25",
            "32d2cf35c427d5be",
            "770f2093391eb417",
            "9dc24cfa530ed99e",
            "475f01a383d6b75e",
            "3e225268e88814d4",
            "86a53ceb1364b3e0",
            "fc3424b338c6f01a",
            "e733dc0c81143d51",
            "181bc2bec72e1d2d",
            "e5b0fa3224166063"
        ],
        "x": 3834,
        "y": 1079,
        "w": 2032,
        "h": 402
    },
    {
        "id": "d320c7a134a3a36a",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "MQTT RX",
        "style": {
            "label": true,
            "fill": "#6f2fa0"
        },
        "nodes": [
            "36a9e71117a34327",
            "babe629c1afb5e8b",
            "45967ab8c3bd9a21",
            "74fb79f38c7d1d72",
            "d2b51c2f7d254def",
            "18d422fe182d6186",
            "306b57e47411d35c",
            "23773127332c2b1f",
            "9aa8ef50bbbe8e2d",
            "d26972d34559fd63",
            "a27d9eec9ce16ab7",
            "b601d6596401a754",
            "b6d03834b636d44d",
            "9cea687107707a6b",
            "50bf46056b71ec3a",
            "5d39969ea562b92d",
            "18b3a285bc3b304a",
            "59e507f64ad42e32",
            "4ddefda4dc462586",
            "a3b043862df5d1c9",
            "203d8eabee6242e7",
            "33155f6018ceeffa",
            "7a4a8d639646cff4",
            "96d158d7fdc5ee78",
            "746af9f95f7438cd",
            "9fb89f4342f8baf0",
            "e2ddf0eaa1468069",
            "91114b46796f2205",
            "aeded232cbae2ef0",
            "4dc0d6bc0972a150",
            "8bcc3bb6537a078d",
            "56ad120991eb3c83",
            "2e28b17c64c14184",
            "04d27b36a3ee9934",
            "76bed5f0ebc81a4c",
            "25a924b7dc1d4576",
            "c25d1cacc8057d1d",
            "0b6d33db8fc071c9",
            "ac88fa94a49129ec",
            "347c8041af1a52e0",
            "92bdb03cfb54e314",
            "54cbda477035a37f",
            "295347c7270ee5f9",
            "689b33376ddc8653",
            "4b23c7a819f12eb7",
            "e0f5c4a53f48610b",
            "8ec0b8acdb25a6b7",
            "1cc9bf09772f06d3",
            "54e338fa6a48fd5b",
            "45ea934ddc9664a3",
            "12de00c45ec62557",
            "ae61c1e19f8634d0",
            "8a6e91746db5e484",
            "31eb287a0ca0a45c",
            "508bccc9de4506fc",
            "b733d75a1c79f1a2",
            "c8042db5402565df",
            "8e34088eda2b7263",
            "e1cd38d2156ae7ba",
            "2acfb18cb9db9a02",
            "0813517cbc9b99f3",
            "c4f36ff7105c2dd1",
            "de949c9780005117",
            "c44d0cb54ec5e706",
            "4fd321bd9fa719f3",
            "f60d5eacebf59c8f",
            "f1d972d20ef54cf2",
            "ef310c8290b45f2f",
            "728cb5ecbddc04f0",
            "b22449c1178f10d2",
            "9cb8fc791809bfd9",
            "32e18f58d4f086f8",
            "1decf932a1bf2fcd",
            "ba4a435e3fbcd377"
        ],
        "x": 34,
        "y": 959,
        "w": 1152,
        "h": 1622
    },
    {
        "id": "c927282dfd987c70",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "UI inputs",
        "style": {
            "fill": "#0070c0",
            "label": true
        },
        "nodes": [
            "462c1bee49073de7",
            "5f71534b6c02e324",
            "f29b8d8eb8441fde",
            "508ff50f2a470219",
            "f0c209e940860820",
            "dffe1e50bcaeb0a5",
            "be4a04a5a054f988",
            "2e677684d13ac6e0",
            "aa6d588a480f161c",
            "ddf60892397fbc68",
            "1969a0cddc042f2e",
            "f38c438a231661c6",
            "ce96de0f7dba91c5",
            "16a3685e614e0995",
            "0d6f171d50f0a0c3",
            "33a0bcca85522580",
            "b4aff87862b89a39",
            "edd3123535a89e2c",
            "bdfdc40f3409d5eb",
            "2d16a7785c1bb3dd",
            "b019a1fc7eadfd0f",
            "45b5b704879d30fe",
            "dc1c3fa4fcdb0856",
            "a010bf6559579ac1",
            "70cb26f62de94a5d",
            "93d8b2c69bdc7792"
        ],
        "x": 2274,
        "y": 919,
        "w": 232,
        "h": 1582
    },
    {
        "id": "5ed3848da82bcc9a",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "state restorers",
        "style": {
            "fill": "#92d04f",
            "label": true,
            "label-position": "n"
        },
        "nodes": [
            "8fc50c918238bbb1",
            "86a189cf7830c88d",
            "43ea11b6033b9ecf",
            "f3b56d13d111f207",
            "30575829e5293823",
            "50469be080414712",
            "7806bcad704424dd",
            "3ea225876900d6cc",
            "04c8e605a02922e7",
            "5256f916f7a707b7",
            "0116ed63e32c47c2",
            "88e74c15960c22df",
            "475c87a434b0f7e6",
            "271147b0966b0076",
            "570136a8608a39a6",
            "5f939f9512d4ba6e",
            "d09cacf11e30c19d",
            "5937fb0a3c880ee7",
            "35c6cd1a805aeca5",
            "4e9c1f576e08279b",
            "204d7697c1384266",
            "d233942edd1dc8df"
        ],
        "x": 1874,
        "y": 919,
        "w": 372,
        "h": 1582
    },
    {
        "id": "44bb8f59b40e58cf",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "name": "MQTT TX",
        "style": {
            "label": true,
            "fill": "#92d04f",
            "label-position": "n"
        },
        "nodes": [
            "faf5a12234cf3d6a",
            "645cda7b921399b2",
            "64a9de4a4bd4dab6",
            "1b201451fae7fae6",
            "d57c9c3c32e5a58b",
            "7f859a7a7ee27404",
            "68e079e44b9dd5c2",
            "5af92414e3f29873",
            "524de1980547eaea",
            "5d8a44d8d3dfd931",
            "33dc958065cdada2",
            "e91e846502f35c90",
            "14e5a286770d3cd0",
            "cec2f56be1fccf51",
            "152082051caa1d1d",
            "88c17ad9f892b06d",
            "762e2c70acd9ebe0",
            "b1fb472a0a5e24a7",
            "37b18a222ae30d52",
            "b6da9101dce07fd1",
            "807128449158f2eb",
            "f65818d390a71152",
            "9695655b0a719b4a",
            "20fcf5f8b61db48f",
            "89b95ad3b6453036",
            "edf4a8f5daf0b0ab",
            "af45e1bfc3e75ecb",
            "aa4a256618f7c4a6",
            "55bca069bdb08ee7",
            "c5ceed661f8529ce",
            "0c74362e749bcdc4",
            "4a50af4869a33baa",
            "b1b6fc76c723e0f1",
            "7b06e3153449eb9a",
            "d533bf0f097fedc4",
            "8a16f1f5708afd9e"
        ],
        "x": 2534,
        "y": 919,
        "w": 1172,
        "h": 1582
    },
    {
        "id": "185cc616489b2615",
        "type": "group",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "name": "Radio HTTP API",
        "style": {
            "label": true
        },
        "nodes": [
            "117e420d4df518b1",
            "2a5a3cc2d63b2942",
            "6e96b284f2323a85",
            "ec3c6b8075f4f83f",
            "6154ee8d719adfbd",
            "7d18f3e7511a4c0f",
            "11531a3595ef0f5a",
            "e56ed07756258705",
            "8764be884d895f57",
            "2c6310aae8f397fd",
            "b828f6a6.47d708",
            "1052941d.efad6c",
            "64b76a53a5576a2f",
            "63698f5f30341a43",
            "e1eb05d953534ef4",
            "22865d9dc7aa2c4c",
            "9917109abc4fd1ea",
            "4781b40508c8aa40",
            "515e9264fb253fbc",
            "2f37f6fa43572da4",
            "3d529b46ee563149"
        ],
        "x": 74,
        "y": 379,
        "w": 1012,
        "h": 482
    },
    {
        "id": "16855981254e7e93",
        "type": "mqtt-broker",
        "name": "Pluto_tuin",
        "broker": "192.168.2.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9b3296db2e0c849f",
        "type": "ui_tab",
        "name": "Transmission and profiles",
        "icon": "fa-fire",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b9e32bd91ff08aa2",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Custom Dark",
                "default": "#4B7930",
                "baseColor": "#2666a1",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#2666a1",
                    "value": "#2666a1",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#2666a1",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#343a40",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#418dd2",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#343a40",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#2666a1",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#343a40",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "DATV-Simple V2.3",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9ed1d9a126995072",
        "type": "ui_group",
        "name": "Radio controls",
        "tab": "9b3296db2e0c849f",
        "order": 8,
        "disp": false,
        "width": "19",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4f22c4dbc8bc16dd",
        "type": "ui_group",
        "name": "profile settings bar",
        "tab": "9b3296db2e0c849f",
        "order": 7,
        "disp": false,
        "width": "32",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e8adab232b1d4dce",
        "type": "ui_group",
        "name": "Buffer",
        "tab": "3fcae860e82945fc",
        "order": 1,
        "disp": false,
        "width": 21,
        "collapse": false,
        "className": ""
    },
    {
        "id": "235bdacf6041386f",
        "type": "ui_group",
        "name": "Spectrum window",
        "tab": "9b3296db2e0c849f",
        "order": 5,
        "disp": false,
        "width": "32",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bc7afc94660c6b76",
        "type": "ui_group",
        "name": "Pluto top left status",
        "tab": "9b3296db2e0c849f",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "806d30964cf41d9d",
        "type": "ui_group",
        "name": "Pluto top right status",
        "tab": "9b3296db2e0c849f",
        "order": 2,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3fcae860e82945fc",
        "type": "ui_tab",
        "name": "Stats and settings",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d05f8a2e89878bf9",
        "type": "mqtt-broker",
        "name": "Pluto_tuin",
        "broker": "192.168.1.111",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d2ba6f390d31ae4c",
        "type": "ui_group",
        "name": "RX",
        "tab": "4cac2351dd0ee0d3",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "84e1a77ae884007b",
        "type": "ui_group",
        "name": "TX",
        "tab": "4cac2351dd0ee0d3",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4cac2351dd0ee0d3",
        "type": "ui_tab",
        "name": "Tab 3",
        "icon": "dashboard",
        "order": 3
    },
    {
        "id": "6140f866127cd620",
        "type": "ui_group",
        "name": "Rx buttons",
        "tab": "9b3296db2e0c849f",
        "order": 3,
        "disp": false,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bff8eab5758dfec4",
        "type": "websocket-listener",
        "path": "/",
        "wholemsg": "false"
    },
    {
        "id": "3e6a59708bbf6e6c",
        "type": "websocket-client",
        "path": "ws://127.0.0.1:9090/",
        "tls": "",
        "wholemsg": "false",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "da031ac17a307778",
        "type": "ui_group",
        "name": "preset bar",
        "tab": "9b3296db2e0c849f",
        "order": 4,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d2e4abefdc42e427",
        "type": "ui_group",
        "name": "Chat",
        "tab": "9b3296db2e0c849f",
        "order": 10,
        "disp": false,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7954d85ae8701623",
        "type": "ui_group",
        "name": "Profile info bar",
        "tab": "9b3296db2e0c849f",
        "order": 6,
        "disp": false,
        "width": "32",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2275ce4aba6ae57e",
        "type": "ui_group",
        "name": "mnitiouner",
        "tab": "3fcae860e82945fc",
        "order": 2,
        "disp": false,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b9bffb3cd2c084ad",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "e8adab232b1d4dce",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "50ed1ebafdae4490",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "e8adab232b1d4dce",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "efb38ee96ec62cca",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "e8adab232b1d4dce",
        "order": 10,
        "width": 21,
        "height": 1
    },
    {
        "id": "73175ccad5bbdfba",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "e8adab232b1d4dce",
        "order": 12,
        "width": 18,
        "height": 1
    },
    {
        "id": "62c4e0cdb5acd075",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "ef74ce46a469746e",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "4360fdb1f88f5697",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 38,
        "width": "4",
        "height": "1"
    },
    {
        "id": "87b7561050ce40a9",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "833f0fd48ff3b6ad",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "0f99334ba7c73d6e",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "2708f4ae08a79029",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "a8a6a06de2fd5bbd",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "f9edff00db35e27d",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "665027bbbf524e20",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "76f479a35d36d305",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "95684ac48753e400",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "9c5a4f77bacbda3a",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 40,
        "width": 1,
        "height": 1
    },
    {
        "id": "48e5fd3fd03ccf4a",
        "type": "ui_spacer",
        "z": "2ec6a7ddfe0cd173",
        "name": "spacer",
        "group": "9ed1d9a126995072",
        "order": 45,
        "width": "16",
        "height": "1"
    },
    {
        "id": "36a9e71117a34327",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1720,
        "wires": [
            [
                "74fb79f38c7d1d72",
                "a27d9eec9ce16ab7"
            ]
        ]
    },
    {
        "id": "babe629c1afb5e8b",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "9ed1d9a126995072",
        "order": 3,
        "width": 7,
        "height": 1,
        "name": "Frequency",
        "label": "<font size=3>Frequency",
        "format": "<font size=3>{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Verdana,Verdana,Geneva,sans-serif",
        "fontSize": "17",
        "color": "#ffffff",
        "x": 730,
        "y": 1520,
        "wires": []
    },
    {
        "id": "45967ab8c3bd9a21",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1480,
        "wires": [
            [
                "babe629c1afb5e8b",
                "8ec0b8acdb25a6b7"
            ]
        ]
    },
    {
        "id": "74fb79f38c7d1d72",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "806d30964cf41d9d",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Muted ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 710,
        "y": 1760,
        "wires": []
    },
    {
        "id": "d2b51c2f7d254def",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1400,
        "wires": [
            [
                "54cbda477035a37f"
            ]
        ]
    },
    {
        "id": "18d422fe182d6186",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "9ed1d9a126995072",
        "order": 28,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Gain",
        "format": "{{msg.payload}} dB",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 710,
        "y": 1440,
        "wires": []
    },
    {
        "id": "306b57e47411d35c",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1640,
        "wires": [
            [
                "54e338fa6a48fd5b"
            ]
        ]
    },
    {
        "id": "23773127332c2b1f",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1560,
        "wires": [
            [
                "1cc9bf09772f06d3"
            ]
        ]
    },
    {
        "id": "9aa8ef50bbbe8e2d",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1240,
        "wires": [
            [
                "e0f5c4a53f48610b",
                "f60d5eacebf59c8f",
                "ddf60892397fbc68"
            ]
        ]
    },
    {
        "id": "d26972d34559fd63",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1320,
        "wires": [
            [
                "295347c7270ee5f9"
            ]
        ]
    },
    {
        "id": "a27d9eec9ce16ab7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: mute",
        "func": "let mute = msg.payload;\nif (mute !== global.get(\"mute\") && global.get(\"device.tx.stream.mode\") !== \"pass\") {\n    global.set(\"mute\", mute)\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1720,
        "wires": [
            [
                "f0c209e940860820"
            ]
        ]
    },
    {
        "id": "b601d6596401a754",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1840,
        "wires": [
            [
                "b6d03834b636d44d",
                "aeded232cbae2ef0",
                "2acfb18cb9db9a02",
                "ef310c8290b45f2f"
            ]
        ]
    },
    {
        "id": "b6d03834b636d44d",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "806d30964cf41d9d",
        "order": 3,
        "width": "2",
        "height": 1,
        "name": "Queue",
        "label": "<font color={{textColor}}>Queue",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "1",
        "color": "#000000",
        "x": 710,
        "y": 1840,
        "wires": []
    },
    {
        "id": "644c4e9fd6d1aafc",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "ba42e703170bee84",
        "name": "",
        "label": "Call name",
        "tooltip": "",
        "group": "bc7afc94660c6b76",
        "order": 3,
        "width": "3",
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "500",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 760,
        "y": 80,
        "wires": [
            [
                "33b1db5a2a8af09d"
            ]
        ]
    },
    {
        "id": "33b1db5a2a8af09d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "ba42e703170bee84",
        "name": "",
        "func": "let callsign = msg.payload\nglobal.set(\"cmdPath\", `cmd/pluto/${callsign}`)\nglobal.set(\"device.callsign\", callsign);\nglobal.set(\"call\", callsign);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3729f57de4a75fbf",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "ba42e703170bee84",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.callsign",
        "payloadType": "global",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "0dc39dc2f82350ce"
            ]
        ]
    },
    {
        "id": "9cea687107707a6b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Mute",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/mute\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1720,
        "wires": [
            [
                "36a9e71117a34327"
            ]
        ]
    },
    {
        "id": "50bf46056b71ec3a",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 1600,
        "wires": [
            [
                "9cea687107707a6b",
                "5d39969ea562b92d",
                "18b3a285bc3b304a",
                "59e507f64ad42e32",
                "4ddefda4dc462586",
                "a3b043862df5d1c9",
                "203d8eabee6242e7",
                "33155f6018ceeffa",
                "96d158d7fdc5ee78",
                "9fb89f4342f8baf0",
                "91114b46796f2205",
                "8bcc3bb6537a078d",
                "2e28b17c64c14184",
                "04d27b36a3ee9934",
                "0b6d33db8fc071c9",
                "8e34088eda2b7263",
                "c44d0cb54ec5e706",
                "ac88fa94a49129ec",
                "1decf932a1bf2fcd"
            ]
        ]
    },
    {
        "id": "5d39969ea562b92d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Mode",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/stream/mode\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1640,
        "wires": [
            [
                "306b57e47411d35c"
            ]
        ]
    },
    {
        "id": "18b3a285bc3b304a",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "FecMode",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/fecmode\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1320,
        "wires": [
            [
                "d26972d34559fd63"
            ]
        ]
    },
    {
        "id": "59e507f64ad42e32",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Gain",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/gain\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1400,
        "wires": [
            [
                "d2b51c2f7d254def"
            ]
        ]
    },
    {
        "id": "4ddefda4dc462586",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Fec",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/fec\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1240,
        "wires": [
            [
                "9aa8ef50bbbe8e2d"
            ]
        ]
    },
    {
        "id": "a3b043862df5d1c9",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Frequency",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/frequency\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1480,
        "wires": [
            [
                "45967ab8c3bd9a21"
            ]
        ]
    },
    {
        "id": "203d8eabee6242e7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Samplerate",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/sr\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1560,
        "wires": [
            [
                "23773127332c2b1f"
            ]
        ]
    },
    {
        "id": "33155f6018ceeffa",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Queu",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/queue\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1840,
        "wires": [
            [
                "b601d6596401a754"
            ]
        ]
    },
    {
        "id": "7a4a8d639646cff4",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1920,
        "wires": [
            [
                "45ea934ddc9664a3",
                "f38c438a231661c6"
            ]
        ]
    },
    {
        "id": "96d158d7fdc5ee78",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Constellation",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/constel\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1920,
        "wires": [
            [
                "7a4a8d639646cff4"
            ]
        ]
    },
    {
        "id": "746af9f95f7438cd",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2000,
        "wires": [
            [
                "12de00c45ec62557"
            ]
        ]
    },
    {
        "id": "9fb89f4342f8baf0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "frame",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/frame\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2000,
        "wires": [
            [
                "746af9f95f7438cd"
            ]
        ]
    },
    {
        "id": "e2ddf0eaa1468069",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2080,
        "wires": [
            [
                "ae61c1e19f8634d0"
            ]
        ]
    },
    {
        "id": "91114b46796f2205",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Pilots",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/pilots\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2080,
        "wires": [
            [
                "e2ddf0eaa1468069"
            ]
        ]
    },
    {
        "id": "aeded232cbae2ef0",
        "type": "ui_chart",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "group": "e8adab232b1d4dce",
        "order": 1,
        "width": 21,
        "height": 3,
        "label": "Queue",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "60",
        "removeOlderPoints": "90",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "4dc0d6bc0972a150",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2160,
        "wires": [
            [
                "8a6e91746db5e484"
            ]
        ]
    },
    {
        "id": "8bcc3bb6537a078d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Gain Variable",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/gainvariable\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2160,
        "wires": [
            [
                "4dc0d6bc0972a150"
            ]
        ]
    },
    {
        "id": "56ad120991eb3c83",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2240,
        "wires": [
            [
                "31eb287a0ca0a45c"
            ]
        ]
    },
    {
        "id": "2e28b17c64c14184",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "TS Source Mode",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/tssourcemode\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2240,
        "wires": [
            [
                "56ad120991eb3c83"
            ]
        ]
    },
    {
        "id": "b56e0ed724bfefc0",
        "type": "mqtt out",
        "z": "2ec6a7ddfe0cd173",
        "g": "ba42e703170bee84",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "16855981254e7e93",
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "04d27b36a3ee9934",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "FEC Range",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/fecrange\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2320,
        "wires": [
            [
                "76bed5f0ebc81a4c"
            ]
        ]
    },
    {
        "id": "76bed5f0ebc81a4c",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2320,
        "wires": [
            [
                "508bccc9de4506fc"
            ]
        ]
    },
    {
        "id": "25a924b7dc1d4576",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1160,
        "wires": [
            [
                "689b33376ddc8653"
            ]
        ]
    },
    {
        "id": "c25d1cacc8057d1d",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "9ed1d9a126995072",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "NCO (Hz)",
        "label": "NCO",
        "format": "{{msg.payload}} Hz",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Verdana,Verdana,Geneva,sans-serif",
        "fontSize": "17",
        "color": "#ffffff",
        "x": 720,
        "y": 1200,
        "wires": []
    },
    {
        "id": "0b6d33db8fc071c9",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "NCO",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/nco\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1160,
        "wires": [
            [
                "25a924b7dc1d4576"
            ]
        ]
    },
    {
        "id": "ac88fa94a49129ec",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Digital Gain",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/digitalgain\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1080,
        "wires": [
            [
                "347c8041af1a52e0"
            ]
        ]
    },
    {
        "id": "347c8041af1a52e0",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "mqtt dg",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 1080,
        "wires": [
            [
                "92bdb03cfb54e314",
                "4b23c7a819f12eb7"
            ]
        ]
    },
    {
        "id": "92bdb03cfb54e314",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "9ed1d9a126995072",
        "order": 22,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Digital",
        "format": "{{msg.payload}} dB",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Verdana,Verdana,Geneva,sans-serif",
        "fontSize": "17",
        "color": "#ffffff",
        "x": 710,
        "y": 1120,
        "wires": []
    },
    {
        "id": "54cbda477035a37f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: gain",
        "func": "var payload = parseFloat(msg.payload).toFixed(2);\nif (payload !== global.get(\"device.tx.gain\")){\n    global.set(\"device.tx.gain\", payload);\n    msg.payload = payload;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1400,
        "wires": [
            [
                "18d422fe182d6186",
                "be4a04a5a054f988"
            ]
        ]
    },
    {
        "id": "295347c7270ee5f9",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: fecmode",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.fecmode\")){\n    global.set(\"device.tx.dvbs2.fecmode\", payload);\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1320,
        "wires": [
            [
                "1969a0cddc042f2e"
            ]
        ]
    },
    {
        "id": "689b33376ddc8653",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: nco",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.nco\")){\n    global.set(\"device.tx.nco\", payload );\n    msg.payload = payload;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1160,
        "wires": [
            [
                "c25d1cacc8057d1d",
                "bdfdc40f3409d5eb"
            ]
        ]
    },
    {
        "id": "4b23c7a819f12eb7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: digitalgain",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.digitalgain\")){\n    global.set(\"device.tx.dvbs2.digitalgain\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1080,
        "wires": [
            [
                "462c1bee49073de7"
            ]
        ]
    },
    {
        "id": "e0f5c4a53f48610b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: fec",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.fec\")){\n    global.set(\"device.tx.dvbs2.fec\", payload);\n    global.set(\"settings.FEC\", payload);\n    // global.set(\"bitratechange\", true);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "8ec0b8acdb25a6b7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: frequency",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.frequency\")) {\n    if (global.get(\"tune\")) {\n        let tune_table = global.get(\"tune_table\");\n        tune_table.push(Number(msg.payload))\n        global.set(\"tune_table\", tune_table);\n        global.set(\"tune\", false);\n    }\n    global.set(\"device.tx.frequency\", payload);\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1480,
        "wires": [
            [
                "dffe1e50bcaeb0a5"
            ]
        ]
    },
    {
        "id": "1cc9bf09772f06d3",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: sr",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.sr\")) {\n    // global.set(\"bitratechange\", true);\n    global.set(\"device.tx.dvbs2.sr\", payload);\n    global.set(\"settings.SR\", payload / 1000);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1560,
        "wires": [
            [
                "aa6d588a480f161c"
            ]
        ]
    },
    {
        "id": "54e338fa6a48fd5b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: mode",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.stream.mode\")){\n    global.set(\"device.tx.stream.mode\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1640,
        "wires": [
            [
                "2e677684d13ac6e0"
            ]
        ]
    },
    {
        "id": "45ea934ddc9664a3",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: constel",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.constel\")){\n    global.set(\"device.tx.dvbs2.constel\", payload);\n    // global.set(\"deviceChange\", true);\n    // global.set(\"settings.MODE\", payload);\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "12de00c45ec62557",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: frame",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.frame\")){\n    global.set(\"device.tx.dvbs2.frame\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2000,
        "wires": [
            [
                "ce96de0f7dba91c5"
            ]
        ]
    },
    {
        "id": "ae61c1e19f8634d0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: pilots",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.pilots\")){\n    global.set(\"device.tx.dvbs2.pilots\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2080,
        "wires": [
            [
                "16a3685e614e0995"
            ]
        ]
    },
    {
        "id": "8a6e91746db5e484",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: gainvariable",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.gainvariable\")){\n    global.set(\"device.tx.dvbs2.gainvariable\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 2160,
        "wires": [
            [
                "70cb26f62de94a5d"
            ]
        ]
    },
    {
        "id": "31eb287a0ca0a45c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: tssourcemode",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.tssourcemode\")){\n    global.set(\"device.tx.dvbs2.tssourcemode\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 2240,
        "wires": [
            [
                "93d8b2c69bdc7792"
            ]
        ]
    },
    {
        "id": "508bccc9de4506fc",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: fecrange",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.fecrange\")){\n    global.set(\"device.tx.dvbs2.fecrange\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2320,
        "wires": [
            [
                "33a0bcca85522580"
            ]
        ]
    },
    {
        "id": "b733d75a1c79f1a2",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2420,
        "wires": [
            [
                "c8042db5402565df",
                "e1cd38d2156ae7ba"
            ]
        ]
    },
    {
        "id": "c8042db5402565df",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "bc7afc94660c6b76",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "TS",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 710,
        "y": 2460,
        "wires": []
    },
    {
        "id": "8e34088eda2b7263",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "TS Address",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/tssourceaddress\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2420,
        "wires": [
            [
                "b733d75a1c79f1a2"
            ]
        ]
    },
    {
        "id": "e1cd38d2156ae7ba",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: tssourceaddress",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.tssourceaddress\")){\n    global.set(\"device.tx.dvbs2.tssourceaddress\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "2acfb18cb9db9a02",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: queue",
        "func": "var payload = parseInt(msg.payload);\nif (payload !== global.get(\"queue\")) {\n    global.set(\"queue\", payload);\n}\nif (payload > 50) {\n    msg.fcolor = \"#d81706\";\n    msg.payload = \"overflow\";\n    return msg;\n}\nif (payload > 0) {\n    msg.fcolor = \"#0e7c1a\";\n    msg.payload = \"nominal\";\n    return msg;\n}\n\nmsg.payload = \"underflow\";\nmsg.fcolor = \"#ff9e07\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1800,
        "wires": [
            [
                "0813517cbc9b99f3"
            ]
        ]
    },
    {
        "id": "0813517cbc9b99f3",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "806d30964cf41d9d",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Buffer",
        "format": "<font size=3><font color={{fcolor}}>{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 1800,
        "wires": []
    },
    {
        "id": "c4f36ff7105c2dd1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: temp",
        "func": "var payload = parseFloat(msg.payload)/1000;\nif (payload !== global.get(\"temp\") && payload > 0){\n    global.set(\"temp\", payload);\n    msg.payload = payload;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1000,
        "wires": [
            [
                "4fd321bd9fa719f3"
            ]
        ]
    },
    {
        "id": "de949c9780005117",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "mqtt temp",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 580,
        "y": 1000,
        "wires": [
            [
                "c4f36ff7105c2dd1"
            ]
        ]
    },
    {
        "id": "c44d0cb54ec5e706",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Temperature",
        "func": "msg.action = \"subscribe\"\nmsg.topic = \"dt/pluto/\" + global.get(\"device.callsign\") + \"/temperature_ad\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1000,
        "wires": [
            [
                "de949c9780005117"
            ]
        ]
    },
    {
        "id": "4fd321bd9fa719f3",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "806d30964cf41d9d",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "Pluto Temp",
        "label": "Tuner",
        "format": "{{msg.payload}}°C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Verdana,Verdana,Geneva,sans-serif",
        "fontSize": "17",
        "color": "#ffffff",
        "x": 730,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0c72fe59acc5f30e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "ba42e703170bee84",
        "name": "pluto mqtt connection details",
        "props": [
            {
                "p": "action",
                "v": "connect",
                "vt": "str"
            },
            {
                "p": "broker",
                "v": "{\"broker\":\"192.168.2.1\",\"port\":1883,\"username\":\"root\",\"password\":\"analog\",\"force\":true}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "cmd/pluto/call",
        "payload": "ZS1SCI",
        "payloadType": "str",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "b56e0ed724bfefc0",
                "f5a47dd605642e35"
            ]
        ]
    },
    {
        "id": "5f71534b6c02e324",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "+dBm",
        "group": "9ed1d9a126995072",
        "order": 31,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "+",
        "tooltip": "+0.25dB",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2350,
        "y": 1680,
        "wires": [
            [
                "88c17ad9f892b06d"
            ]
        ]
    },
    {
        "id": "f29b8d8eb8441fde",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "-dBm",
        "group": "9ed1d9a126995072",
        "order": 30,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "-",
        "tooltip": "-0.25dB",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2350,
        "y": 1740,
        "wires": [
            [
                "b6da9101dce07fd1"
            ]
        ]
    },
    {
        "id": "88c17ad9f892b06d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Increase Gain",
        "func": "let currentGain = global.get(\"device.tx.gain\");\nlet uppedGain = parseFloat(currentGain) + 0.25;\nmsg.payload = uppedGain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 1680,
        "wires": [
            [
                "37b18a222ae30d52"
            ]
        ]
    },
    {
        "id": "b6da9101dce07fd1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Decrease Gain",
        "func": "let currentGain = global.get(\"device.tx.gain\");\nlet downedGain = parseFloat(currentGain) - 0.25;\nmsg.payload = downedGain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 1740,
        "wires": [
            [
                "be4a04a5a054f988",
                "37b18a222ae30d52"
            ]
        ]
    },
    {
        "id": "508ff50f2a470219",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "9ed1d9a126995072",
        "order": 13,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "Stop transmission",
        "color": "",
        "bgcolor": "{{stop_button_color}}",
        "className": "",
        "icon": "{{stop_animation}}",
        "payload": "1",
        "payloadType": "num",
        "topic": "payload",
        "topicType": "msg",
        "x": 2350,
        "y": 2100,
        "wires": [
            [
                "aa4a256618f7c4a6"
            ]
        ]
    },
    {
        "id": "f0c209e940860820",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "9ed1d9a126995072",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "Start transmission",
        "color": "",
        "bgcolor": "{{start_button_color}}",
        "className": "",
        "icon": "{{start_animation}}",
        "payload": "0",
        "payloadType": "num",
        "topic": "payload",
        "topicType": "msg",
        "x": 2350,
        "y": 2040,
        "wires": [
            [
                "af45e1bfc3e75ecb"
            ]
        ]
    },
    {
        "id": "af45e1bfc3e75ecb",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Mute OFF",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/mute`;\nmsg.topic = topic\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 2040,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "55bca069bdb08ee7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Mute ON",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/mute`;\nmsg.topic = topic;\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 2100,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "dffe1e50bcaeb0a5",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "Channel",
        "label": "Channel",
        "tooltip": "",
        "place": "",
        "group": "9ed1d9a126995072",
        "order": 10,
        "width": 7,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "channel",
        "x": 2360,
        "y": 1860,
        "wires": [
            [
                "807128449158f2eb"
            ]
        ]
    },
    {
        "id": "be4a04a5a054f988",
        "type": "ui_slider",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "TX Gain",
        "label": "",
        "tooltip": "",
        "group": "9ed1d9a126995072",
        "order": 29,
        "width": 10,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "-89",
        "max": "0",
        "step": "-0.25",
        "className": "",
        "x": 2360,
        "y": 1800,
        "wires": [
            [
                "37b18a222ae30d52"
            ]
        ]
    },
    {
        "id": "2e677684d13ac6e0",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Mode",
        "tooltip": "",
        "place": "Select option",
        "group": "9ed1d9a126995072",
        "order": 34,
        "width": "4",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "dvbs2-ts",
                "value": "dvbs2-ts",
                "type": "str"
            },
            {
                "label": "dvbs2-gse",
                "value": "dvbs2-gse",
                "type": "str"
            },
            {
                "label": "Carrier",
                "value": "test",
                "type": "str"
            },
            {
                "label": "pass",
                "value": "pass",
                "type": "str"
            },
            {
                "label": "dvbs-ts",
                "value": "dvbs-ts",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2350,
        "y": 1980,
        "wires": [
            [
                "edf4a8f5daf0b0ab"
            ]
        ]
    },
    {
        "id": "aa6d588a480f161c",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "SR",
        "tooltip": "",
        "place": "Samplerate",
        "group": "4f22c4dbc8bc16dd",
        "order": 9,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "35KS",
                "value": 35000,
                "type": "num"
            },
            {
                "label": "66 KS",
                "value": 66000,
                "type": "num"
            },
            {
                "label": "125 KS",
                "value": 125000,
                "type": "num"
            },
            {
                "label": "250 KS",
                "value": 250000,
                "type": "num"
            },
            {
                "label": "333 KS",
                "value": 333000,
                "type": "num"
            },
            {
                "label": "500 KS",
                "value": 500000,
                "type": "num"
            },
            {
                "label": "1 MS",
                "value": 1000000,
                "type": "num"
            },
            {
                "label": "1.5 MS",
                "value": 1500000,
                "type": "num"
            },
            {
                "label": "2 MS",
                "value": 2000000,
                "type": "num"
            },
            {
                "label": "3 MS",
                "value": 3000000,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2350,
        "y": 1920,
        "wires": [
            [
                "89b95ad3b6453036"
            ]
        ]
    },
    {
        "id": "ddf60892397fbc68",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "FEC",
        "tooltip": "",
        "place": "Select option",
        "group": "4f22c4dbc8bc16dd",
        "order": 11,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2350,
        "y": 1560,
        "wires": [
            [
                "cec2f56be1fccf51"
            ]
        ]
    },
    {
        "id": "1969a0cddc042f2e",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "FecMode",
        "tooltip": "",
        "place": "Select option",
        "group": "9ed1d9a126995072",
        "order": 35,
        "width": "4",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "fixed",
                "type": "str"
            },
            {
                "label": "",
                "value": "variable",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2360,
        "y": 1620,
        "wires": [
            [
                "152082051caa1d1d"
            ]
        ]
    },
    {
        "id": "152082051caa1d1d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: FecMode",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fecmode`;\nif (payload === \"variable\") {\n    let constel = global.get(\"device.tx.dvbs2.constel\");\n    let fec = constel === \"qpsk\" ? \"1/4\" : constel === \"8psk\" ? \"3/5\" : constel === \"16apsk\" ? \"2/3\" : \"3/4\";\n    msg.fec = fec;\n}\nmsg.defaultFEC = true;\nmsg.topic = topic\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.fecmode\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 1620,
        "wires": [
            [
                "8a16f1f5708afd9e",
                "762e2c70acd9ebe0"
            ]
        ]
    },
    {
        "id": "37b18a222ae30d52",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Gain",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/gain`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.gain\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3030,
        "y": 1720,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "cec2f56be1fccf51",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Fec",
        "func": "global.set(\"deviceChange\", true);\nlet payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fec`;\nglobal.set(\"stop\", true);\nglobal.set(\"device.tx.dvbs2.fec\", payload);\nglobal.set(\"settings.FEC\", payload);\nmsg.topic = topic\nmsg.payload = payload\n// global.set(\"bitratechange\", true);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 1560,
        "wires": [
            [
                "8a16f1f5708afd9e",
                "b1fb472a0a5e24a7"
            ]
        ]
    },
    {
        "id": "89b95ad3b6453036",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: SampleRate",
        "func": "global.set(\"deviceChange\", true);\nlet payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/sr`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"stop\", true);\nglobal.set(\"device.tx.dvbs2.sr\", payload);\nglobal.set(\"settings.SR\", payload/1000);\n// global.set(\"bitratechange\", true);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1920,
        "wires": [
            [
                "8a16f1f5708afd9e",
                "9695655b0a719b4a"
            ]
        ]
    },
    {
        "id": "807128449158f2eb",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Frequency",
        "func": "let payload = Number(msg.payload) + global.get(\"device.tx.offset\");\nlet topic = `${global.get(\"cmdPath\")}/tx/frequency`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.frequency\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1860,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "edf4a8f5daf0b0ab",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Stream Mode",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/stream/mode`;\n// global.set(\"bitratechange\", true);\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.stream.mode\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 1980,
        "wires": [
            [
                "8a16f1f5708afd9e",
                "cd7a771d4df1122f"
            ]
        ]
    },
    {
        "id": "f38c438a231661c6",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "MOD",
        "tooltip": "",
        "place": "Select option",
        "group": "4f22c4dbc8bc16dd",
        "order": 10,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "qpsk",
                "value": "qpsk",
                "type": "str"
            },
            {
                "label": "8psk",
                "value": "8psk",
                "type": "str"
            },
            {
                "label": "16apsk",
                "value": "16apsk",
                "type": "str"
            },
            {
                "label": "32apsk",
                "value": "32apsk",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2350,
        "y": 2160,
        "wires": [
            [
                "c5ceed661f8529ce",
                "86a189cf7830c88d"
            ]
        ]
    },
    {
        "id": "c5ceed661f8529ce",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Constellation",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/constel`;\nglobal.set(\"stop\", true);\nglobal.set(\"device.tx.dvbs2.constel\", payload);\nglobal.set(\"settings.MODE\", payload);\nmsg.topic = topic;\nmsg.payload = payload;\n// global.set(\"deviceChange\", true);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2160,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "ce96de0f7dba91c5",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Frame",
        "tooltip": "",
        "place": "Select option",
        "group": "9ed1d9a126995072",
        "order": 43,
        "width": "4",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "short",
                "value": "short",
                "type": "str"
            },
            {
                "label": "long",
                "value": "long",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2350,
        "y": 2220,
        "wires": [
            [
                "0c74362e749bcdc4",
                "86a189cf7830c88d"
            ]
        ]
    },
    {
        "id": "0c74362e749bcdc4",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Frame",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/frame`;\n// global.set(\"bitratechange\", true);\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"stop\", true);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.frame\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 2220,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "16a3685e614e0995",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Pilots",
        "tooltip": "",
        "place": "Select option",
        "group": "9ed1d9a126995072",
        "order": 36,
        "width": "4",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "off",
                "value": "0",
                "type": "str"
            },
            {
                "label": "on",
                "value": "1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2350,
        "y": 2280,
        "wires": [
            [
                "4a50af4869a33baa"
            ]
        ]
    },
    {
        "id": "4a50af4869a33baa",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Pilots",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/pilots`;\n// global.set(\"bitratechange\", true);\nmsg.topic = topic\nmsg.payload = payload;\nglobal.set(\"stop\", true);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.pilots\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 2280,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "14e5a286770d3cd0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Reboot",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/system/reboot`;\nmsg.topic = topic\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"mute\", \"1\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 1500,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "0d6f171d50f0a0c3",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "806d30964cf41d9d",
        "order": 6,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "payload",
        "topicType": "msg",
        "x": 2360,
        "y": 1500,
        "wires": [
            [
                "14e5a286770d3cd0"
            ]
        ]
    },
    {
        "id": "70cb26f62de94a5d",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Variable_gain",
        "tooltip": "",
        "place": "Select option",
        "group": "9ed1d9a126995072",
        "order": 42,
        "width": "4",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "on",
                "value": 1,
                "type": "num"
            },
            {
                "label": "off",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2380,
        "y": 2340,
        "wires": [
            [
                "b1b6fc76c723e0f1"
            ]
        ]
    },
    {
        "id": "b1b6fc76c723e0f1",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Gain variable",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/gainvariable`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.gainvariable\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 2340,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "93d8b2c69bdc7792",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "TS Source mode",
        "tooltip": "",
        "place": "Select option",
        "group": "9ed1d9a126995072",
        "order": 44,
        "width": "4",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "TS IP",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Pattern",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2390,
        "y": 2400,
        "wires": [
            [
                "7b06e3153449eb9a"
            ]
        ]
    },
    {
        "id": "7b06e3153449eb9a",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: TsSourceMode",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/tssourcemode`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.tssourcemode\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 2400,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "33a0bcca85522580",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "FEC Range",
        "tooltip": "",
        "place": "Select option",
        "group": "9ed1d9a126995072",
        "order": 41,
        "width": "4",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "1",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3",
                "value": 3,
                "type": "num"
            },
            {
                "label": "4",
                "value": 4,
                "type": "num"
            },
            {
                "label": "5",
                "value": 5,
                "type": "num"
            },
            {
                "label": "6",
                "value": "6",
                "type": "str"
            },
            {
                "label": "7",
                "value": 7,
                "type": "num"
            },
            {
                "label": "8",
                "value": 8,
                "type": "num"
            },
            {
                "label": "9",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11",
                "value": 11,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2370,
        "y": 2460,
        "wires": [
            [
                "d533bf0f097fedc4"
            ]
        ]
    },
    {
        "id": "d533bf0f097fedc4",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: FEC Range variable",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fecrange`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.fecrange\", payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 2460,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "462c1bee49073de7",
        "type": "ui_slider",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "TX Digital Gain",
        "label": "",
        "tooltip": "",
        "group": "9ed1d9a126995072",
        "order": 23,
        "width": 10,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "payload",
        "topicType": "msg",
        "min": "-20",
        "max": "3",
        "step": "0.01",
        "className": "",
        "x": 2380,
        "y": 1440,
        "wires": [
            [
                "e91e846502f35c90"
            ]
        ]
    },
    {
        "id": "e91e846502f35c90",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: Digital Gain when not is pass mode...",
        "func": "let payload = msg.payload;\n// We cannot send digital gain in pass mode...\nif(global.get(\"device.tx.stream.mode\") === \"pass\") return;\nlet topic = `${global.get(\"cmdPath\")}/tx/dvbs2/digitalgain`\nmsg.topic = topic\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.digitalgain\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1440,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "6bdd18a478266cdb",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 3",
        "group": "da031ac17a307778",
        "order": 3,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "profile 3",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p3_color}}",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 4380,
        "y": 1200,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "e41f78ecb41096ea",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 4",
        "group": "da031ac17a307778",
        "order": 4,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "profile 4",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p5_color}}",
        "className": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 4380,
        "y": 1240,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "26d4847d4e66ef33",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 5",
        "group": "da031ac17a307778",
        "order": 5,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "profile 5",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p6_color}}",
        "className": "",
        "icon": "",
        "payload": "5",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 4380,
        "y": 1280,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "8a16f1f5708afd9e",
        "type": "mqtt out",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "16855981254e7e93",
        "x": 3530,
        "y": 1380,
        "wires": []
    },
    {
        "id": "a6736166225853ff",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Update Active Profile Button",
        "func": "let status = msg.status.text;\nlet fill = msg.status.fill;\nlet source = msg.status.source.name;\nmsg.p1_color = \"\";\nmsg.p2_color = \"\";\nmsg.p3_color = \"\";\nmsg.p4_color = \"\";\nmsg.p5_color = \"\";\nmsg.p6_color = \"\";\nmsg.p7_color = \"\";\nmsg.p8_color = \"\";\nmsg.p9_color = \"\";\nif (msg.status.text === \"error:1\" || msg.status.text === \"rc:1\") {\n    msg.ffmpeg = \"clear\";\n    return msg;\n}\nmsg.p1_color = \"gray\";\nmsg.p2_color = \"gray\";\nmsg.p3_color = \"gray\";\nmsg.p4_color = \"gray\";\nmsg.p5_color = \"gray\";\nmsg.p6_color = \"gray\";\nmsg.p7_color = \"gray\";\nmsg.p8_color = \"gray\";\nmsg.p9_color = \"gray\";\nif (msg.status.text) {\n    let pid = msg.status.text.split(':');\n    msg.command = \"start\";\n    switch (source) {\n        case \"Load 33KS\":\n            msg.p1_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 66KS\":\n            msg.p2_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 125KS\":\n            msg.p3_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load last run\":\n            msg.p4_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 250KS\":\n            msg.p5_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 333KS\":\n            msg.p6_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 500KS\":\n            msg.p7_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load 1000KS\":\n            msg.p8_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n        case \"Load custom\":\n            msg.p9_color = \"green\";\n            global.set(\"pid\", pid[1]);\n            global.set(\"ProfileButtonsActive\", true);\n            return msg;\n    }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4120,
        "y": 1120,
        "wires": [
            [
                "6bdd18a478266cdb",
                "e41f78ecb41096ea",
                "26d4847d4e66ef33",
                "b12e26636bc4a755",
                "4ecaf72037fc5448",
                "37c0f70c56da77c5",
                "321917da5c241be6",
                "6f5791e469edab55",
                "66d128c2a339f3cb"
            ]
        ]
    },
    {
        "id": "0024149327ace021",
        "type": "status",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "",
        "scope": [
            "870adb347b148820"
        ],
        "x": 3920,
        "y": 1120,
        "wires": [
            [
                "a6736166225853ff"
            ]
        ]
    },
    {
        "id": "a9ad9994f8c5db3b",
        "type": "comment",
        "z": "2ec6a7ddfe0cd173",
        "g": "da57b5447aa16728",
        "name": "Set custom ffpmeg flags for libx265",
        "info": " - **-x265-params b-adapt=1**\n - **-tune zerolatency**\n",
        "x": 3620,
        "y": 180,
        "wires": []
    },
    {
        "id": "8fc50c918238bbb1",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "",
        "props": [],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1970,
        "y": 2080,
        "wires": [
            [
                "f3b56d13d111f207"
            ]
        ]
    },
    {
        "id": "b12e26636bc4a755",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 6",
        "group": "da031ac17a307778",
        "order": 6,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "profile 6",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p7_color}}",
        "className": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 4380,
        "y": 1320,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "4ecaf72037fc5448",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 7",
        "group": "da031ac17a307778",
        "order": 7,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "profile 7",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p8_color}}",
        "className": "",
        "icon": "",
        "payload": "7",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 4380,
        "y": 1360,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "aa4a256618f7c4a6",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Only send if we are unmuted",
        "func": "if (parseInt(msg.payload) !== parseInt(global.get(\"mute\"))) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 2100,
        "wires": [
            [
                "55bca069bdb08ee7"
            ]
        ]
    },
    {
        "id": "321917da5c241be6",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 2",
        "group": "da031ac17a307778",
        "order": 2,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "profile 2",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p2_color}}",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 4380,
        "y": 1160,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "37c0f70c56da77c5",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "profile 1",
        "group": "da031ac17a307778",
        "order": 1,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "profile 1",
        "tooltip": "<font size=4>{{p1_color}}",
        "color": "",
        "bgcolor": "{{p1_color}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 4380,
        "y": 1120,
        "wires": [
            [
                "863b303484773cde"
            ]
        ]
    },
    {
        "id": "863b303484773cde",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send profile settings",
        "func": "// if some saving flag is set do saving stuff\nif (global.get(\"saving\")) {\n    global.set(\"saving\", false);\n    let jsonSettings = global.get(\"settings\");\n    msg.loading = \"0\";\n    msg.filename = `profiles\\\\p${msg.payload}.json`\n    msg.payload = jsonSettings;\n    return msg;\n}\n// if not then just load the profile\nlet ffmpegPID = global.get(\"pid\");\nif (ffmpegPID === \"\" || ffmpegPID === undefined) {\n    if (msg.payload <= 7) {\n        msg.loading = \"1\";\n        msg.filename = `profiles\\\\p${msg.payload}.json`\n        return msg;\n    }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4660,
        "y": 1180,
        "wires": [
            [
                "475f01a383d6b75e"
            ]
        ]
    },
    {
        "id": "b4aff87862b89a39",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "+dBm",
        "group": "9ed1d9a126995072",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "+",
        "tooltip": "+1dB",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2350,
        "y": 1320,
        "wires": [
            [
                "5d8a44d8d3dfd931"
            ]
        ]
    },
    {
        "id": "edd3123535a89e2c",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "-dBm",
        "group": "9ed1d9a126995072",
        "order": 24,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "-",
        "tooltip": "-1dB",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "device.tx.dvbs2.digitalgain",
        "payloadType": "global",
        "topic": "topic",
        "topicType": "msg",
        "x": 2350,
        "y": 1380,
        "wires": [
            [
                "33dc958065cdada2"
            ]
        ]
    },
    {
        "id": "5d8a44d8d3dfd931",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Digital Increase Gain",
        "func": "let currentGain = global.get(\"device.tx.dvbs2.digitalgain\");\nlet uppedGain = parseFloat(currentGain) + 1;\nmsg.payload = uppedGain;\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 1320,
        "wires": [
            [
                "e91e846502f35c90"
            ]
        ]
    },
    {
        "id": "33dc958065cdada2",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Digital Decrease Gain",
        "func": "let currentGain = global.get(\"device.tx.dvbs2.digitalgain\");\nlet downedGain = parseFloat(currentGain) - 1;\nmsg.payload = downedGain;\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 1380,
        "wires": [
            [
                "e91e846502f35c90"
            ]
        ]
    },
    {
        "id": "ec7f7985e8da8ed2",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "da57b5447aa16728",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 3570,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "9e5aaf4953afd279",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "da57b5447aa16728",
        "name": "Set low latency mode",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"lowLatency\")){\n    global.set(\"lowLatency\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3740,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7d6077cea86f2378",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "",
        "group": "806d30964cf41d9d",
        "order": 5,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "RESTORE",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{payload}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1510,
        "y": 680,
        "wires": [
            [
                "6b0cd6504e13d973",
                "8c7733a45d32bf17"
            ]
        ]
    },
    {
        "id": "b9e877b123e7e841",
        "type": "comment",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "stream.mode must be set, or else digital mode setting reboots pluto",
        "info": "",
        "x": 1640,
        "y": 580,
        "wires": []
    },
    {
        "id": "bdfdc40f3409d5eb",
        "type": "ui_slider",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "9ed1d9a126995072",
        "order": 17,
        "width": 10,
        "height": 1,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "str",
        "min": "-50000",
        "max": "50000",
        "step": "250",
        "className": "",
        "x": 2350,
        "y": 1140,
        "wires": [
            [
                "5af92414e3f29873"
            ]
        ]
    },
    {
        "id": "5af92414e3f29873",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: NCO",
        "func": "let payload = msg.payload;\nlet topic = `${global.get(\"cmdPath\")}/tx/nco`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.nco\", payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2810,
        "y": 1260,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "6f5791e469edab55",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Custom profile",
        "group": "7954d85ae8701623",
        "order": 4,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "Start profile",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p9_color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4400,
        "y": 1440,
        "wires": [
            [
                "932baa0f165b71a2"
            ]
        ]
    },
    {
        "id": "932baa0f165b71a2",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "ffmpeg command builder",
        "func": "let ffmpegPID = global.get(\"pid\");\nlet fec = global.get(\"device.tx.dvbs2.fecmode\") === \"variable\" ? global.get(\"device.tx.dvbs2.fec\") : global.get(\"settings.FEC\");\nlet vbr = global.get(\"device.tx.dvbs2.fecmode\") === \"variable\" ? \"1\" : \"0\";\nif (ffmpegPID === \"\" || ffmpegPID === undefined) {\n    /* \n        In here be dragons...\n     */\n    let videoBitrate = global.get(\"settings.VBITRATE\");\n    let tsRate = global.get(\"settings.TSBITRATE\");\n    let vvcBitRate = Math.round(videoBitrate * 990); // to Mega\n    let codec = global.get(\"settings.CODEC\")\n    switch (codec) {\n        case 'libvvenc':\n            codec = `libvvenc -preset faster -vvenc-params bitrate=${vvcBitRate}`;\n            break;\n        case 'libx265':\n            // codec = `libx265 -x265-params b-adapt=1 `;\n            codec = `libx265 -preset medium`;\n            break;\n        case 'liboam-av1':\n            codec = `liboam-av1 -crf 30 -usage realtime`;\n            break;\n        case 'hevc_nvenc':\n            codec = `hevc_nvenc -preset p7 -tune hq`;\n            break;\n    }\n    let offset = -0.650;\n    /* These need to be stored in json and get GUI inputs */\n    let thread_queue = 10;\n    let rt_buffer = 300;\n    let buffer_size = videoBitrate * 1;\n    let video_pid = 256;\n    let mpegts_start_pid = 256;\n    let audio_pid = 257;\n    let keyframe_interval = 150;\n    let max_delay = 1000;\n    let max_interleave_delta = 4;\n    let pcr_period = 20;\n    let pat_period = 0.4;\n    let mpegts_service_id = 4095;\n    let mpegts_transport_stream_id = 4095;\n    let mpegts_pmt_start_pid = 4095;\n    let mpegts_original_network_id = 1;\n    let service_provider = \"DATV-RED\";\n    let fifo_size = 50;\n    /* \n        This is the big ffmpeg variable string\n        do note the space ' ' at the end of each line...\n    */\n    let str = \n        `-itsoffset ${offset} ` +\n        `-f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M ` +\n        `-i \\\"video=${global.get(\"settings.video_device\")}\\\" ` +\n        `-f dshow -thread_queue_size ${thread_queue}K -rtbufsize ${rt_buffer}M ` +\n        `-i \\\"audio=${global.get(\"settings.audio_device\")}\\\" ` +\n        `-ar ${global.get(\"settings.ABITRATE\")}K ` +\n        `-vcodec ${codec} ` +\n        `-s ${global.get(\"settings.IMAGESIZE\")} ` +\n        `-b:v ${global.get(\"settings.VBITRATE\")}K ` +\n        `-r ${global.get(\"settings.FPS\")} ` +\n        `-maxrate ${global.get(\"settings.VBITRATE\")}K ` +\n        `-minrate ${global.get(\"settings.VBITRATE\")}K ` +\n        `-bufsize ${buffer_size}K -g ${keyframe_interval} ` +\n        `-acodec libfdk_aac ` +\n        `-ac ${global.get(\"settings.AUDIO\")} ` +\n        `-b:a ${global.get(\"settings.ABITRATE\")}k ` +\n        `-f mpegts -muxrate ${tsRate}K ` +\n        `-streamid 0:${video_pid} ` +\n        `-streamid 1:${audio_pid} ` +\n        `-max_delay ${max_delay}K ` +\n        `-max_interleave_delta ${max_interleave_delta}M ` +\n        `-pcr_period ${pcr_period} ` +\n        `-pat_period ${pat_period} ` +\n        `-mpegts_service_id ${mpegts_service_id} ` +\n        `-mpegts_original_network_id ${mpegts_original_network_id} ` +\n        `-mpegts_transport_stream_id ${mpegts_transport_stream_id} ` +\n        `-mpegts_pmt_start_pid ${mpegts_pmt_start_pid} ` +\n        `-mpegts_start_pid ${mpegts_start_pid} ` +\n        `-metadata service_provider=${service_provider} ` +\n        `-metadata service_name=${global.get(\"device.callsign\")} ` +\n        `-af aresample=async=1 ` +\n        `\\\"udp://${global.get(\"device.tx.dvbs2.tssourceaddress\")}?pkt_size=1316&overrun_nonfatal=1&fifo_size=${fifo_size}M\\\"`;\n\n    msg.payload = str;\n    global.set(\"ffmpeg_cmd\", msg.payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4650,
        "y": 1440,
        "wires": [
            [
                "870adb347b148820"
            ]
        ]
    },
    {
        "id": "2d16a7785c1bb3dd",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "9ed1d9a126995072",
        "order": 19,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "+Hz",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2350,
        "y": 1200,
        "wires": [
            [
                "68e079e44b9dd5c2"
            ]
        ]
    },
    {
        "id": "b019a1fc7eadfd0f",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "group": "9ed1d9a126995072",
        "order": 18,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "-Hz",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2350,
        "y": 1260,
        "wires": [
            [
                "524de1980547eaea"
            ]
        ]
    },
    {
        "id": "68e079e44b9dd5c2",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Increase nco",
        "func": "let currentNCO = global.get(\"device.tx.nco\");\nlet uppedNCO = parseFloat(currentNCO) + 250;\nmsg.payload = uppedNCO;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 1200,
        "wires": [
            [
                "5af92414e3f29873"
            ]
        ]
    },
    {
        "id": "524de1980547eaea",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Decrease nco",
        "func": "let currentNCO = global.get(\"device.tx.nco\");\nlet uppedNCO = parseFloat(currentNCO) - 250;\nmsg.payload = uppedNCO;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 1260,
        "wires": [
            [
                "5af92414e3f29873"
            ]
        ]
    },
    {
        "id": "023820f309b020da",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "command": "scripts\\ffplayudp.bat",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "ffplay",
        "x": 4630,
        "y": 2240,
        "wires": [
            [],
            [],
            [
                "71e94c828318f918"
            ]
        ]
    },
    {
        "id": "dd252f1ac7e17f8a",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ffmpeg_cmd",
        "payloadType": "global",
        "x": 4640,
        "y": 1260,
        "wires": [
            [
                "6c2ed6b6c40e42db"
            ]
        ]
    },
    {
        "id": "6c2ed6b6c40e42db",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "",
        "label": "ffmpeg command",
        "tooltip": "",
        "group": "e8adab232b1d4dce",
        "order": 2,
        "width": 21,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 4970,
        "y": 1260,
        "wires": [
            [
                "66d128c2a339f3cb"
            ]
        ]
    },
    {
        "id": "29f59051e6cbe148",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "group": "7954d85ae8701623",
        "order": 3,
        "width": "17",
        "height": "1",
        "name": "ffmpeg out",
        "label": "<font size=3><font color={{textColor}}>ffmpeg output",
        "format": "<font size=3><font color={{fcolor}}>{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "14",
        "color": "#ffffff",
        "x": 5470,
        "y": 1300,
        "wires": []
    },
    {
        "id": "380f24164e357a8f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Output safegaurd",
        "func": "let ffmpegOut = msg.payload;\nif (`${ffmpegOut}`.includes(\"drop=\")){\n    let testStr = ffmpegOut.toString();\n    let index = testStr.indexOf(\"speed=\");\n    testStr = testStr.substr(index);\n    testStr = testStr.substr(6).replace('x','');\n    let speed = parseFloat(testStr);\n    if(speed < 0.95 ){\n        msg.fcolor = \"red\";\n    }\n    if (speed >= 0.96 && speed < 1.5) {\n        msg.fcolor = \"limegreen\";\n    }\n    msg.payload = ffmpegOut;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5210,
        "y": 1340,
        "wires": [
            [
                "29f59051e6cbe148"
            ]
        ]
    },
    {
        "id": "66d128c2a339f3cb",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Output clearer",
        "func": "if(msg.ffmpeg === \"clear\"){\n    msg.fcolor = \"\";\n    msg.textColor = \"\";\n    msg.payload = \"\";\n    return msg;\n}\nlet ffmpegOut = msg.payload;\nif (ffmpegOut === \"\" || `${ffmpegOut}`.length < 2){\n    msg.payload = ffmpegOut;\n    msg.textColor = \"\";\n    msg.fcolor = \"\";\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5200,
        "y": 1260,
        "wires": [
            [
                "29f59051e6cbe148"
            ]
        ]
    },
    {
        "id": "86a189cf7830c88d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "FEC watchdog",
        "func": "let constel = global.get(\"device.tx.dvbs2.constel\");\nlet fec = global.get(\"device.tx.dvbs2.fec\");\nlet frame = global.get(\"device.tx.dvbs2.frame\");\nmsg.payload = fec;\nswitch (constel) {\n    case \"qpsk\":\n        if (frame === \"long\") msg.options = [\"1/4\", \"1/3\", \"2/5\", \"1/2\", \"3/5\", \"2/3\", \"3/4\", \"4/5\", \"5/6\", \"8/9\", \"9/10\"];\n        if (frame === \"short\") msg.options = [\"1/4\", \"1/3\", \"2/5\", \"1/2\", \"3/5\", \"2/3\", \"3/4\", \"4/5\", \"5/6\", \"8/9\"];\n        return msg;\n    case \"8psk\":\n        if (frame === \"long\") msg.options = [\"3/5\", \"2/3\", \"3/4\", \"5/6\", \"8/9\", \"9/10\"];\n        if (frame === \"short\") msg.options = [\"3/5\", \"2/3\", \"3/4\", \"5/6\", \"8/9\"];\n        return msg;\n    case \"16apsk\":\n        if (frame === \"long\") msg.options = [\"2/3\", \"3/4\", \"5/6\", \"8/9\", \"9/10\"];\n        if (frame === \"short\") msg.options = [\"2/3\", \"3/4\", \"5/6\", \"8/9\"];\n        return msg;\n    case \"32apsk\":\n        if (frame === \"long\") msg.options = [\"3/4\", \"5/6\", \"8/9\", \"9/10\"];\n        if (frame === \"short\") msg.options = [\"3/4\", \"5/6\", \"8/9\"];\n        return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 1500,
        "wires": [
            [
                "ddf60892397fbc68",
                "cec2f56be1fccf51"
            ]
        ]
    },
    {
        "id": "43ea11b6033b9ecf",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "constel",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.tx.dvbs2.constel",
        "payloadType": "global",
        "x": 2020,
        "y": 2160,
        "wires": [
            [
                "f38c438a231661c6"
            ]
        ]
    },
    {
        "id": "f3b56d13d111f207",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "button animations",
        "func": "// We are not transmitting state...\nmsg.start_button_color = \"\";\nmsg.start_animation = \"fa-hand-paper-o fa-2x\";\nmsg.stop_button_color = \"\";\nmsg.stop_animation = \"fa-stop-circle fa-2x\";\nif(global.get(\"mute\") === \"0\") {\n    // We are transmitting state...\n    msg.start_button_color =\"green\";\n    msg.start_animation = \"fa-spinner fa-spin fa-2x\";\n    msg.stop_button_color = \"darkred\";\n    msg.stop_animation = \"fa-stop-circle fa-2x\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 2080,
        "wires": [
            [
                "508ff50f2a470219",
                "f0c209e940860820"
            ]
        ]
    },
    {
        "id": "6b0cd6504e13d973",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "",
        "filename": "device.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1530,
        "y": 620,
        "wires": [
            [
                "b800a9f107cb3124"
            ]
        ]
    },
    {
        "id": "30312ad9e7c5689b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "THEN restore device settings",
        "func": "let jsonDeviceSettings = global.get(\"device\");\nmsg.payload = jsonDeviceSettings;\n// global.set(\"mute\", \"1\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 720,
        "wires": [
            [
                "30575829e5293823",
                "50469be080414712",
                "7806bcad704424dd",
                "3ea225876900d6cc",
                "04c8e605a02922e7",
                "5256f916f7a707b7",
                "5937fb0a3c880ee7",
                "0116ed63e32c47c2",
                "88e74c15960c22df",
                "475c87a434b0f7e6",
                "271147b0966b0076",
                "5f939f9512d4ba6e",
                "570136a8608a39a6",
                "d09cacf11e30c19d",
                "4e9c1f576e08279b",
                "204d7697c1384266"
            ]
        ]
    },
    {
        "id": "30575829e5293823",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "nco",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.nco",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 1240,
        "wires": [
            [
                "bdfdc40f3409d5eb",
                "5af92414e3f29873"
            ]
        ]
    },
    {
        "id": "50469be080414712",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "digitalgain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.digitalgain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 1340,
        "wires": [
            [
                "92bdb03cfb54e314",
                "e91e846502f35c90"
            ]
        ]
    },
    {
        "id": "7806bcad704424dd",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "fec",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.fec",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 1560,
        "wires": [
            [
                "cec2f56be1fccf51"
            ]
        ]
    },
    {
        "id": "3ea225876900d6cc",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "fecmode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.fecmode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 1620,
        "wires": [
            [
                "152082051caa1d1d"
            ]
        ]
    },
    {
        "id": "04c8e605a02922e7",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "gain",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.gain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 1800,
        "wires": [
            [
                "18d422fe182d6186",
                "be4a04a5a054f988",
                "37b18a222ae30d52"
            ]
        ]
    },
    {
        "id": "5256f916f7a707b7",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "frequency",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.frequency",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 1860,
        "wires": [
            [
                "dffe1e50bcaeb0a5",
                "807128449158f2eb"
            ]
        ]
    },
    {
        "id": "0116ed63e32c47c2",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "constel",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.constel",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 2160,
        "wires": [
            [
                "f38c438a231661c6",
                "c5ceed661f8529ce"
            ]
        ]
    },
    {
        "id": "88e74c15960c22df",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "frame",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.frame",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 2220,
        "wires": [
            [
                "ce96de0f7dba91c5",
                "0c74362e749bcdc4"
            ]
        ]
    },
    {
        "id": "475c87a434b0f7e6",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "pilots",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.pilots",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 2280,
        "wires": [
            [
                "16a3685e614e0995",
                "4a50af4869a33baa"
            ]
        ]
    },
    {
        "id": "271147b0966b0076",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "gainvariable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.gainvariable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2150,
        "y": 2340,
        "wires": [
            [
                "70cb26f62de94a5d",
                "b1b6fc76c723e0f1"
            ]
        ]
    },
    {
        "id": "570136a8608a39a6",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "tssourcemode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.tssourcemode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 2400,
        "wires": [
            [
                "93d8b2c69bdc7792",
                "7b06e3153449eb9a"
            ]
        ]
    },
    {
        "id": "5f939f9512d4ba6e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "fecrange",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.fecrange",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 2460,
        "wires": [
            [
                "33a0bcca85522580",
                "d533bf0f097fedc4"
            ]
        ]
    },
    {
        "id": "d09cacf11e30c19d",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "tssourceaddress",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.tssourceaddress",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 1080,
        "wires": [
            [
                "7f859a7a7ee27404",
                "45b5b704879d30fe"
            ]
        ]
    },
    {
        "id": "3208e4f72b88b92e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "name": "did device settings change",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "deviceChange",
        "payloadType": "global",
        "x": 2600,
        "y": 80,
        "wires": [
            [
                "0c5e1df9f4cacd67"
            ]
        ]
    },
    {
        "id": "0c5e1df9f4cacd67",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "name": "save device settings ",
        "func": "if (msg.payload) {\n    global.set(\"deviceChange\", false);\n    let deviceSettings = global.get(\"device\");\n    msg.payload = JSON.stringify(deviceSettings);\n    return msg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2860,
        "y": 80,
        "wires": [
            [
                "c708b213a5701d8c",
                "c76b9f49508d0e3f"
            ]
        ]
    },
    {
        "id": "c708b213a5701d8c",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "name": "",
        "filename": "device.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3330,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "99a4c83c076987df",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "position": "bottom left",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Device settings changed",
        "x": 3110,
        "y": 140,
        "wires": []
    },
    {
        "id": "c76b9f49508d0e3f",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "359e81623396a0cb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Device changes saved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2860,
        "y": 140,
        "wires": [
            [
                "99a4c83c076987df"
            ]
        ]
    },
    {
        "id": "c4c1592e68a08ac2",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "Terminal Profile",
        "group": "7954d85ae8701623",
        "order": 5,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "STOP {{msg.payload}}",
        "tooltip": "Kill ffmpeg steaming process",
        "color": "",
        "bgcolor": "Darkred",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4120,
        "y": 2060,
        "wires": [
            [
                "aa4a256618f7c4a6",
                "0c94d661261c1f6e"
            ]
        ]
    },
    {
        "id": "5c8e87753e4ad083",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "command": "taskkill /T /F /IM ffmpeg.exe",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill ffmpeg",
        "x": 4640,
        "y": 2120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "923832cf30d7070e",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "command": "taskkill /F /PID ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Kill PID",
        "x": 4640,
        "y": 2180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4d9019e6505648e5",
        "type": "comment",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "Process kill commands would differ on Linux",
        "info": "",
        "x": 4750,
        "y": 2060,
        "wires": []
    },
    {
        "id": "0c94d661261c1f6e",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "get active ffmpeg process id",
        "func": "let payload = msg.payload;\nif (payload === \"1\" && global.get(\"ProfileButtonsActive\")) {\n    msg.backgroundcolor = \"\";\n    let pid = global.get(\"pid\");\n    msg.payload = pid;\n    global.set(\"pid\", \"\");\n    global.set(\"ProfileButtonsActive\", false);\n    global.set(\"ffmpeg_cmd\", \"\");\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4400,
        "y": 2120,
        "wires": [
            [
                "c4c1592e68a08ac2",
                "5c8e87753e4ad083",
                "923832cf30d7070e"
            ]
        ]
    },
    {
        "id": "c326e0457b39d881",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "active pid",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "pid",
        "payloadType": "global",
        "x": 3910,
        "y": 2060,
        "wires": [
            [
                "c4c1592e68a08ac2"
            ]
        ]
    },
    {
        "id": "f79b05ded58d1157",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "then we should stop the transmission and profile",
        "func": "let payload = msg.stop;\nif (payload){\n    global.set(\"stop\", false);\n    msg.payload = \"1\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 2280,
        "wires": [
            [
                "aa4a256618f7c4a6",
                "0c94d661261c1f6e"
            ]
        ]
    },
    {
        "id": "ae8f84a8936bf21e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "global.stop checker",
        "props": [
            {
                "p": "stop",
                "v": "stop",
                "vt": "global"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 3940,
        "y": 2280,
        "wires": [
            [
                "f79b05ded58d1157"
            ]
        ]
    },
    {
        "id": "5937fb0a3c880ee7",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "sr",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.dvbs2.sr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 1920,
        "wires": [
            [
                "aa6d588a480f161c",
                "89b95ad3b6453036"
            ]
        ]
    },
    {
        "id": "7f859a7a7ee27404",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Pass to Pluto",
        "func": "let payload = msg.payload\nlet topic = \"cmd/pluto/\" + global.get(\"call\")+ \"/tx/dvbs2/tssourceaddress\"\nmsg.topic = topic\nmsg.payload = payload\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.tssourceaddress\", payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 1080,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "45b5b704879d30fe",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "TSInput",
        "tooltip": "",
        "group": "bc7afc94660c6b76",
        "order": 4,
        "width": "3",
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "500",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2360,
        "y": 1080,
        "wires": [
            [
                "7f859a7a7ee27404"
            ]
        ]
    },
    {
        "id": "b800a9f107cb3124",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "FIRST set stream mode",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"state_color\", \"\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 620,
        "wires": [
            [
                "35c6cd1a805aeca5"
            ]
        ]
    },
    {
        "id": "35c6cd1a805aeca5",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "tx.stream.mode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.stream.mode",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 1980,
        "wires": [
            [
                "2e677684d13ac6e0",
                "edf4a8f5daf0b0ab"
            ]
        ]
    },
    {
        "id": "8c7733a45d32bf17",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "set mute after reboot",
        "rules": [
            {
                "t": "set",
                "p": "mute",
                "pt": "global",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 660,
        "wires": [
            [
                "55bca069bdb08ee7"
            ]
        ]
    },
    {
        "id": "2b527baf8d8b1450",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "true",
        "payloadType": "str",
        "x": 1310,
        "y": 620,
        "wires": [
            [
                "6b0cd6504e13d973",
                "8c7733a45d32bf17"
            ]
        ]
    },
    {
        "id": "dc1c3fa4fcdb0856",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Tx offset",
        "tooltip": "",
        "group": "9ed1d9a126995072",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2360,
        "y": 1020,
        "wires": [
            [
                "d57c9c3c32e5a58b"
            ]
        ]
    },
    {
        "id": "d57c9c3c32e5a58b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Set global tx offset",
        "func": "let offset = Number(msg.payload);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.offset\", offset);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "4e9c1f576e08279b",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "tx offset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.tx.offset",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 1020,
        "wires": [
            [
                "dc1c3fa4fcdb0856"
            ]
        ]
    },
    {
        "id": "a010bf6559579ac1",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "c927282dfd987c70",
        "name": "",
        "label": "Rx offset",
        "tooltip": "",
        "group": "9ed1d9a126995072",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2360,
        "y": 960,
        "wires": [
            [
                "1b201451fae7fae6"
            ]
        ]
    },
    {
        "id": "204d7697c1384266",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "rx offset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rx.offset",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 960,
        "wires": [
            [
                "a010bf6559579ac1"
            ]
        ]
    },
    {
        "id": "1b201451fae7fae6",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Set global rx offset",
        "func": "let offset = Number(msg.payload);\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.rx.offset\", offset);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2650,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "645cda7b921399b2",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "group": "9ed1d9a126995072",
        "order": 11,
        "width": 3,
        "height": 1,
        "name": "Rx freqeuncy",
        "label": "RX",
        "format": "{{msg.payload}} MHz",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 3250,
        "y": 960,
        "wires": []
    },
    {
        "id": "64a9de4a4bd4dab6",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: longmynd rx freq",
        "func": "let payload = msg.payload;\nlet offset = global.get(\"device.rx.offset\");\nlet rxActual =  Number(payload + offset) / 1000;\nlet topic = \"cmd/longmynd/frequency\";\nmsg.topic = topic\nmsg.payload = rxActual\nglobal.set(\"device.rx.frequency\", rxActual);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 960,
        "wires": [
            [
                "8a16f1f5708afd9e",
                "faf5a12234cf3d6a"
            ]
        ]
    },
    {
        "id": "faf5a12234cf3d6a",
        "type": "calculator",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Hz to kHz",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": true,
        "decimals": "2",
        "x": 3080,
        "y": 960,
        "wires": [
            [
                "645cda7b921399b2"
            ]
        ]
    },
    {
        "id": "dc87a28301ce8d90",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "9f151e324008585b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 3550,
        "y": 80,
        "wires": [
            [
                "d88296547a44f159"
            ]
        ]
    },
    {
        "id": "d88296547a44f159",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "9f151e324008585b",
        "name": "",
        "filename": "settings.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3730,
        "y": 80,
        "wires": [
            [
                "3b59a3e0f9422294"
            ]
        ]
    },
    {
        "id": "3b59a3e0f9422294",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "9f151e324008585b",
        "name": "function 2",
        "func": "let jsonSettings = JSON.parse(msg.payload);\nmsg.payload = jsonSettings;\nmsg.codec = jsonSettings.CODEC;\nglobal.set(\"settings\", jsonSettings);\nglobal.set(\"device.tx.dvbs2.constel\", jsonSettings.MODE);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3900,
        "y": 80,
        "wires": [
            [
                "a49d494221eac856"
            ]
        ]
    },
    {
        "id": "a49d494221eac856",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "9f151e324008585b",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4060,
        "y": 80,
        "wires": []
    },
    {
        "id": "c140f8f622e33238",
        "type": "status",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "scope": [
            "347c8041af1a52e0"
        ],
        "x": 1380,
        "y": 260,
        "wires": [
            [
                "b2786302ea5b87d8"
            ]
        ]
    },
    {
        "id": "b2786302ea5b87d8",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "Pluto connection status",
        "func": "let status=msg.status.text;\nlet fill = msg.status.fill;\nlet human_status;\nif (status == \"node-red:common.status.connecting\") {\n    human_status = \"Connecting\";\n    global.set(\"state_color\", \"orange\");\n}\nif (status == \"node-red:common.status.connected\") {\n    human_status = \"Connected\";\n}\nif (status == \"node-red:common.status.disconnected\") {\n    human_status = \"Disconnected\";\n    global.set(\"state_color\", \"orange\");\n\n}\nif (fill == \"yellow\") {\n    msg.achtergrond_kleur = \"black\"\n}\nif (fill == \"green\") {\n    msg.achtergrond_kleur = \"white\"\n}\nif (fill == \"red\") {\n    msg.achtergrond_kleur = \"white\"\n}\nmsg.human_status=human_status;\nmsg.kleur = fill;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 260,
        "wires": [
            [
                "8105dd1d410bdd4b"
            ]
        ]
    },
    {
        "id": "8105dd1d410bdd4b",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "group": "bc7afc94660c6b76",
        "order": 2,
        "width": "3",
        "height": 1,
        "passthru": false,
        "label": "{{human_status}}",
        "tooltip": "",
        "color": "{{achtergrond_kleur}}",
        "bgcolor": "{{kleur}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1770,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "43c746e7299a60f3",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "group": "bc7afc94660c6b76",
        "order": 1,
        "width": "2",
        "height": 1,
        "name": "",
        "label": "Pluto",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1370,
        "y": 320,
        "wires": []
    },
    {
        "id": "23f54550ba5b6a79",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "group": "7954d85ae8701623",
        "order": 2,
        "width": "5",
        "height": 1,
        "name": "Video bitrate",
        "label": "<font size=3>Video bitrate",
        "format": "<font size=3>{{msg.payload}} kb/s",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1730,
        "y": 340,
        "wires": []
    },
    {
        "id": "5d929a20d665af8d",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "group": "7954d85ae8701623",
        "order": 1,
        "width": "4",
        "height": 1,
        "name": "TS bitrate",
        "label": "<font size=3>TS",
        "format": "<font size=3>{{msg.payload}} kb/s",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 460,
        "wires": []
    },
    {
        "id": "332cd73b70ec7dca",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.VBITRATE",
        "payloadType": "global",
        "x": 1460,
        "y": 380,
        "wires": [
            [
                "23f54550ba5b6a79"
            ]
        ]
    },
    {
        "id": "b62a3f484010816e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.tx.dvbs2.ts.bitrate",
        "payloadType": "global",
        "x": 1470,
        "y": 440,
        "wires": [
            [
                "8d58e07463dad267"
            ]
        ]
    },
    {
        "id": "f9186ed78accdb6c",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "HW",
        "tooltip": "",
        "place": "Select...",
        "group": "4f22c4dbc8bc16dd",
        "order": 2,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "h264_nvenc",
                "type": "str"
            },
            {
                "label": "",
                "value": "hevc_nvenc",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2390,
        "y": 280,
        "wires": [
            [
                "1bb882ca67278b69"
            ]
        ]
    },
    {
        "id": "a0addd449f41ee70",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "SW",
        "tooltip": "",
        "place": "Select...",
        "group": "4f22c4dbc8bc16dd",
        "order": 3,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "libx264",
                "type": "str"
            },
            {
                "label": "",
                "value": "libx265",
                "type": "str"
            },
            {
                "label": "",
                "value": "libvvenc",
                "type": "str"
            },
            {
                "label": "",
                "value": "libaom-av1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2390,
        "y": 360,
        "wires": [
            [
                "1bb882ca67278b69"
            ]
        ]
    },
    {
        "id": "3c2665b335deadcc",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "FPS",
        "tooltip": "",
        "place": "",
        "group": "4f22c4dbc8bc16dd",
        "order": 5,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "5fps",
                "value": "5",
                "type": "str"
            },
            {
                "label": "10 fps",
                "value": "10",
                "type": "str"
            },
            {
                "label": "15 fps",
                "value": "15",
                "type": "str"
            },
            {
                "label": "20 fps",
                "value": "20",
                "type": "str"
            },
            {
                "label": "25 fps",
                "value": "25",
                "type": "str"
            },
            {
                "label": "30 fps",
                "value": "30",
                "type": "str"
            },
            {
                "label": "48 fps",
                "value": "48",
                "type": "str"
            },
            {
                "label": "50 fps",
                "value": "50",
                "type": "str"
            },
            {
                "label": "60 fps",
                "value": "60",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2390,
        "y": 420,
        "wires": [
            [
                "6e2b3c9e08662125"
            ]
        ]
    },
    {
        "id": "142bd58e14cabe24",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "ACH",
        "tooltip": "",
        "place": "Select option",
        "group": "4f22c4dbc8bc16dd",
        "order": 6,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "Mono",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Stereo",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2390,
        "y": 480,
        "wires": [
            [
                "ae40a9e5bdd0d113"
            ]
        ]
    },
    {
        "id": "034d4cfc3008e95a",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "group": "4f22c4dbc8bc16dd",
        "order": 1,
        "width": "3",
        "height": 1,
        "name": "",
        "label": "Codec",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2330,
        "y": 760,
        "wires": []
    },
    {
        "id": "1bb882ca67278b69",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "function 1",
        "func": "let payload = msg.payload;\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 320,
        "wires": [
            [
                "5989fbe4c1133db2"
            ]
        ]
    },
    {
        "id": "6e2b3c9e08662125",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Framerate",
        "rules": [
            {
                "t": "set",
                "p": "settings.FPS",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 420,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "ae40a9e5bdd0d113",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Audio channels",
        "rules": [
            {
                "t": "set",
                "p": "settings.AUDIO",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2620,
        "y": 480,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "5989fbe4c1133db2",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Codec",
        "rules": [
            {
                "t": "set",
                "p": "settings.CODEC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2730,
        "y": 320,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "b003500f8ea3ffe1",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "Image",
        "tooltip": "",
        "place": "",
        "group": "4f22c4dbc8bc16dd",
        "order": 8,
        "width": "4",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "426x240",
                "type": "str"
            },
            {
                "label": "",
                "value": "640x360",
                "type": "str"
            },
            {
                "label": "",
                "value": "854x480",
                "type": "str"
            },
            {
                "label": "",
                "value": "960x540",
                "type": "str"
            },
            {
                "label": "",
                "value": "1024x576",
                "type": "str"
            },
            {
                "label": "",
                "value": "1280x720",
                "type": "str"
            },
            {
                "label": "",
                "value": "1600x900",
                "type": "str"
            },
            {
                "label": "",
                "value": "1920x1080",
                "type": "str"
            },
            {
                "label": "",
                "value": "2560x1440",
                "type": "str"
            },
            {
                "label": "",
                "value": "3840x2160",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2390,
        "y": 540,
        "wires": [
            [
                "d2a7c63d9b2fe699"
            ]
        ]
    },
    {
        "id": "d2a7c63d9b2fe699",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Image size",
        "rules": [
            {
                "t": "set",
                "p": "settings.IMAGESIZE",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 540,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "320ab26158363e57",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "label": "ABR",
        "tooltip": "",
        "place": "Select option",
        "group": "4f22c4dbc8bc16dd",
        "order": 7,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "8",
                "type": "str"
            },
            {
                "label": "",
                "value": "12",
                "type": "str"
            },
            {
                "label": "",
                "value": "16",
                "type": "str"
            },
            {
                "label": "",
                "value": "24",
                "type": "str"
            },
            {
                "label": "",
                "value": "32",
                "type": "str"
            },
            {
                "label": "",
                "value": "48",
                "type": "str"
            },
            {
                "label": "",
                "value": "64",
                "type": "str"
            },
            {
                "label": "",
                "value": "96",
                "type": "str"
            },
            {
                "label": "",
                "value": "128",
                "type": "str"
            },
            {
                "label": "",
                "value": "192",
                "type": "str"
            },
            {
                "label": "",
                "value": "256",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2390,
        "y": 620,
        "wires": [
            [
                "9c6e205117c83338"
            ]
        ]
    },
    {
        "id": "9c6e205117c83338",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Audio Bitrate",
        "rules": [
            {
                "t": "set",
                "p": "settings.ABITRATE",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 620,
        "wires": [
            [
                "6bfbf0101b2cd3a4"
            ]
        ]
    },
    {
        "id": "6bfbf0101b2cd3a4",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Settings manager",
        "func": "let jsonSettings = global.get(\"settings\");\nmsg.codec = jsonSettings.CODEC;\nmsg.payload = JSON.stringify(jsonSettings);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 420,
        "wires": [
            [
                "34feacf8cac79e5e",
                "3eb70786a69e6c70"
            ]
        ]
    },
    {
        "id": "34feacf8cac79e5e",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "filename": "settings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 3170,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8c06bae5f257a948",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "image size",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.IMAGESIZE",
        "payloadType": "global",
        "x": 2150,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "072a53bc4325b8e2",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "image size",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.IMAGESIZE",
        "payloadType": "global",
        "x": 2150,
        "y": 540,
        "wires": [
            [
                "b003500f8ea3ffe1"
            ]
        ]
    },
    {
        "id": "da44a9637b5774a0",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "audio bitrate",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.ABITRATE",
        "payloadType": "global",
        "x": 2160,
        "y": 620,
        "wires": [
            [
                "320ab26158363e57"
            ]
        ]
    },
    {
        "id": "3db47b10f2ad0660",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "audio channels",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.AUDIO",
        "payloadType": "global",
        "x": 2160,
        "y": 480,
        "wires": [
            [
                "142bd58e14cabe24"
            ]
        ]
    },
    {
        "id": "9afe5b50e0c2e439",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "fps",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.FPS",
        "payloadType": "global",
        "x": 2130,
        "y": 420,
        "wires": [
            [
                "3c2665b335deadcc"
            ]
        ]
    },
    {
        "id": "3eb70786a69e6c70",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "Set globals",
        "rules": [
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "stop",
                "pt": "global",
                "to": "true",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f1c89523da4ca9da",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "codec",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.CODEC",
        "payloadType": "global",
        "x": 2140,
        "y": 760,
        "wires": [
            [
                "034d4cfc3008e95a"
            ]
        ]
    },
    {
        "id": "1411feb53b899df2",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1f5722b7aff1a710",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.CODEC",
        "payloadType": "global",
        "x": 2190,
        "y": 320,
        "wires": [
            [
                "f9186ed78accdb6c",
                "a0addd449f41ee70"
            ]
        ]
    },
    {
        "id": "6650408d269637c4",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "ba42e703170bee84",
        "name": "set our callsign",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.callsign;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 80,
        "wires": [
            [
                "644c4e9fd6d1aafc"
            ]
        ]
    },
    {
        "id": "0dc39dc2f82350ce",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "ba42e703170bee84",
        "name": "",
        "filename": "device.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 390,
        "y": 80,
        "wires": [
            [
                "6650408d269637c4"
            ]
        ]
    },
    {
        "id": "762e2c70acd9ebe0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "send min device FEC for variable fecmode ",
        "func": "if (msg.fec) {\n    global.set(\"deviceChange\", true);\n    let payload = msg.fec;\n    let topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fec`;\n    global.set(\"stop\", true);\n    global.set(\"device.tx.dvbs2.fec\", payload);\n    // global.set(\"settings.FEC\", payload);\n    msg.topic = topic\n    msg.payload = payload\n    return msg;\n}\nif(msg.defaultFEC){\n    global.set(\"deviceChange\", true);\n    let payload = global.get(\"settings.FEC\");\n    let topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fec`;\n    global.set(\"stop\", true);\n    global.set(\"device.tx.dvbs2.fec\", payload);\n    msg.topic = topic\n    msg.payload = payload\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 1620,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "f60d5eacebf59c8f",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "group": "9ed1d9a126995072",
        "order": 37,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "FEC",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 710,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b1fb472a0a5e24a7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "fixed fecmode setter",
        "func": "let topic = `${global.get(\"cmdPath\")}/tx/dvbs2/fecmode`;\nmsg.topic = topic\nmsg.payload = \"fixed\";\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.dvbs2.fecmode\", \"fixed\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 1560,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "a5d3ec26a3634e1e",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "color injector",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "state_color",
        "payloadType": "global",
        "x": 1340,
        "y": 680,
        "wires": [
            [
                "7d6077cea86f2378"
            ]
        ]
    },
    {
        "id": "40caf32a1fc66903",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tune",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4520,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f34bfe124eab12e8",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 4330,
        "y": 100,
        "wires": [
            [
                "40caf32a1fc66903"
            ]
        ]
    },
    {
        "id": "78db13f139016718",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 4330,
        "y": 160,
        "wires": [
            [
                "7aa0b41ed418f215"
            ]
        ]
    },
    {
        "id": "7aa0b41ed418f215",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tune_table",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4540,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "eb77e66d5c0acdae",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "tune_done",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 4350,
        "y": 220,
        "wires": [
            [
                "cffbb4b1eb45b8da"
            ]
        ]
    },
    {
        "id": "cffbb4b1eb45b8da",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tune_done",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4540,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "538b8437c0ff15ad",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "channel calibration function",
        "func": "let calibrated = Boolean(msg.payload);\nif (calibrated && global.get(\"tune_done\")) {\n    let tune_table = global.get(\"tune_table\");\n    global.set(\"tune_done\", false);\n    msg.payload = tune_table[26];\n    msg.options = [\n        { \"144.6MHz\": \"144600000\" },\n        { \"436MHz\": \"436000000\" },\n        { \"437MHz\": \"436999998\" },\n        { \"1242MHz\": \"1242000000\" },\n        { \"1255MHz\": \"1255000062\" },\n        { \"CH1 500/333/250/125KS\": `${tune_table[0]}` },\n        { \"CH2 125KS\": `${tune_table[1]}` },\n        { \"CH3 1000/500/333/250/125KS\": `${tune_table[2]}` },\n        { \"CH4 125KS\": `${tune_table[3]}` },\n        { \"CH5 500/333/250/125KS\": `${tune_table[4]}` },\n        { \"CH6 125KS\": `${tune_table[5]}` },\n        { \"CH7 500/333/250/125KS\": `${tune_table[6]}` },\n        { \"CH8 125KS\": `${tune_table[7]}` },\n        { \"CH9 1000/500/333/250/125KS\": `${tune_table[8]}` },\n        { \"CH10 125KS\": `${tune_table[9]}` },\n        { \"CH11 500/333/250/125KS\": `${tune_table[10]}` },\n        { \"CH12 125KS\": `${tune_table[11]}` },\n        { \"CH13 500/333/250/125KS\": `${tune_table[12]}` },\n        { \"CH14 125KS\": `${tune_table[13]}` },\n        { \"CH15 1000/500/333/250/125KS\": `${tune_table[14]}` },\n        { \"CH16 125KS\": `${tune_table[15]}` },\n        { \"CH17 500/333/250/125KS\": `${tune_table[16]}` },\n        { \"CH18 125KS\": `${tune_table[17]}` },\n        { \"CH19 333/250/125KS\": `${tune_table[18]}` },\n        { \"CH20 125KS\": `${tune_table[19]}` },\n        { \"CH21 333/250/125KS\": `${tune_table[20]}` },\n        { \"CH22 125KS\": `${tune_table[21]}` },\n        { \"CH23 333/250/125KS\": `${tune_table[22]}` },\n        { \"CH24 125KS\": `${tune_table[23]}` },\n        { \"CH25 333/250/125KS\": `${tune_table[24]}` },\n        { \"CH26 125KS\": `${tune_table[25]}` },\n        { \"CH27 333/250/125KS\": `${tune_table[26]}` },\n    ]\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4720,
        "y": 280,
        "wires": [
            [
                "dffe1e50bcaeb0a5",
                "edea5b446673c7e5"
            ]
        ]
    },
    {
        "id": "fca0dc49e0dbc8c8",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "filename": "channels.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4840,
        "y": 220,
        "wires": [
            [
                "231152bfc003a87e"
            ]
        ]
    },
    {
        "id": "edea5b446673c7e5",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "once calibrated we save our list",
        "func": "let payload = msg.options;\nmsg.payload = JSON.stringify(payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5010,
        "y": 280,
        "wires": [
            [
                "fca0dc49e0dbc8c8"
            ]
        ]
    },
    {
        "id": "778857993c3190e4",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "Channel calibration checker ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "tune_done",
        "payloadType": "global",
        "x": 4400,
        "y": 280,
        "wires": [
            [
                "538b8437c0ff15ad"
            ]
        ]
    },
    {
        "id": "8879551bc103b8c4",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 4710,
        "y": 100,
        "wires": [
            [
                "6c953890d626accb"
            ]
        ]
    },
    {
        "id": "6c953890d626accb",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "filename": "channels.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4880,
        "y": 100,
        "wires": [
            [
                "09f981f156e98728"
            ]
        ]
    },
    {
        "id": "09f981f156e98728",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "send channel options",
        "func": "let payload = msg.payload;\nmsg.payload = global.get(\"device.tx.frequency\");\nmsg.options = JSON.parse(payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5100,
        "y": 100,
        "wires": [
            [
                "dffe1e50bcaeb0a5"
            ]
        ]
    },
    {
        "id": "2e0709eeb3596e1a",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Channel calibration complete!",
        "x": 5090,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "231152bfc003a87e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "4b15878090b5548b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Channel calibration complete!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4820,
        "y": 160,
        "wires": [
            [
                "2e0709eeb3596e1a"
            ]
        ]
    },
    {
        "id": "9d36e0103e48d0eb",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "Build device list",
        "func": "let ffmpegOut = msg.payload;\nif (ffmpegOut.includes(\"[dshow\")) {\n  let device_array = global.get(\"device_array\");\n  let indexStart = getPosition(ffmpegOut, '\"', 1);\n  let indexEnd = getPosition(ffmpegOut, '\"', 2);\n  const deviceString = ffmpegOut.substring(indexStart + 1, indexEnd);\n  device_array.push(deviceString)\n  global.set(\"device_array\", device_array);\n  msg.payload = deviceString;\n  return msg;\n}\n\nfunction getPosition(string, subString, index) {\n  return string.split(subString, index).join(subString).length;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4760,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "912db50690e71312",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "emptry IO device array",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 4380,
        "y": 660,
        "wires": [
            [
                "52589d675ecb5bd3",
                "2d69c56629fd6ada"
            ]
        ]
    },
    {
        "id": "52589d675ecb5bd3",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "device_array",
        "rules": [
            {
                "t": "set",
                "p": "device_array",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4570,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "81e222ea9f35567c",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "command": "scripts\\check_devices.bat",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "find devices",
        "x": 4530,
        "y": 560,
        "wires": [
            [],
            [
                "9d36e0103e48d0eb"
            ],
            [
                "6c240bebc70161fa"
            ]
        ]
    },
    {
        "id": "ce7363465aea09c2",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "group": "e8adab232b1d4dce",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Find Devices",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4110,
        "y": 580,
        "wires": [
            [
                "3c7d7c35ead08295"
            ]
        ]
    },
    {
        "id": "92680e051846903d",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "label": "Audio Device",
        "tooltip": "",
        "place": "Select option",
        "group": "e8adab232b1d4dce",
        "order": 13,
        "width": 21,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 5010,
        "y": 560,
        "wires": [
            [
                "d5144c0538d61e55"
            ]
        ]
    },
    {
        "id": "6c240bebc70161fa",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "function 3",
        "func": "let device_array = global.get(\"device_array\");\nlet array = [];\nfor (let index = 0; index < device_array.length; index++) {\n    array[index] = device_array[index];\n}\nmsg.payload = array[0];\nmsg.options = array;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4760,
        "y": 620,
        "wires": [
            [
                "92680e051846903d",
                "061c529da56f288b"
            ]
        ]
    },
    {
        "id": "061c529da56f288b",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "label": "Video Device",
        "tooltip": "",
        "place": "Select option",
        "group": "e8adab232b1d4dce",
        "order": 14,
        "width": 21,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 5010,
        "y": 640,
        "wires": [
            [
                "6cdbc7e33d7543c1"
            ]
        ]
    },
    {
        "id": "d5144c0538d61e55",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.audio_device",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5240,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6cdbc7e33d7543c1",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "settings.video_device",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "bitratechange",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5240,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "e48b23e1d46a182a",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "0514d7b9722f644b",
        "name": "",
        "label": "TS RX stream IP",
        "tooltip": "",
        "group": "6140f866127cd620",
        "order": 1,
        "width": "3",
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 5030,
        "y": 760,
        "wires": [
            [
                "1b33b2ee0e91bf0a"
            ]
        ]
    },
    {
        "id": "1b33b2ee0e91bf0a",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "0514d7b9722f644b",
        "name": "save state",
        "func": "let tsip = msg.payload\nglobal.set(\"device.rx.tsip\", tsip);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5330,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "3b2bfc1de615d1c2",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "0514d7b9722f644b",
        "name": "set tuner ts ip address",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.rx.tsip;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4780,
        "y": 760,
        "wires": [
            [
                "e48b23e1d46a182a"
            ]
        ]
    },
    {
        "id": "d0d8193cbbe6f9f6",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "0514d7b9722f644b",
        "name": "",
        "filename": "device.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4550,
        "y": 760,
        "wires": [
            [
                "3b2bfc1de615d1c2"
            ]
        ]
    },
    {
        "id": "1aa57bcff3051b25",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "0514d7b9722f644b",
        "name": "rx.tsip",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.rx.tsip",
        "payloadType": "global",
        "x": 4330,
        "y": 760,
        "wires": [
            [
                "d0d8193cbbe6f9f6"
            ]
        ]
    },
    {
        "id": "378dce373fcfc379",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "ffplay ip and title setter",
        "func": "let title = global.get('ffplay_title');\nlet ontop = global.get('device.rx.ffplay_ontop') === true ? \"-alwaysontop\" : \"\";\ntitle = `\\\"${title}: Press \\'9\\',\\'0\\' for volume down and up, \\'m\\' for mute, right arrow key \\`->\\` to seek to latest frame\\\"`;\nglobal.set(\"ffplay_title\", \"\");\nlet imagesize = global.get('device.rx.ffplay_size');\nlet volume = global.get('device.rx.ffplay_volume');\nlet xPos = imagesize.indexOf(\"x\");\nlet hor = imagesize.substr(0, xPos);\nlet vert = imagesize.substr(xPos + 1, imagesize.length);\nmsg.size = `${hor}x${vert}`;\nmsg.payload = `${global.get(\"device.rx.tsip\")} ${title} ${hor} ${vert} ${volume} ${global.get(\"ffplay_top_exit\")} ${global.get(\"ffplay_left_exit\")} ${ontop}`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4180,
        "y": 2400,
        "wires": [
            [
                "023820f309b020da"
            ]
        ]
    },
    {
        "id": "42fadc716a7bbdd3",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "faddbd496d5afa18",
        "name": "",
        "label": "rx config for device control",
        "tooltip": "",
        "group": "2275ce4aba6ae57e",
        "order": 1,
        "width": "4",
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 5050,
        "y": 860,
        "wires": [
            [
                "95edb2da87d8257d"
            ]
        ]
    },
    {
        "id": "95edb2da87d8257d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "faddbd496d5afa18",
        "name": "save state",
        "func": "let configIP = msg.payload\nglobal.set(\"device.rx.configIP\", configIP);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5330,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "f410cc2d0716c94e",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "faddbd496d5afa18",
        "name": "set tuner config ip address",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.rx.configIP;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4800,
        "y": 860,
        "wires": [
            [
                "42fadc716a7bbdd3"
            ]
        ]
    },
    {
        "id": "1c92b6bf73c98823",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "faddbd496d5afa18",
        "name": "",
        "filename": "device.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4550,
        "y": 860,
        "wires": [
            [
                "f410cc2d0716c94e"
            ]
        ]
    },
    {
        "id": "678fdf9668503af2",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "faddbd496d5afa18",
        "name": "rx.configIP",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.rx.configIP",
        "payloadType": "global",
        "x": 4350,
        "y": 860,
        "wires": [
            [
                "1c92b6bf73c98823"
            ]
        ]
    },
    {
        "id": "918410b673d9453b",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "command": "taskkill /T /F /IM ffplay.exe",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill ffplay",
        "x": 4640,
        "y": 2300,
        "wires": [
            [],
            [],
            [
                "71e94c828318f918"
            ]
        ]
    },
    {
        "id": "6e64d146147821e7",
        "type": "trigger",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "Kill and wait 250ms",
        "op1": "1",
        "op2": "1",
        "op1type": "num",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 3910,
        "y": 2360,
        "wires": [
            [
                "918410b673d9453b"
            ],
            [
                "378dce373fcfc379"
            ]
        ]
    },
    {
        "id": "865c9cd7fad69b04",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "command": "powershell scripts\\check_minitioune_open.ps1",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Powershell to check if minitioune is running",
        "x": 2090,
        "y": 2700,
        "wires": [
            [
                "8c74bea29b3244b0"
            ],
            [],
            []
        ]
    },
    {
        "id": "8c74bea29b3244b0",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "if we are not 0, we have a PID",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2530,
        "y": 2700,
        "wires": [
            [
                "517a7337244c67a7"
            ],
            [
                "c8e4e5eb867b6e88"
            ]
        ]
    },
    {
        "id": "d7eb35aa7c9a4908",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Minitiouner isn't running, open?",
        "x": 2430,
        "y": 2880,
        "wires": [
            [
                "3a1ea47d1bb87edc"
            ]
        ]
    },
    {
        "id": "cdb49e4080a5ecb2",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "set dialog text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Minitiouner is not running... open?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 2880,
        "wires": [
            [
                "d7eb35aa7c9a4908"
            ]
        ]
    },
    {
        "id": "f59601c8ef54fb30",
        "type": "ui_text_input",
        "z": "2ec6a7ddfe0cd173",
        "g": "eb1929e7f191e020",
        "name": "",
        "label": "minitioune path",
        "tooltip": "",
        "group": "2275ce4aba6ae57e",
        "order": 2,
        "width": "0",
        "height": "0",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 5020,
        "y": 960,
        "wires": [
            [
                "fa64203cbbfc748d"
            ]
        ]
    },
    {
        "id": "fa64203cbbfc748d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "eb1929e7f191e020",
        "name": "save state",
        "func": "let tiounePath = msg.payload\nglobal.set(\"device.minitioune_path\", tiounePath);\nglobal.set(\"deviceChange\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5330,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "9077d20ca65ab2fd",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "eb1929e7f191e020",
        "name": "minitiounePath",
        "func": "let jsonDeviceSettings = JSON.parse(msg.payload);\nmsg.payload = jsonDeviceSettings;\nglobal.set(\"device\", jsonDeviceSettings);\nmsg.payload = jsonDeviceSettings.minitioune_path;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4760,
        "y": 960,
        "wires": [
            [
                "f59601c8ef54fb30"
            ]
        ]
    },
    {
        "id": "f6a666d0271a5d24",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "eb1929e7f191e020",
        "name": "",
        "filename": "device.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 4550,
        "y": 960,
        "wires": [
            [
                "9077d20ca65ab2fd"
            ]
        ]
    },
    {
        "id": "63bd7ee216c6cf79",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "eb1929e7f191e020",
        "name": "minitioune_path",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.minitioune_path",
        "payloadType": "global",
        "x": 4360,
        "y": 960,
        "wires": [
            [
                "f6a666d0271a5d24"
            ]
        ]
    },
    {
        "id": "25f28cc77302135e",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Open Minitiouner",
        "x": 3150,
        "y": 2780,
        "wires": [
            [],
            [],
            [
                "918410b673d9453b"
            ]
        ]
    },
    {
        "id": "274b304d8404d31e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "set minitiouner path",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "device.minitioune_path",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2910,
        "y": 2880,
        "wires": [
            [
                "25f28cc77302135e",
                "93e49a0d26636e17"
            ]
        ]
    },
    {
        "id": "3a1ea47d1bb87edc",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "Check if okay",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2700,
        "y": 2880,
        "wires": [
            [
                "274b304d8404d31e"
            ]
        ]
    },
    {
        "id": "93e49a0d26636e17",
        "type": "trigger",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "trigger tune 7s after opening",
        "op1": "1",
        "op2": "last_rx_tune_udp",
        "op1type": "str",
        "op2type": "global",
        "duration": "9",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 3200,
        "y": 2880,
        "wires": [
            [
                "34a5dcd51ab8d855"
            ],
            [
                "58a19d39b1eb3028"
            ]
        ]
    },
    {
        "id": "748c39ac026e286f",
        "type": "udp out",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 3790,
        "y": 2880,
        "wires": []
    },
    {
        "id": "58a19d39b1eb3028",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "replay last tune command to udp multicast",
        "func": "let payload = msg.payload;\nmsg.payload = payload;\nmsg.ip = global.get(\"device.rx.configIP\")\nmsg.port = 6789;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 2880,
        "wires": [
            [
                "748c39ac026e286f"
            ]
        ]
    },
    {
        "id": "428a0fc47da7621b",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "f6218c30fc4ec8b7",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 5280,
        "y": 400,
        "wires": []
    },
    {
        "id": "a773a2941ec99d3d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "f6218c30fc4ec8b7",
        "name": "ts analyse",
        "func": "let tsanalysis = JSON.parse(msg.payload);\nif (Object.keys(tsanalysis).length === 0 && tsanalysis.constructor === Object) {\n    msg.payload = \"failed\";\n    return msg\n    }\nlet stats = {};\nfor (let index = 0; index < tsanalysis.programs.length; index++) {\n    const program = tsanalysis.programs[index];\n    if (program.hasOwnProperty('tags')) {\n        stats['program_id'] = program.program_id;\n        stats['nb_streams'] = program.nb_streams;\n        stats['service_name'] = program.tags.service_name;\n        stats['service_provider'] = program.tags.service_provider;\n\n    }\n    // if (program.nb_streams !== 0){\n    //   for (let i = 0; i < program.streams.length; i++) {\n    //     const stream = program.streams[i];\n    //     stats[`stream ${i}: codec_name`] = stream.codec_name;\n    //     stats[`stream ${i}: codec_long_name`] = stream.codec_long_name;\n    //     if (stream.codec_type === \"video\") {\n    //       let sw = true;\n    //       if (stream.hasOwnProperty('profile')) sw = false;\n    //       stats[`stream ${i}: codec_sw`] = sw;\n    //     }\n\n    //   }\n    // }\n}\nlet output = JSON.stringify(`${stats.service_name} : ${stats.service_provider}`);\n// global.set(\"ffplay_title\", output)\nglobal.set(\"tsanalysis\", \"\");\nmsg.payload = output;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5080,
        "y": 400,
        "wires": [
            [
                "428a0fc47da7621b",
                "92f5f62ed5cadc7c"
            ]
        ]
    },
    {
        "id": "b61cc3d9e4fb5593",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "f6218c30fc4ec8b7",
        "name": "build json ts analysis",
        "func": "let payload = msg.payload;\nlet stringArray = global.get(\"tsanalysis\");\nstringArray += payload;\nglobal.set(\"tsanalysis\", stringArray);\n\nif(stringArray === \"\") return;\nlet yes = isJsonString(stringArray);\nif(yes){\n    msg.payload = stringArray;\n    return msg;\n}\n\nfunction isJsonString(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4860,
        "y": 400,
        "wires": [
            [
                "a773a2941ec99d3d"
            ]
        ]
    },
    {
        "id": "92f5f62ed5cadc7c",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "f6218c30fc4ec8b7",
        "position": "top right",
        "displayTime": "5",
        "highlight": "Magenta",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 5310,
        "y": 460,
        "wires": []
    },
    {
        "id": "de0df3db418f176f",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "f6218c30fc4ec8b7",
        "command": "scripts\\ffprobe.bat",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "ffprobe",
        "x": 4630,
        "y": 400,
        "wires": [
            [
                "b61cc3d9e4fb5593"
            ],
            [],
            []
        ]
    },
    {
        "id": "ef4d188e14a5bed7",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "f6218c30fc4ec8b7",
        "name": "",
        "func": "msg.payload = global.get(\"device.rx.tsip\");\nglobal.set(\"tsanalysis\", \"\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 400,
        "wires": [
            [
                "de0df3db418f176f"
            ]
        ]
    },
    {
        "id": "6575451e79e0ad67",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "f6218c30fc4ec8b7",
        "name": "",
        "group": "6140f866127cd620",
        "order": 2,
        "width": "2",
        "height": 1,
        "passthru": true,
        "label": "Ts analyse",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4330,
        "y": 400,
        "wires": [
            [
                "ef4d188e14a5bed7"
            ]
        ]
    },
    {
        "id": "f5725b8f8885fb91",
        "type": "comment",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "if our spawned minitiouner dies, kill ffplay",
        "info": "",
        "x": 3160,
        "y": 2700,
        "wires": []
    },
    {
        "id": "c8e4e5eb867b6e88",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "check minitiouner path defined",
        "property": "device.minitioune_path",
        "propertyType": "global",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2190,
        "y": 2780,
        "wires": [
            [
                "cdb49e4080a5ecb2"
            ],
            [
                "7daf6fdd23e69a4c"
            ]
        ]
    },
    {
        "id": "048ae9d864757a44",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "check path",
        "x": 2730,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "7daf6fdd23e69a4c",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "set dialog text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "please define minitiouner path",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 2780,
        "wires": [
            [
                "048ae9d864757a44"
            ]
        ]
    },
    {
        "id": "517a7337244c67a7",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "use ffplay check",
        "property": "device.rx.ffplay",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2800,
        "y": 2660,
        "wires": [
            [
                "6e64d146147821e7"
            ]
        ]
    },
    {
        "id": "34a5dcd51ab8d855",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "use ffplay check",
        "property": "device.rx.ffplay",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3480,
        "y": 2780,
        "wires": [
            [
                "378dce373fcfc379"
            ]
        ]
    },
    {
        "id": "0566516b8c2f5f60",
        "type": "ui_switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "Use ffplay",
        "label": "",
        "tooltip": "use ffplay",
        "group": "6140f866127cd620",
        "order": 5,
        "width": "1",
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 5340,
        "y": 2080,
        "wires": [
            [
                "4823c6eed9e03e46"
            ]
        ]
    },
    {
        "id": "4823c6eed9e03e46",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "use ffplay",
        "func": "let payload = msg.payload\nglobal.set(\"device.rx.ffplay\",  payload);\nglobal.set(\"deviceChange\", true);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5520,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "e29b0f596d18b958",
        "type": "ui_switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay ontop",
        "label": "",
        "tooltip": "ffplay ontop",
        "group": "6140f866127cd620",
        "order": 6,
        "width": "1",
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 5350,
        "y": 2160,
        "wires": [
            [
                "c99bca3dafb85e2c"
            ]
        ]
    },
    {
        "id": "c99bca3dafb85e2c",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay ontop",
        "func": "let payload = msg.payload\nglobal.set(\"device.rx.ffplay_ontop\", payload);\nglobal.set(\"deviceChange\", true);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5530,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "0b68cbbed95acffe",
        "type": "ui_dropdown",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "",
        "label": "",
        "tooltip": "ffplay start up size",
        "place": "",
        "group": "6140f866127cd620",
        "order": 8,
        "width": "3",
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "426x240",
                "type": "str"
            },
            {
                "label": "",
                "value": "640x360",
                "type": "str"
            },
            {
                "label": "",
                "value": "854x480",
                "type": "str"
            },
            {
                "label": "",
                "value": "960x540",
                "type": "str"
            },
            {
                "label": "",
                "value": "1024x576",
                "type": "str"
            },
            {
                "label": "",
                "value": "1280x720",
                "type": "str"
            },
            {
                "label": "",
                "value": "1600x900",
                "type": "str"
            },
            {
                "label": "",
                "value": "1920x1080",
                "type": "str"
            },
            {
                "label": "",
                "value": "2560x1440",
                "type": "str"
            },
            {
                "label": "",
                "value": "3840x2160",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 5340,
        "y": 2240,
        "wires": [
            [
                "ade9869b5330a585"
            ]
        ]
    },
    {
        "id": "ade9869b5330a585",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay size",
        "func": "let payload = msg.payload\nif(payload){\n    global.set(\"deviceChange\", true);\n    global.set(\"device.rx.ffplay_size\", payload);\n    return;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5520,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "e7685ca77d90f76f",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay size",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.rx.ffplay_size",
        "payloadType": "global",
        "x": 5150,
        "y": 2240,
        "wires": [
            [
                "0b68cbbed95acffe"
            ]
        ]
    },
    {
        "id": "17d14c187e03e78d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay volume",
        "func": "let payload = msg.payload\nif(payload){\n    global.set(\"deviceChange\", true);\n    global.set(\"device.rx.ffplay_volume\", payload);\n    return;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5530,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "ce957a7adc0b6602",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay volume",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "device.rx.ffplay_volume",
        "payloadType": "global",
        "x": 5160,
        "y": 2320,
        "wires": [
            [
                "a7b99958c4999cf0"
            ]
        ]
    },
    {
        "id": "a7b99958c4999cf0",
        "type": "ui_slider",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "volume",
        "label": "",
        "tooltip": "ffplay volume",
        "group": "6140f866127cd620",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 5360,
        "y": 2320,
        "wires": [
            [
                "17d14c187e03e78d"
            ]
        ]
    },
    {
        "id": "cb3c608d488f8a50",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay size",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "device.rx.ffplay",
        "payloadType": "global",
        "x": 5150,
        "y": 2080,
        "wires": [
            [
                "0566516b8c2f5f60"
            ]
        ]
    },
    {
        "id": "7a37be749116f373",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "ffplay ontop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "device.rx.ffplay_ontop",
        "payloadType": "global",
        "x": 5150,
        "y": 2160,
        "wires": [
            [
                "e29b0f596d18b958"
            ]
        ]
    },
    {
        "id": "edf957ba7edd18f0",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "92c95af69a0592d1",
        "name": "function 5",
        "func": "let payload = msg.payload;\nif(payload.includes(\",myValue=true;\")) return;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 2880,
        "wires": [
            [
                "f5b8169559eb4b73"
            ]
        ]
    },
    {
        "id": "f5b8169559eb4b73",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "92c95af69a0592d1",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 2780,
        "wires": []
    },
    {
        "id": "a21fb06793441a8f",
        "type": "udp in",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "92c95af69a0592d1",
        "name": "",
        "iface": "",
        "port": "6789",
        "ipv": "udp4",
        "multicast": "true",
        "group": "232.0.0.11",
        "datatype": "utf8",
        "x": 1590,
        "y": 2780,
        "wires": [
            [
                "f5b8169559eb4b73"
            ]
        ]
    },
    {
        "id": "dd4535e1d6b65679",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "did bit change checker",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "bitratechange",
        "payloadType": "global",
        "x": 1310,
        "y": 120,
        "wires": [
            [
                "ac482a3670a2a148"
            ]
        ]
    },
    {
        "id": "ac482a3670a2a148",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "Calculate bitrate function",
        "func": "if (msg.payload) {\n    global.set(\"bitratechange\", false);\n    let sr = parseInt(global.get(\"device.tx.dvbs2.sr\")) / 1000;\n    global.set(\"settings.SR\", sr);\n    let audioBitRate = parseInt(global.get(\"settings.ABITRATE\"));\n    let videoBitRate = 0;\n    let fec = global.get(\"device.tx.dvbs2.fec\");\n    let modulation = global.get(\"device.tx.dvbs2.constel\");\n    // ALL THE CALCULATIONS ARE GONE!!! XD\n    let codec = global.get(\"settings.CODEC\");\n    let TSBitRate = global.get(\"device.tx.dvbs2.ts.bitrate\") / 1000;\n\n    if (sr > 20 && sr < 36)\n        videoBitRate = (TSBitRate * 0.50) - audioBitRate;\n    if (sr > 35 && sr < 67)\n        videoBitRate = (TSBitRate * 0.56) - audioBitRate;\n    if (sr > 66 && sr < 126)\n        videoBitRate = (TSBitRate * 0.66) - audioBitRate;\n    if (sr > 125 && sr < 251)\n        videoBitRate = (TSBitRate * 0.75) - audioBitRate;\n    if (sr > 250 && sr < 334)\n        videoBitRate = (TSBitRate * 0.81) - audioBitRate;\n    if (sr > 333 && sr < 501)\n        videoBitRate = (TSBitRate * 0.84) - audioBitRate;\n    if (sr > 500 && sr < 1001)\n        videoBitRate = (TSBitRate * 0.87) - audioBitRate;\n    if (sr > 1000 && sr < 1501)\n        videoBitRate = (TSBitRate * 0.88) - audioBitRate;\n    if (sr > 1500 && sr < 3001)\n        videoBitRate = (TSBitRate * 0.88) - audioBitRate;\n    switch (modulation) {\n        case \"qpsk\":\n            if (fec === \"1/4\") videoBitRate = (videoBitRate * 0.80);\n            if (fec === \"1/3\") videoBitRate = (videoBitRate * 0.87);\n            if (fec === \"2/5\") videoBitRate = (videoBitRate * 0.91);\n            if (fec === \"1/2\") videoBitRate = (videoBitRate * 0.94);\n            if (fec === \"3/5\") videoBitRate = (videoBitRate * 0.96);\n            if (fec === \"2/3\") videoBitRate = (videoBitRate * 0.98);\n            break;\n        case \"8psk\":\n            if (fec === \"3/5\") videoBitRate = videoBitRate * 1.01;\n            if (fec === \"2/3\") videoBitRate = videoBitRate * 1.01;\n            if (fec === \"3/4\") videoBitRate = videoBitRate * 1.01;\n            if (fec === \"5/6\") videoBitRate = videoBitRate * 1.02;\n            if (fec === \"8/9\") videoBitRate = videoBitRate * 1.02;\n            if (fec === \"9/10\") videoBitRate = videoBitRate * 1.02;\n            break;\n        case \"16apsk\":\n            if (fec === \"2/3\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"3/4\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"5/6\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"8/9\") videoBitRate = videoBitRate * 1.03;\n            if (fec === \"9/10\") videoBitRate = videoBitRate * 1.03;\n            break;\n        case \"32apsk\":\n            if (fec === \"3/4\") videoBitRate = videoBitRate * 1.04;\n            if (fec === \"5/6\") videoBitRate = videoBitRate * 1.04;\n            if (fec === \"8/9\") videoBitRate = videoBitRate * 1.04;\n            if (fec === \"9/10\") videoBitRate = videoBitRate * 1.04;\n            break;\n    }\n    // if (codec === \"libvvenc\") videoBitRate = videoBitRate * 0.95;   \n    global.set(\"settings.TSBITRATE\", TSBitRate);\n    msg.payload = TSBitRate;\n    global.set(\"settings.VBITRATE\", videoBitRate.toFixed(2));\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 120,
        "wires": [
            [
                "8c336280fd0fcc92"
            ]
        ]
    },
    {
        "id": "8c336280fd0fcc92",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "Settings manager",
        "func": "if (msg.payload !== 1) {\n    let jsonSettings = global.get(\"settings\");\n    msg.payload = JSON.stringify(jsonSettings);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 120,
        "wires": [
            [
                "8751a0dd93a8ed60",
                "1827c9f76c07664e"
            ]
        ]
    },
    {
        "id": "8751a0dd93a8ed60",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "",
        "filename": "settings.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1970,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d791940d6fb69cd4",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "bit",
        "topic": "",
        "name": "Bitrate settings changed",
        "x": 2130,
        "y": 80,
        "wires": []
    },
    {
        "id": "1827c9f76c07664e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "1473030260740438",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Bitrate changes saved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 80,
        "wires": [
            [
                "d791940d6fb69cd4"
            ]
        ]
    },
    {
        "id": "b115e827f5958c33",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "name": "",
        "url": "/spectrum",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "2d8d13aaf93f40dc"
            ]
        ]
    },
    {
        "id": "dcae1df31f4c48c6",
        "type": "http response",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "name": "",
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "2d8d13aaf93f40dc",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "name": "",
        "filename": "wb/spectrum.html",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "dcae1df31f4c48c6"
            ]
        ]
    },
    {
        "id": "2fccdd25faa09e10",
        "type": "ui_iframe",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "group": "235bdacf6041386f",
        "name": "spectrum iframe",
        "order": 1,
        "width": 32,
        "height": 11,
        "url": "/spectrum",
        "origin": "*",
        "scale": "93",
        "x": 360,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "542c8a5bb4913303",
        "type": "comment",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "name": "Spectrum comments",
        "info": "This was hacked together on a Saterday afternoon usign the javascript available on the [batc](https://eshail.batc.org.uk/wb) site\nSince path referencing cannot work this way, I had to include all the JS and CSS imports in one html file, minified ofc.\nThis works...",
        "x": 370,
        "y": 260,
        "wires": []
    },
    {
        "id": "5a74b55c01f09bf7",
        "type": "websocket in",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "28611a179255d92b",
        "name": "OT",
        "server": "",
        "client": "3e6a59708bbf6e6c",
        "x": 170,
        "y": 900,
        "wires": [
            [
                "df0fb204fd14a618"
            ]
        ]
    },
    {
        "id": "df0fb204fd14a618",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "28611a179255d92b",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 900,
        "wires": []
    },
    {
        "id": "31f91a40fbe9635c",
        "type": "http response",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "name": "",
        "x": 1010,
        "y": 260,
        "wires": []
    },
    {
        "id": "24353fa1e84c365f",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "name": "",
        "filename": "wb/chat.html",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 770,
        "y": 260,
        "wires": [
            [
                "31f91a40fbe9635c"
            ]
        ]
    },
    {
        "id": "0e2c3433f42c932c",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "name": "",
        "url": "/chat",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 580,
        "y": 260,
        "wires": [
            [
                "24353fa1e84c365f"
            ]
        ]
    },
    {
        "id": "4de0745ac50ff8b8",
        "type": "ui_iframe",
        "z": "2ec6a7ddfe0cd173",
        "g": "28611a179255d92b",
        "group": "d2e4abefdc42e427",
        "name": "",
        "order": 1,
        "width": "13",
        "height": "9",
        "url": "/chat",
        "origin": "*",
        "scale": 100,
        "x": 790,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "117e420d4df518b1",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "",
        "url": "/setRx",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 420,
        "wires": [
            [
                "b828f6a6.47d708",
                "2c6310aae8f397fd",
                "2a5a3cc2d63b2942",
                "8764be884d895f57"
            ]
        ]
    },
    {
        "id": "2a5a3cc2d63b2942",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "CTRL click symbol rate RX",
        "func": "let sr = Number(msg.payload.SR);\nsr = sr * 1000;\nmsg.payload = sr;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 420,
        "wires": [
            [
                "6e96b284f2323a85"
            ]
        ]
    },
    {
        "id": "6e96b284f2323a85",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "Send: longmynd rx sr",
        "func": "let payload = msg.payload;\nlet topic = \"cmd/longmynd/sr\";\nmsg.topic = topic;\nmsg.payload = payload;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 420,
        "wires": [
            [
                "ec3c6b8075f4f83f",
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "ec3c6b8075f4f83f",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "group": "9ed1d9a126995072",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "RX",
        "format": "{{msg.payload}} ",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1010,
        "y": 420,
        "wires": []
    },
    {
        "id": "6154ee8d719adfbd",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "position": "bottom left",
        "displayTime": "3",
        "highlight": "blue",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Longmynd",
        "name": "Longmynd",
        "x": 830,
        "y": 500,
        "wires": []
    },
    {
        "id": "7d18f3e7511a4c0f",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 730,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "11531a3595ef0f5a",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "Kill transmission",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 600,
        "wires": [
            [
                "aa4a256618f7c4a6"
            ]
        ]
    },
    {
        "id": "e56ed07756258705",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "busy watchdog",
        "func": "let busy = msg.payload.busy;\nif (busy === \"true\" && global.get(\"mute\") === \"0\") {\n    let freq = parseFloat(global.get(\"device.tx.frequency\")).toFixed(2);\n    let uplink = Math.round(Number(freq) / 1000000 * 4) / 4;\n    let payload =\n        Number(uplink) === Number(msg.payload.uplink) ?\n            \"You're transmitting on this channel... Hold CTRL and click to tune RX\" :\n            \"This channel is busy and you're transmitting... Hold CTRL and click to tune RX\";\n    msg.payload = payload;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 640,
        "wires": [
            [
                "7d18f3e7511a4c0f"
            ]
        ]
    },
    {
        "id": "8764be884d895f57",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "CTRL click notfication formatter",
        "func": "let payload = msg.payload;\npayload.downlink = Number(payload.downlink).toFixed(2);\npayload.SR = Number(payload.SR * 1000);\nmsg.payload = JSON.stringify(payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 500,
        "wires": [
            [
                "6154ee8d719adfbd",
                "e116baee5b34f457"
            ]
        ]
    },
    {
        "id": "2c6310aae8f397fd",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "CTRL click for RX frequency",
        "func": "let freq = Number(msg.payload.downlink);\nfreq = freq * 1000000;\nmsg.payload = freq; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 460,
        "wires": [
            [
                "64a9de4a4bd4dab6"
            ]
        ]
    },
    {
        "id": "b828f6a6.47d708",
        "type": "http response",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 390,
        "y": 520,
        "wires": []
    },
    {
        "id": "1052941d.efad6c",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "",
        "url": "/setTx",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "e56ed07756258705",
                "b828f6a6.47d708",
                "64b76a53a5576a2f",
                "63698f5f30341a43"
            ]
        ]
    },
    {
        "id": "64b76a53a5576a2f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "spectrum click tx frequency",
        "func": "let busy = msg.payload.busy;\nif (busy === \"true\" && global.get(\"mute\") === \"0\") return;\nif(msg.payload.tune) {\n    global.set(\"tune\", Boolean(msg.payload.tune));\n    if (msg.payload.uplink === \"2409.75\" && global.get(\"tune_table\").length === 26) global.set(\"tune_done\", true);\n}\nlet freq = Number(msg.payload.uplink);\nfreq = freq * 1000000\nmsg.payload = freq; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 560,
        "wires": [
            [
                "807128449158f2eb"
            ]
        ]
    },
    {
        "id": "63698f5f30341a43",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "spectrum click tx symbol rate if different",
        "func": "let busy = msg.payload.busy;\nif (busy === \"true\" && global.get(\"mute\") === \"0\") return;\n\nlet sr = parseFloat(msg.payload.SR);\nsr = sr * 1000000;\nif (`${sr}` !== global.get(\"device.tx.dvbs2.sr\")){\n    msg.payload = sr; \n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 600,
        "wires": [
            [
                "11531a3595ef0f5a",
                "89b95ad3b6453036"
            ]
        ]
    },
    {
        "id": "e1eb05d953534ef4",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "",
        "url": "/status",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "9917109abc4fd1ea"
            ]
        ]
    },
    {
        "id": "22865d9dc7aa2c4c",
        "type": "template",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{payload}}",
        "output": "str",
        "x": 660,
        "y": 740,
        "wires": [
            [
                "4781b40508c8aa40"
            ]
        ]
    },
    {
        "id": "9917109abc4fd1ea",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "get mute",
        "func": "let mute = global.get(\"mute\");\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 740,
        "wires": [
            [
                "22865d9dc7aa2c4c"
            ]
        ]
    },
    {
        "id": "4781b40508c8aa40",
        "type": "http response",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 740,
        "wires": []
    },
    {
        "id": "515e9264fb253fbc",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "tuning multicast message",
        "func": "let offset = Math.abs(global.get(\"device.rx.offset\")/1000); // kHz\nglobal.set(\"ffplay_title\", `Freq:${Number(msg.payload.downlink) * 1000}`);\nlet payload = `[GlobalMsg],Freq=${Number(msg.payload.downlink) * 1000},Offset=${offset},Doppler=0,Srate=${Number(msg.payload.SR) * 1000},WideScan=0,LowSR=0,DVBmode=Auto,FPlug=A,Voltage=0,22kHz=Off;`;\nmsg.payload = payload;\nglobal.set(\"last_rx_tune_udp\", payload);\nmsg.ip = global.get(\"device.rx.configIP\")\nmsg.port = 6789;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 820,
        "wires": [
            [
                "df0fb204fd14a618",
                "2f37f6fa43572da4",
                "33ec5c8c097de479"
            ]
        ]
    },
    {
        "id": "2f37f6fa43572da4",
        "type": "udp out",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "4466",
        "base64": false,
        "multicast": "multi",
        "x": 790,
        "y": 820,
        "wires": []
    },
    {
        "id": "3d529b46ee563149",
        "type": "http in",
        "z": "2ec6a7ddfe0cd173",
        "g": "185cc616489b2615",
        "name": "",
        "url": "/setTune",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 820,
        "wires": [
            [
                "b828f6a6.47d708",
                "515e9264fb253fbc"
            ]
        ]
    },
    {
        "id": "4d60c65180806536",
        "type": "comment",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "we read device ",
        "info": "",
        "x": 1340,
        "y": 780,
        "wires": []
    },
    {
        "id": "cd7a771d4df1122f",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "4bfefaeb7f82f4c6",
        "name": "",
        "filename": "device.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1370,
        "y": 720,
        "wires": [
            [
                "30312ad9e7c5689b"
            ]
        ]
    },
    {
        "id": "20fcf5f8b61db48f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "Send: NCO after SR change",
        "func": "let payload = global.get(\"device.tx.nco\")\nlet topic = `${global.get(\"cmdPath\")}/tx/nco`;\nmsg.topic = topic;\nmsg.payload = payload;\nglobal.set(\"deviceChange\", true);\nglobal.set(\"device.tx.nco\", payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3560,
        "y": 1640,
        "wires": [
            [
                "8a16f1f5708afd9e"
            ]
        ]
    },
    {
        "id": "9695655b0a719b4a",
        "type": "trigger",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "when we change symbol rates the nco changes, so we set it after a slight delay",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 3140,
        "y": 1860,
        "wires": [
            [
                "20fcf5f8b61db48f"
            ]
        ]
    },
    {
        "id": "f65818d390a71152",
        "type": "comment",
        "z": "2ec6a7ddfe0cd173",
        "g": "44bb8f59b40e58cf",
        "name": "the pluto doesn't report this change, yet frequency is off...",
        "info": "",
        "x": 3150,
        "y": 1820,
        "wires": []
    },
    {
        "id": "a944ecbfc565c58b",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "name": "check queue",
        "func": "if(msg.payload){    \n    let now = Date.now();\n    global.set(\"last_queue_check\", now);\n    global.set(\"queue_colour\", \"\");\n    if (global.get(\"last_queue\") - now < -2000){\n        global.set(\"queue_colour\", \"red\");\n    }\n    msg.payload = global.get(\"last_queue\") - now;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "f1d972d20ef54cf2",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 1050,
        "y": 1880,
        "wires": [
            [
                "a944ecbfc565c58b"
            ]
        ]
    },
    {
        "id": "ef310c8290b45f2f",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "set last timestamp",
        "func": "if(msg.payload){\n    let lastQueue = Date.now();\n    global.set(\"last_queue\", lastQueue);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "728cb5ecbddc04f0",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "color injector",
        "props": [
            {
                "p": "textColor",
                "v": "queue_colour",
                "vt": "global"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 540,
        "y": 1780,
        "wires": [
            [
                "b6d03834b636d44d"
            ]
        ]
    },
    {
        "id": "b22449c1178f10d2",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "queue_colour",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "9cb8fc791809bfd9",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 860,
        "y": 1840,
        "wires": [
            [
                "b22449c1178f10d2"
            ]
        ]
    },
    {
        "id": "5aec87e336f5bf99",
        "type": "ui_switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "Use minitioune",
        "label": "",
        "tooltip": "use minitioune",
        "group": "6140f866127cd620",
        "order": 4,
        "width": "1",
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 5360,
        "y": 2400,
        "wires": [
            [
                "cfdd9fffb83031de"
            ]
        ]
    },
    {
        "id": "cfdd9fffb83031de",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "use ffplay",
        "func": "let payload = msg.payload\nglobal.set(\"device.rx.use_minitioune\",  payload);\nglobal.set(\"deviceChange\", true);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5520,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "de67b561ba5031e9",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "158a8e642f8da366",
        "name": "minitioune",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "device.rx.use_minitioune",
        "payloadType": "global",
        "x": 5150,
        "y": 2400,
        "wires": [
            [
                "5aec87e336f5bf99"
            ]
        ]
    },
    {
        "id": "e116baee5b34f457",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "use minitioune check",
        "property": "device.rx.use_minitioune",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1780,
        "y": 2640,
        "wires": [
            [
                "865c9cd7fad69b04"
            ],
            [
                "517a7337244c67a7"
            ]
        ]
    },
    {
        "id": "33ec5c8c097de479",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "use minitioune check",
        "property": "device.rx.use_minitioune",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1780,
        "y": 2720,
        "wires": [
            [
                "865c9cd7fad69b04"
            ],
            [
                "517a7337244c67a7"
            ]
        ]
    },
    {
        "id": "03deb776667356fc",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "92c95af69a0592d1",
        "name": "Open ffplay",
        "group": "6140f866127cd620",
        "order": 3,
        "width": "2",
        "height": 1,
        "passthru": true,
        "label": "Ffplay",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2570,
        "y": 2600,
        "wires": [
            [
                "517a7337244c67a7"
            ]
        ]
    },
    {
        "id": "32e18f58d4f086f8",
        "type": "mqtt in",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "utf8",
        "broker": "16855981254e7e93",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 2540,
        "wires": [
            [
                "ba4a435e3fbcd377"
            ]
        ]
    },
    {
        "id": "1decf932a1bf2fcd",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "TS bitrate expected",
        "func": "msg.action = \"subscribe\"\nmsg.topic=\"dt/pluto/\" + global.get(\"device.callsign\")+ \"/tx/dvbs2/ts/bitrate\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2540,
        "wires": [
            [
                "32e18f58d4f086f8"
            ]
        ]
    },
    {
        "id": "ba4a435e3fbcd377",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "d320c7a134a3a36a",
        "name": "Global: ts bitrate expected",
        "func": "var payload = msg.payload;\nif (payload !== global.get(\"device.tx.dvbs2.ts.bitrate\") && global.get(\"device.tx.dvbs2.fecmode\") === \"fixed\"){\n    global.set(\"bitratechange\", true);\n    global.set(\"device.tx.dvbs2.ts.bitrate\", payload);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "8d58e07463dad267",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "name": "ts bytes to kilobytes",
        "func": "let payload = msg.payload;\nlet tsRate = (payload / 1000).toFixed(2);\nmsg.payload = tsRate;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 400,
        "wires": [
            [
                "5d929a20d665af8d"
            ]
        ]
    },
    {
        "id": "2d69c56629fd6ada",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ffplay",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ffplay_left_exit",
                "pt": "global",
                "to": "200",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "ffplay_top_exit",
                "pt": "global",
                "to": "200",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4580,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "71e94c828318f918",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "set ffplay exit coords",
        "func": "global.set(\"ffplay_left_exit\", global.get(\"ffplay_left\")+8);\nglobal.set(\"ffplay_top_exit\", global.get(\"ffplay_top\")+31);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4860,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "aed175dfbecd5c12",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "saver",
        "group": "da031ac17a307778",
        "order": 8,
        "width": "2",
        "height": 1,
        "passthru": false,
        "label": "Saver",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{p3_color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 4370,
        "y": 1400,
        "wires": [
            [
                "86a53ceb1364b3e0"
            ]
        ]
    },
    {
        "id": "152b6c29f84ec7c6",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "05f20235a9c45346",
        "name": "get ffplay window position",
        "func": "if(msg.payload === \"0\") return;\nlet dimensionArray = global.get(\"ffplay\");\nlet payload = msg.payload;\nlet indexTop = payload.indexOf(\"Top\");\nif (indexTop === 0) {\n    let indexEnd = payload.indexOf(\"\\n\");\n    let topStr = payload.substring(0, indexEnd);\n    let cleanStr = topStr.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n    let indexOfNumber = cleanStr.indexOf(\": \");\n    let number = cleanStr.substring(indexOfNumber + 2, cleanStr.length)\n    msg.top = number;\n    global.set(\"ffplay_top\", Number(number));\n    return msg;\n}\nlet indexLeft = payload.indexOf(\"Left\");\nif (indexLeft === 0) {\n    let indexEnd = payload.indexOf(\"\\n\");\n    let leftStr = payload.substring(0, indexEnd);\n    let cleanStr = leftStr.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n    let indexOfNumber = cleanStr.indexOf(\": \");\n    let number = cleanStr.substring(indexOfNumber + 2, cleanStr.length)\n    msg.left = number;\n    global.set(\"ffplay_left\", Number(number));\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4470,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "2a2a4d68c3558cc9",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "05f20235a9c45346",
        "command": "powershell scripts\\get_windows_position.ps1",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "find ffplay window",
        "x": 4210,
        "y": 2640,
        "wires": [
            [
                "152b6c29f84ec7c6"
            ],
            [],
            []
        ]
    },
    {
        "id": "26345a392c75d93d",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "05f20235a9c45346",
        "name": "check for ffplay",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 4020,
        "y": 2640,
        "wires": [
            [
                "2a2a4d68c3558cc9"
            ]
        ]
    },
    {
        "id": "0d83df21a3badfd8",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "name": "",
        "group": "e8adab232b1d4dce",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "VLC",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 3850,
        "y": 800,
        "wires": [
            [
                "ba28f83345465e97"
            ]
        ]
    },
    {
        "id": "ba28f83345465e97",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "command": "scripts\\vlc_run.bat",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "VLC",
        "x": 4030,
        "y": 800,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e7122ff60e30d850",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "command": "scripts\\dvbs_gui.lnk",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "DVB-S GUI",
        "x": 4050,
        "y": 860,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bd7080b9d634eebf",
        "type": "ui_button",
        "z": "2ec6a7ddfe0cd173",
        "g": "e6bc3a23f88991a3",
        "name": "DVBS GUI",
        "group": "e8adab232b1d4dce",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "DVBS GUI",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 3870,
        "y": 860,
        "wires": [
            [
                "e7122ff60e30d850"
            ]
        ]
    },
    {
        "id": "c6afd7e65035c339",
        "type": "status",
        "z": "2ec6a7ddfe0cd173",
        "g": "72ddf00d98862ef3",
        "name": "",
        "scope": [
            "25f28cc77302135e"
        ],
        "x": 3880,
        "y": 2160,
        "wires": [
            [
                "e4fe047c88b9b919"
            ]
        ]
    },
    {
        "id": "e4fe047c88b9b919",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "72ddf00d98862ef3",
        "name": "check for active ffplay",
        "func": "let payload = msg.payload;\nif (payload.hasOwnProperty(\"status\")) {\n    if (payload.status.hasOwnProperty('text')) {\n        if (payload.status.text.includes(\"pid:\")) {\n            msg.payload = \"busy\";\n            return msg;\n        }\n    }\n    if (payload.status.hasOwnProperty('text')) {\n        if (payload.status.text.includes(\"rc:0\")) {\n            msg.payload = \"dead\";\n            return msg;\n        }\n    }\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4100,
        "y": 2160,
        "wires": [
            [
                "7fb0cafd2acd88b7"
            ]
        ]
    },
    {
        "id": "7fb0cafd2acd88b7",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "d": true,
        "g": "72ddf00d98862ef3",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4300,
        "y": 2160,
        "wires": []
    },
    {
        "id": "d233942edd1dc8df",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "5ed3848da82bcc9a",
        "name": "constel",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1980,
        "y": 1500,
        "wires": [
            [
                "86a189cf7830c88d"
            ]
        ]
    },
    {
        "id": "9d65ce1e866729e6",
        "type": "ui_text",
        "z": "2ec6a7ddfe0cd173",
        "g": "78b656eeda23dc5a",
        "group": "9ed1d9a126995072",
        "order": 1,
        "width": "19",
        "height": "1",
        "name": "space",
        "label": " ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "2",
        "color": "#000000",
        "x": 1530,
        "y": 320,
        "wires": []
    },
    {
        "id": "870adb347b148820",
        "type": "exec",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "command": "ffmpeg\\ffmpeg.exe ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "Load custom",
        "x": 4970,
        "y": 1340,
        "wires": [
            [],
            [
                "380f24164e357a8f"
            ],
            []
        ]
    },
    {
        "id": "3c7d7c35ead08295",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "empty device array",
        "rules": [
            {
                "t": "set",
                "p": "device_array",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4310,
        "y": 580,
        "wires": [
            [
                "81e222ea9f35567c"
            ]
        ]
    },
    {
        "id": "40fa6e863c8479b7",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "video device",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.video_device",
        "payloadType": "global",
        "x": 4790,
        "y": 660,
        "wires": [
            [
                "061c529da56f288b"
            ]
        ]
    },
    {
        "id": "3d8ee5b781b696ce",
        "type": "inject",
        "z": "2ec6a7ddfe0cd173",
        "g": "6230aabbd2e27dba",
        "name": "audio device",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "settings.audio_device",
        "payloadType": "global",
        "x": 4830,
        "y": 520,
        "wires": [
            [
                "92680e051846903d"
            ]
        ]
    },
    {
        "id": "da2d9235ea59d48e",
        "type": "file in",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "load profile",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 5070,
        "y": 1140,
        "wires": [
            [
                "0e9c3a491a2a469e"
            ]
        ]
    },
    {
        "id": "0e9c3a491a2a469e",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "make JSON settings",
        "func": "let jsonSettings = JSON.parse(msg.payload);\nmsg.payload = jsonSettings;\nglobal.set(\"settings\", jsonSettings);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5280,
        "y": 1140,
        "wires": [
            [
                "59cffb16faf16e25"
            ]
        ]
    },
    {
        "id": "59cffb16faf16e25",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "set device settings",
        "func": "let payload = msg.payload;\nmsg.payload = payload;\nmsg.sr = payload.SR * 1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5510,
        "y": 1140,
        "wires": [
            [
                "32d2cf35c427d5be",
                "770f2093391eb417",
                "9dc24cfa530ed99e"
            ]
        ]
    },
    {
        "id": "32d2cf35c427d5be",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send FEC",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.FEC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5760,
        "y": 1140,
        "wires": [
            [
                "cec2f56be1fccf51"
            ]
        ]
    },
    {
        "id": "770f2093391eb417",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send SR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5760,
        "y": 1200,
        "wires": [
            [
                "89b95ad3b6453036"
            ]
        ]
    },
    {
        "id": "9dc24cfa530ed99e",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "send MODE",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.MODE",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5770,
        "y": 1260,
        "wires": [
            [
                "c5ceed661f8529ce"
            ]
        ]
    },
    {
        "id": "475f01a383d6b75e",
        "type": "switch",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "Save or load?",
        "property": "loading",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4880,
        "y": 1180,
        "wires": [
            [
                "da2d9235ea59d48e"
            ],
            [
                "3e225268e88814d4"
            ]
        ]
    },
    {
        "id": "3e225268e88814d4",
        "type": "file",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "save profile",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 5070,
        "y": 1200,
        "wires": [
            [
                "e733dc0c81143d51"
            ]
        ]
    },
    {
        "id": "86a53ceb1364b3e0",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "set saving",
        "rules": [
            {
                "t": "set",
                "p": "saving",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4600,
        "y": 1360,
        "wires": [
            [
                "181bc2bec72e1d2d"
            ]
        ]
    },
    {
        "id": "fc3424b338c6f01a",
        "type": "ui_toast",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "position": "top right",
        "displayTime": "4",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Profile saved",
        "x": 5430,
        "y": 1200,
        "wires": []
    },
    {
        "id": "e733dc0c81143d51",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Profile saved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5240,
        "y": 1200,
        "wires": [
            [
                "fc3424b338c6f01a",
                "e5b0fa3224166063"
            ]
        ]
    },
    {
        "id": "181bc2bec72e1d2d",
        "type": "function",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "button colors",
        "func": "if(msg.payload){\n    msg.p1_color = \"green\";\n    msg.p2_color = \"green\";\n    msg.p3_color = \"green\";\n    msg.p4_color = \"green\";\n    msg.p5_color = \"green\";\n    msg.p6_color = \"green\";\n    msg.p7_color = \"green\";\n    msg.p8_color = \"green\";\n    msg.p9_color = \"green\";\n    return msg;\n}\nmsg.p1_color = \"\";\nmsg.p2_color = \"\";\nmsg.p3_color = \"\";\nmsg.p4_color = \"\";\nmsg.p5_color = \"\";\nmsg.p6_color = \"\";\nmsg.p7_color = \"\";\nmsg.p8_color = \"\";\nmsg.p9_color = \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4150,
        "y": 1200,
        "wires": [
            [
                "37c0f70c56da77c5",
                "321917da5c241be6",
                "6bdd18a478266cdb",
                "e41f78ecb41096ea",
                "26d4847d4e66ef33",
                "b12e26636bc4a755",
                "4ecaf72037fc5448"
            ]
        ]
    },
    {
        "id": "e5b0fa3224166063",
        "type": "change",
        "z": "2ec6a7ddfe0cd173",
        "g": "78f7e24f56d510ed",
        "name": "set saving",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "saving",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3940,
        "y": 1260,
        "wires": [
            [
                "181bc2bec72e1d2d"
            ]
        ]
    },
    {
        "id": "f5a47dd605642e35",
        "type": "debug",
        "z": "2ec6a7ddfe0cd173",
        "g": "ba42e703170bee84",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 140,
        "wires": []
    }
]